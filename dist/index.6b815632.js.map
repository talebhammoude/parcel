{"mappings":"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S,GAAI,SAAS;QAAA,CAAC,CAC9B,IAAI,CAAC,GAAG,CAAC,CAAC;KACd;CACF;AACD,gQ,CAQA,SAAS,wBAAwB,CAAC,QAAwB,EAA1D;IACE,MAAM,SAAS,GAAG,QAAQ,CAAC,YAAY,EAAE,AAAC;IAC1C,OAAO,AAAA,CAAA,SAAS,KAAA,IAAA,IAAT,SAAS,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAT,SAAS,CAAE,IAAI,CAAA,KAAA,SAAA,CAAA,aAAA,CAAA,CAA2B;CACnD;A,M,M,G,e,A;A,M,S,G,Q,A;ACzDA,2mB,CAmBO,MAAM,MAAM,GAAG,IAAI,cAAM,CAAC,eAAe,CAAC,AAA1C;A,M,M,G,sB,A;A,M,M,G,4B,A;A,M,M,G,qB,A;A,M,M,G,4B,A;A,M,M,G,qB,A;A,M,M,G,gB,A;A,M,M,G,uB,A;A,M,M,G,oB,A;A,M,M,G,2B,A;A,M,M,G,qB,A;A,M,M,G,4B,A;A,M,M,G,yB,A;A,M,M,G,gC,A;A,M,M,G,qB,A;A,M,M,G,4B,A;A,M,M,G,uB,A;A,M,M,G,8B,A;A,M,M,G,yB,A;A,M,M,G,gC,A;A,M,M,G,mB,A;A,M,M,G,0B,A;A,M,M,G,qB,A;A,M,M,G,4B,A;A,M,I,G,U,A;A,M,O,G,O,A;ACnBP,2mB,CA2CA,mD,CAKa,MAAA,kBAAkB,GAAG,WAAA,AAAY;AAEvC,MAAM,mBAAmB,GAAG;IACjC,CAACA,MAAO,CAAA,EAAG,WAAW;IACtB,CAACC,MAAa,CAAA,EAAG,kBAAkB;IACnC,CAACC,MAAa,CAAA,EAAG,gBAAgB;IACjC,CAACC,MAAmB,CAAA,EAAG,uBAAuB;IAC9C,CAACC,MAAY,CAAA,EAAG,gBAAgB;IAChC,CAACC,MAAkB,CAAA,EAAG,uBAAuB;IAC7C,CAACC,MAAQ,CAAA,EAAG,WAAW;IACvB,CAACC,MAAc,CAAA,EAAG,kBAAkB;IACpC,CAACC,MAAY,CAAA,EAAG,WAAW;IAC3B,CAACC,MAAkB,CAAA,EAAG,kBAAkB;IACxC,CAACC,MAAa,CAAA,EAAG,SAAS;IAC1B,CAACC,MAAmB,CAAA,EAAG,gBAAgB;IACvC,CAACC,MAAiB,CAAA,EA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,iD,W;C,AAAA;A,wD,kB;C,AAAA;A,+C,S;C,AAAA;A,wD,kB;C,AAAA;A,2C,K;C,AAAA;A,6C,O;C,AAAA;A,+C,S;C,AAAA;A,wD,kB;C,AAAA;A,gD,U;C,AAAA;A,6C,O;C,AAAA;A,0C,I;C,AAAA;A,0D,oB;C,AAAA;A,qD,e;C,AAAA;A,4C,M;C,AAAA;A,+C,S;C,AAAA;A,mD,a;C,AAAA;A,8C,Q;C,AAAA;A,2C,K;C,AAAA;A,mD,a;C,AAAA;A,sD,gB;C,AAAA;A,kD,Y;C,AAAA;A,8C,Q;C,AAAA;A,yC,G;C,AAAA;A,4C,M;C,AAAA;A,6C,O;C,AAAA;A,iD,W;C,AAAA;A,uD,iB;C,AAAA;A,6C,O;C,AAAA;A,kD,Y;C,AAAA;A,uD,iB;C,AAAA;A,+C,S;C,AAAA;A,sD,gB;C,AAAA;A,sD,gB;C,AAAA;A,2D,qB;C,AAAA;A,+D,yB;C,AAAA;A,uD,iB;C,AAAA;;AAAA,2mB,CAiBA,2G,CAIa,MAAA,SAAS,GAAG;I,8E,CAIvB,WAAW,EAAE,KAAK;I,6E,CAIlB,UAAU,EAAE,KAAK;I,yC,CAKjB,WAAW,EAAE,mBAAmB;C,A;AClClC,2mB,CAmBA,+D,CAGa,MAAA,MAAM,GAAG,SAAU,SAAkB,EAAE,OAAe,EAAtD;IACX,IAAI,CAAC,SAAS,EACZ,MAAM,cAAc,CAAC,OAAO,CAAC,CAAC;CAElC,AAAE;AAEF,2D,CAGa,MAAA,cAAc,GAAG,SAAU,OAAe,EAA1C;IACX,OAAO,IAAI,KAAK,CACd,qBAAqB,GACnB,SAAS,CAAC,WAAW,GACrB,4BAA4B,GAC5B,OAAO,CACV,CAAC;CACJ,AAAA;ACtCA,2mB,CAiBA,MAAMC,mBAAiB,GAAG,SAAU,GAAW,EAA/C;I,2D;IAEE,MAAM,GAAG,GAAa,EAAE,AAAC;IACzB,IAAI,CAAC,GAAG,CAAC,AAAC;IACV,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,EAAE,CAAE;QACnC,IAAI,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,AAAC;QAC1B,IAAI,CAAC,GAAG,GAAG,EACT,GAAG,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C,CAAA,GAAG,GAAI,GAAG;YAAA,CAAC,CAClB,IAAI,CAAC,GAAG,CAAC,AAAC;YACb,IAAI,KAAK,IAAK,CAAA,cAAc,KAAA,IAAA,IAAd,cAAc,KAAA,KAAA,CAAA,GAAd,cAAc,GAAI,QAAQ,CAAC,QAAQ,CAAA,AAAC,EAChD,WAAW,CAAC;gBACV,KAAK,EAAE,QAAQ,CAAC,KAAK,CAAC,CAAC,WAAW,EAAoB;gBACtD,OAAO;gBACP,IAAI;gBACJ,IAAI,EAAE,QAAQ,CAAC,IAAI;aACpB,CAAC,CAAC;SAEN,CAAC;KAEL;CACH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;A;wC;A,6C;A,wB,S,U,A;;;A;wC;A,kD,Y;C,A;A,8C,Q;C,A;A,kD,Y;C,A;A,qD,e;C,A;A,uD,iB;C,A;A,gD,S;C,A;A,kD,W;C,A;A,oD,a;C,A;A,kE,e;C,A;A,6D,U;C,A;A,iE,0B;C,A;A,oD,a;C,A;A,yD,kB;C,A;A,2D,oB;C,A;A,2C,K;C,A;A,6D,uB;C,A;A,mD,a;C,A;A,2C,K;C,A;A,+C,S;C,A;A,6C,O;C,A;A,yC,G;C,A;A,iD,W;C,A;A,+C,S;C,A;A,8C,Q;C,A;A,+C,S;C,A;A,kD,Y;C,A;A,iD,W;C,A;A,yC,G;C,A;A,kD,Y;C,A;A,oD,c;C,A;A,kD,Y;C,A;A,oD,c;C,A;A,kD,Y;C,A;A,6C,O;C,A;A,kD,Y;C,A;A,gD,U;C,A;A,qD,e;C,A;A,kD,Y;C,A;A,0C,I;C,A;A,2C,K;C,A;A,yC,G;C,A;A,gD,U;C,A;A,4C,M;C,A;A,oD,c;C,A;A,qD,e;C,A;A,yC,G;C,A;A,iD,W;C,A;A,qD,e;C,A;A,gD,U;C,A;A,6C,O;C,A;A,4C,M;C,A;A,mC;A,+C;A,qC;A,yC;;A,M,I,G,oB,A;A,M,O,G,Q,A;AG3QA,2mB,CAiBA,sDAAA,CACO,IAAI,WAAW,GAAG,EAAE,AAAC;AAE5B,4F,CAIgB,SAAA,aAAa,CAAC,QAAe,EAA7B;IACd,WAAW,GAAG,QAAO,CAAC;CACxB;AC1BA,2mB,CAmBA,gW,CASa,MAAA,iBAAiB;I,6G,CAO5B,YAAoB,W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","sources":["node_modules/@parcel/runtime-browser-hmr/lib/runtime-1d63132973f037ba.js","src/app.ts","node_modules/firebase/app/dist/index.esm.js","node_modules/firebase/app/index.ts","node_modules/@firebase/app/dist/esm/index.esm2017.js","node_modules/@firebase/app/src/platformLoggerService.ts","node_modules/@firebase/app/src/logger.ts","node_modules/@firebase/app/src/constants.ts","node_modules/@firebase/app/src/internal.ts","node_modules/@firebase/app/src/errors.ts","node_modules/@firebase/app/src/firebaseApp.ts","node_modules/@firebase/app/src/api.ts","node_modules/@firebase/app/src/indexeddb.ts","node_modules/@firebase/app/src/heartbeatService.ts","node_modules/@firebase/app/src/registerCoreComponents.ts","node_modules/@firebase/app/src/index.ts","node_modules/@firebase/component/dist/esm/index.esm2017.js","node_modules/@firebase/component/src/component.ts","node_modules/@firebase/component/src/constants.ts","node_modules/@firebase/component/src/provider.ts","node_modules/@firebase/component/src/component_container.ts","node_modules/@firebase/util/dist/index.esm2017.js","node_modules/@firebase/util/src/constants.ts","node_modules/@firebase/util/src/assert.ts","node_modules/@firebase/util/src/crypt.ts","node_modules/@firebase/util/src/deepCopy.ts","node_modules/@firebase/util/src/deferred.ts","node_modules/@firebase/util/src/emulator.ts","node_modules/@firebase/util/src/environment.ts","node_modules/@firebase/util/src/errors.ts","node_modules/@firebase/util/src/json.ts","node_modules/@firebase/util/src/jwt.ts","node_modules/@firebase/util/src/obj.ts","node_modules/@firebase/util/src/query.ts","node_modules/@firebase/util/src/sha1.ts","node_modules/@firebase/util/src/subscribe.ts","node_modules/@firebase/util/src/validation.ts","node_modules/@firebase/util/src/utf8.ts","node_modules/@firebase/util/src/exponential_backoff.ts","node_modules/@firebase/util/src/formatters.ts","node_modules/@firebase/util/src/compat.ts","node_modules/@firebase/util/src/indexeddb.ts","node_modules/@parcel/transformer-js/src/esmodule-helpers.js","node_modules/@firebase/logger/dist/esm/index.esm2017.js","node_modules/@firebase/logger/src/logger.ts","node_modules/firebase/database/dist/index.esm.js","node_modules/@firebase/database/dist/index.esm2017.js","node_modules/@firebase/database/src/core/version.ts","node_modules/@firebase/database/src/core/storage/DOMStorageWrapper.ts","node_modules/@firebase/database/src/core/storage/MemoryStorage.ts","node_modules/@firebase/database/src/core/storage/storage.ts","node_modules/@firebase/database/src/core/util/util.ts","node_modules/@firebase/database/src/core/AppCheckTokenProvider.ts","node_modules/@firebase/database/src/core/AuthTokenProvider.ts","node_modules/@firebase/database/src/realtime/Constants.ts","node_modules/@firebase/database/src/core/RepoInfo.ts","node_modules/@firebase/database/src/core/stats/StatsCollection.ts","node_modules/@firebase/database/src/core/stats/StatsManager.ts","node_modules/@firebase/database/src/realtime/polling/PacketReceiver.ts","node_modules/@firebase/database/src/realtime/BrowserPollConnection.ts","node_modules/@firebase/database/src/realtime/WebSocketConnection.ts","node_modules/@firebase/database/src/realtime/TransportManager.ts","node_modules/@firebase/database/src/realtime/Connection.ts","node_modules/@firebase/database/src/core/ServerActions.ts","node_modules/@firebase/database/src/core/util/EventEmitter.ts","node_modules/@firebase/database/src/core/util/OnlineMonitor.ts","node_modules/@firebase/database/src/core/util/Path.ts","node_modules/@firebase/database/src/core/util/VisibilityMonitor.ts","node_modules/@firebase/database/src/core/PersistentConnection.ts","node_modules/@firebase/database/src/core/snap/Node.ts","node_modules/@firebase/database/src/core/snap/indexes/Index.ts","node_modules/@firebase/database/src/core/snap/indexes/KeyIndex.ts","node_modules/@firebase/database/src/core/util/SortedMap.ts","node_modules/@firebase/database/src/core/snap/comparators.ts","node_modules/@firebase/database/src/core/snap/snap.ts","node_modules/@firebase/database/src/core/snap/LeafNode.ts","node_modules/@firebase/database/src/core/snap/indexes/PriorityIndex.ts","node_modules/@firebase/database/src/core/snap/childSet.ts","node_modules/@firebase/database/src/core/snap/IndexMap.ts","node_modules/@firebase/database/src/core/snap/ChildrenNode.ts","node_modules/@firebase/database/src/core/snap/nodeFromJSON.ts","node_modules/@firebase/database/src/core/snap/indexes/PathIndex.ts","node_modules/@firebase/database/src/core/snap/indexes/ValueIndex.ts","node_modules/@firebase/database/src/core/util/NextPushId.ts","node_modules/@firebase/database/src/core/view/Change.ts","node_modules/@firebase/database/src/core/view/filter/IndexedFilter.ts","node_modules/@firebase/database/src/core/view/filter/RangedFilter.ts","node_modules/@firebase/database/src/core/view/filter/LimitedFilter.ts","node_modules/@firebase/database/src/core/view/QueryParams.ts","node_modules/@firebase/database/src/core/ReadonlyRestClient.ts","node_modules/@firebase/database/src/core/SnapshotHolder.ts","node_modules/@firebase/database/src/core/SparseSnapshotTree.ts","node_modules/@firebase/database/src/core/stats/StatsListener.ts","node_modules/@firebase/database/src/core/stats/StatsReporter.ts","node_modules/@firebase/database/src/core/operation/Operation.ts","node_modules/@firebase/database/src/core/operation/AckUserWrite.ts","node_modules/@firebase/database/src/core/operation/ListenComplete.ts","node_modules/@firebase/database/src/core/operation/Overwrite.ts","node_modules/@firebase/database/src/core/operation/Merge.ts","node_modules/@firebase/database/src/core/view/CacheNode.ts","node_modules/@firebase/database/src/core/view/EventGenerator.ts","node_modules/@firebase/database/src/core/view/ViewCache.ts","node_modules/@firebase/database/src/core/util/ImmutableTree.ts","node_modules/@firebase/database/src/core/CompoundWrite.ts","node_modules/@firebase/database/src/core/WriteTree.ts","node_modules/@firebase/database/src/core/view/ChildChangeAccumulator.ts","node_modules/@firebase/database/src/core/view/CompleteChildSource.ts","node_modules/@firebase/database/src/core/view/ViewProcessor.ts","node_modules/@firebase/database/src/core/view/View.ts","node_modules/@firebase/database/src/core/SyncPoint.ts","node_modules/@firebase/database/src/core/SyncTree.ts","node_modules/@firebase/database/src/core/util/ServerValues.ts","node_modules/@firebase/database/src/core/util/Tree.ts","node_modules/@firebase/database/src/core/util/validation.ts","node_modules/@firebase/database/src/core/view/EventQueue.ts","node_modules/@firebase/database/src/core/Repo.ts","node_modules/@firebase/database/src/core/util/libs/parser.ts","node_modules/@firebase/database/src/core/view/Event.ts","node_modules/@firebase/database/src/core/view/EventRegistration.ts","node_modules/@firebase/database/src/api/OnDisconnect.ts","node_modules/@firebase/database/src/api/Reference_impl.ts","node_modules/@firebase/database/src/api/Database.ts","node_modules/@firebase/database/src/register.ts","node_modules/@firebase/database/src/api/ServerValue.ts","node_modules/@firebase/database/src/api/Transaction.ts","node_modules/@firebase/database/src/api/test_access.ts","node_modules/@firebase/database/src/index.ts","node_modules/process/browser.js"],"sourcesContent":["var HMR_HOST = null;var HMR_PORT = null;var HMR_SECURE = false;var HMR_ENV_HASH = \"d6ea1d42532a7575\";module.bundle.HMR_BUNDLE_ID = \"0cf78e626b815632\";\"use strict\";\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n/* global HMR_HOST, HMR_PORT, HMR_ENV_HASH, HMR_SECURE */\n\n/*::\nimport type {\n  HMRAsset,\n  HMRMessage,\n} from '@parcel/reporter-dev-server/src/HMRServer.js';\ninterface ParcelRequire {\n  (string): mixed;\n  cache: {|[string]: ParcelModule|};\n  hotData: mixed;\n  Module: any;\n  parent: ?ParcelRequire;\n  isParcelRequire: true;\n  modules: {|[string]: [Function, {|[string]: string|}]|};\n  HMR_BUNDLE_ID: string;\n  root: ParcelRequire;\n}\ninterface ParcelModule {\n  hot: {|\n    data: mixed,\n    accept(cb: (Function) => void): void,\n    dispose(cb: (mixed) => void): void,\n    // accept(deps: Array<string> | string, cb: (Function) => void): void,\n    // decline(): void,\n    _acceptCallbacks: Array<(Function) => void>,\n    _disposeCallbacks: Array<(mixed) => void>,\n  |};\n}\ndeclare var module: {bundle: ParcelRequire, ...};\ndeclare var HMR_HOST: string;\ndeclare var HMR_PORT: string;\ndeclare var HMR_ENV_HASH: string;\ndeclare var HMR_SECURE: boolean;\n*/\nvar OVERLAY_ID = '__parcel__error__overlay__';\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function accept(fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function dispose(fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n  module.bundle.hotData = undefined;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets\n/*: {|[string]: boolean|} */\n, acceptedAssets\n/*: {|[string]: boolean|} */\n, assetsToAccept\n/*: Array<[ParcelRequire, string]> */\n;\n\nfunction getHostname() {\n  return HMR_HOST || (location.protocol.indexOf('http') === 0 ? location.hostname : 'localhost');\n}\n\nfunction getPort() {\n  return HMR_PORT || location.port;\n} // eslint-disable-next-line no-redeclare\n\n\nvar parent = module.bundle.parent;\n\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = getHostname();\n  var port = getPort();\n  var protocol = HMR_SECURE || location.protocol == 'https:' && !/localhost|127.0.0.1|0.0.0.0/.test(hostname) ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + (port ? ':' + port : '') + '/'); // $FlowFixMe\n\n  ws.onmessage = function (event\n  /*: {data: string, ...} */\n  ) {\n    checkedAssets = {}\n    /*: {|[string]: boolean|} */\n    ;\n    acceptedAssets = {}\n    /*: {|[string]: boolean|} */\n    ;\n    assetsToAccept = [];\n    var data\n    /*: HMRMessage */\n    = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      // Remove error overlay if there is one\n      if (typeof document !== 'undefined') {\n        removeErrorOverlay();\n      }\n\n      var assets = data.assets.filter(function (asset) {\n        return asset.envHash === HMR_ENV_HASH;\n      }); // Handle HMR Update\n\n      var handled = assets.every(function (asset) {\n        return asset.type === 'css' || asset.type === 'js' && hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle);\n      });\n\n      if (handled) {\n        console.clear();\n        assets.forEach(function (asset) {\n          hmrApply(module.bundle.root, asset);\n        });\n\n        for (var i = 0; i < assetsToAccept.length; i++) {\n          var id = assetsToAccept[i][1];\n\n          if (!acceptedAssets[id]) {\n            hmrAcceptRun(assetsToAccept[i][0], id);\n          }\n        }\n      } else {\n        window.location.reload();\n      }\n    }\n\n    if (data.type === 'error') {\n      // Log parcel errors to console\n      var _iterator = _createForOfIteratorHelper(data.diagnostics.ansi),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var ansiDiagnostic = _step.value;\n          var stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;\n          console.error('🚨 [parcel]: ' + ansiDiagnostic.message + '\\n' + stack + '\\n\\n' + ansiDiagnostic.hints.join('\\n'));\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      if (typeof document !== 'undefined') {\n        // Render the fancy html overlay\n        removeErrorOverlay();\n        var overlay = createErrorOverlay(data.diagnostics.html); // $FlowFixMe\n\n        document.body.appendChild(overlay);\n      }\n    }\n  };\n\n  ws.onerror = function (e) {\n    console.error(e.message);\n  };\n\n  ws.onclose = function () {\n    console.warn('[parcel] 🚨 Connection to the HMR server was lost');\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n\n  if (overlay) {\n    overlay.remove();\n    console.log('[parcel] ✨ Error resolved');\n  }\n}\n\nfunction createErrorOverlay(diagnostics) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n  var errorHTML = '<div style=\"background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;\">';\n\n  var _iterator2 = _createForOfIteratorHelper(diagnostics),\n      _step2;\n\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var diagnostic = _step2.value;\n      var stack = diagnostic.codeframe ? diagnostic.codeframe : diagnostic.stack;\n      errorHTML += \"\\n      <div>\\n        <div style=\\\"font-size: 18px; font-weight: bold; margin-top: 20px;\\\">\\n          \\uD83D\\uDEA8 \".concat(diagnostic.message, \"\\n        </div>\\n        <pre>\").concat(stack, \"</pre>\\n        <div>\\n          \").concat(diagnostic.hints.map(function (hint) {\n        return '<div>💡 ' + hint + '</div>';\n      }).join(''), \"\\n        </div>\\n        \").concat(diagnostic.documentation ? \"<div>\\uD83D\\uDCDD <a style=\\\"color: violet\\\" href=\\\"\".concat(diagnostic.documentation, \"\\\" target=\\\"_blank\\\">Learn more</a></div>\") : '', \"\\n      </div>\\n    \");\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n\n  errorHTML += '</div>';\n  overlay.innerHTML = errorHTML;\n  return overlay;\n}\n\nfunction getParents(bundle, id)\n/*: Array<[ParcelRequire, string]> */\n{\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n\n      if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) {\n        parents.push([bundle, k]);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction updateLink(link) {\n  var newLink = link.cloneNode();\n\n  newLink.onload = function () {\n    if (link.parentNode !== null) {\n      // $FlowFixMe\n      link.parentNode.removeChild(link);\n    }\n  };\n\n  newLink.setAttribute('href', // $FlowFixMe\n  link.getAttribute('href').split('?')[0] + '?' + Date.now()); // $FlowFixMe\n\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\n\nvar cssTimeout = null;\n\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n\n    for (var i = 0; i < links.length; i++) {\n      // $FlowFixMe[incompatible-type]\n      var href\n      /*: string */\n      = links[i].getAttribute('href');\n      var hostname = getHostname();\n      var servedFromHMRServer = hostname === 'localhost' ? new RegExp('^(https?:\\\\/\\\\/(0.0.0.0|127.0.0.1)|localhost):' + getPort()).test(href) : href.indexOf(hostname + ':' + getPort());\n      var absolute = /^https?:\\/\\//i.test(href) && href.indexOf(window.location.origin) !== 0 && !servedFromHMRServer;\n\n      if (!absolute) {\n        updateLink(links[i]);\n      }\n    }\n\n    cssTimeout = null;\n  }, 50);\n}\n\nfunction hmrApply(bundle\n/*: ParcelRequire */\n, asset\n/*:  HMRAsset */\n) {\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (asset.type === 'css') {\n    reloadCSS();\n  } else if (asset.type === 'js') {\n    var deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];\n\n    if (deps) {\n      if (modules[asset.id]) {\n        // Remove dependencies that are removed and will become orphaned.\n        // This is necessary so that if the asset is added back again, the cache is gone, and we prevent a full page reload.\n        var oldDeps = modules[asset.id][1];\n\n        for (var dep in oldDeps) {\n          if (!deps[dep] || deps[dep] !== oldDeps[dep]) {\n            var id = oldDeps[dep];\n            var parents = getParents(module.bundle.root, id);\n\n            if (parents.length === 1) {\n              hmrDelete(module.bundle.root, id);\n            }\n          }\n        }\n      }\n\n      var fn = new Function('require', 'module', 'exports', asset.output);\n      modules[asset.id] = [fn, deps];\n    } else if (bundle.parent) {\n      hmrApply(bundle.parent, asset);\n    }\n  }\n}\n\nfunction hmrDelete(bundle, id) {\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (modules[id]) {\n    // Collect dependencies that will become orphaned when this module is deleted.\n    var deps = modules[id][1];\n    var orphans = [];\n\n    for (var dep in deps) {\n      var parents = getParents(module.bundle.root, deps[dep]);\n\n      if (parents.length === 1) {\n        orphans.push(deps[dep]);\n      }\n    } // Delete the module. This must be done before deleting dependencies in case of circular dependencies.\n\n\n    delete modules[id];\n    delete bundle.cache[id]; // Now delete the orphans.\n\n    orphans.forEach(function (id) {\n      hmrDelete(module.bundle.root, id);\n    });\n  } else if (bundle.parent) {\n    hmrDelete(bundle.parent, id);\n  }\n}\n\nfunction hmrAcceptCheck(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n, depsByBundle\n/*: ?{ [string]: { [string]: string } }*/\n) {\n  if (hmrAcceptCheckOne(bundle, id, depsByBundle)) {\n    return true;\n  } // Traverse parents breadth first. All possible ancestries must accept the HMR update, or we'll reload.\n\n\n  var parents = getParents(module.bundle.root, id);\n  var accepted = false;\n\n  while (parents.length > 0) {\n    var v = parents.shift();\n    var a = hmrAcceptCheckOne(v[0], v[1], null);\n\n    if (a) {\n      // If this parent accepts, stop traversing upward, but still consider siblings.\n      accepted = true;\n    } else {\n      // Otherwise, queue the parents in the next level upward.\n      var p = getParents(module.bundle.root, v[1]);\n\n      if (p.length === 0) {\n        // If there are no parents, then we've reached an entry without accepting. Reload.\n        accepted = false;\n        break;\n      }\n\n      parents.push.apply(parents, _toConsumableArray(p));\n    }\n  }\n\n  return accepted;\n}\n\nfunction hmrAcceptCheckOne(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n, depsByBundle\n/*: ?{ [string]: { [string]: string } }*/\n) {\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {\n    // If we reached the root bundle without finding where the asset should go,\n    // there's nothing to do. Mark as \"accepted\" so we don't reload the page.\n    if (!bundle.parent) {\n      return true;\n    }\n\n    return hmrAcceptCheck(bundle.parent, id, depsByBundle);\n  }\n\n  if (checkedAssets[id]) {\n    return true;\n  }\n\n  checkedAssets[id] = true;\n  var cached = bundle.cache[id];\n  assetsToAccept.push([bundle, id]);\n\n  if (!cached || cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n}\n\nfunction hmrAcceptRun(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n\n  if (cached && cached.hot) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n  cached = bundle.cache[id];\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      var assetsToAlsoAccept = cb(function () {\n        return getParents(module.bundle.root, id);\n      });\n\n      if (assetsToAlsoAccept && assetsToAccept.length) {\n        // $FlowFixMe[method-unbinding]\n        assetsToAccept.push.apply(assetsToAccept, assetsToAlsoAccept);\n      }\n    });\n  }\n\n  acceptedAssets[id] = true;\n}","// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\nimport { getDatabase, ref, onValue, set } from \"firebase/database\";\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyCdAnlmX_mxn81UBIBOdlpZdiSmAjzmH10\",\r\n  authDomain: \"fe21-js2-801d6.firebaseapp.com\",\r\n  databaseURL:\r\n    \"https://fe21-js2-801d6-default-rtdb.europe-west1.firebasedatabase.app\",\r\n  projectId: \"fe21-js2-801d6\",\r\n  storageBucket: \"fe21-js2-801d6.appspot.com\",\r\n  messagingSenderId: \"150869399051\",\r\n  appId: \"1:150869399051:web:de572bfe1333dcd22d990e\",\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\n\r\n\r\n\r\nfunction readAllData () {\r\n\r\n  const db = getDatabase(app); //Databasen\r\n  const dbRef = ref(db, 'messages/' ); //En referens till hela databasen\r\n\r\n  onValue(dbRef,  (snapshot) => {\r\n  //  Vi får tillbaka en snapshot av databasen vid tidpunkten av ändringen\r\n\r\n    \r\n  //  vi kommer åt en lokal kopia av databasens innehåll i form av JS-objekt genom .val()\r\n    const data = snapshot.val();\r\n\r\n    \r\n    const dataToArr = Object.values(data);\r\n    console.log(dataToArr);\r\n    dataToArr.forEach((element: any)=>{\r\n      const theList = document.querySelector(\".chat-box\");\r\n      const li = document.createElement(\"li\");\r\n\r\n      li.appendChild(document.createTextNode(element.username + \": \"));\r\n      li.appendChild(document.createTextNode(element.theMsg));\r\n      theList.appendChild(li);\r\n\r\n\r\n    })\r\n    \r\n  });\r\n}\r\n\r\n  \r\nreadAllData();\r\n\r\n\r\n  const inputField = document.querySelector(\".msg-input-field\") as HTMLInputElement;\r\n  const sendButton = document.querySelector(\".send-btn\") as HTMLInputElement;\r\n  const theList = document.querySelector(\".chat-box\") as HTMLDivElement;\r\n\r\n\r\n\r\n\r\n  function writeMsgData(userId: number, name: string, theMsg: string) {\r\n    const db = getDatabase();\r\n    set(ref(db, 'messages/' + userId), {\r\n      username: name,\r\n      theMsg: theMsg,\r\n     \r\n    });\r\n  }\r\n\r\n\r\n  sendButton.addEventListener(\"click\", (e)=>{\r\n    e.preventDefault();\r\n    writeMsgData(Math.floor(Math.random() * 10), \"Talang\", inputField.value);\r\n    theList.innerHTML= \"\";\r\n    inputField.value = \"\";\r\n    readAllData();\r\n  });\r\n\r\n\r\n\r\n\r\n\r\n\r\n",null,"/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { registerVersion } from '@firebase/app';\nimport { name, version } from '../package.json';\n\nregisterVersion(name, version, 'app');\nexport * from '@firebase/app';\n",null,"/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  ComponentContainer,\n  ComponentType,\n  Provider,\n  Name\n} from '@firebase/component';\nimport { PlatformLoggerService, VersionService } from './types';\n\nexport class PlatformLoggerServiceImpl implements PlatformLoggerService {\n  constructor(private readonly container: ComponentContainer) {}\n  // In initial implementation, this will be called by installations on\n  // auth token refresh, and installations will send this string.\n  getPlatformInfoString(): string {\n    const providers = this.container.getProviders();\n    // Loop through providers and get library/version pairs from any that are\n    // version components.\n    return providers\n      .map(provider => {\n        if (isVersionServiceProvider(provider)) {\n          const service = provider.getImmediate() as VersionService;\n          return `${service.library}/${service.version}`;\n        } else {\n          return null;\n        }\n      })\n      .filter(logString => logString)\n      .join(' ');\n  }\n}\n/**\n *\n * @param provider check if this provider provides a VersionService\n *\n * NOTE: Using Provider<'app-version'> is a hack to indicate that the provider\n * provides VersionService. The provider is not necessarily a 'app-version'\n * provider.\n */\nfunction isVersionServiceProvider(provider: Provider<Name>): boolean {\n  const component = provider.getComponent();\n  return component?.type === ComponentType.VERSION;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Logger } from '@firebase/logger';\n\nexport const logger = new Logger('@firebase/app');\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { name as appName } from '../package.json';\nimport { name as appCompatName } from '../../app-compat/package.json';\nimport { name as analyticsCompatName } from '../../../packages/analytics-compat/package.json';\nimport { name as analyticsName } from '../../../packages/analytics/package.json';\nimport { name as appCheckCompatName } from '../../../packages/app-check-compat/package.json';\nimport { name as appCheckName } from '../../../packages/app-check/package.json';\nimport { name as authName } from '../../../packages/auth/package.json';\nimport { name as authCompatName } from '../../../packages/auth-compat/package.json';\nimport { name as databaseName } from '../../../packages/database/package.json';\nimport { name as databaseCompatName } from '../../../packages/database-compat/package.json';\nimport { name as functionsName } from '../../../packages/functions/package.json';\nimport { name as functionsCompatName } from '../../../packages/functions-compat/package.json';\nimport { name as installationsName } from '../../../packages/installations/package.json';\nimport { name as installationsCompatName } from '../../../packages/installations-compat/package.json';\nimport { name as messagingName } from '../../../packages/messaging/package.json';\nimport { name as messagingCompatName } from '../../../packages/messaging-compat/package.json';\nimport { name as performanceName } from '../../../packages/performance/package.json';\nimport { name as performanceCompatName } from '../../../packages/performance-compat/package.json';\nimport { name as remoteConfigName } from '../../../packages/remote-config/package.json';\nimport { name as remoteConfigCompatName } from '../../../packages/remote-config-compat/package.json';\nimport { name as storageName } from '../../../packages/storage/package.json';\nimport { name as storageCompatName } from '../../../packages/storage-compat/package.json';\nimport { name as firestoreName } from '../../../packages/firestore/package.json';\nimport { name as firestoreCompatName } from '../../../packages/firestore-compat/package.json';\nimport { name as packageName } from '../../../packages/firebase/package.json';\n\n/**\n * The default app name\n *\n * @internal\n */\nexport const DEFAULT_ENTRY_NAME = '[DEFAULT]';\n\nexport const PLATFORM_LOG_STRING = {\n  [appName]: 'fire-core',\n  [appCompatName]: 'fire-core-compat',\n  [analyticsName]: 'fire-analytics',\n  [analyticsCompatName]: 'fire-analytics-compat',\n  [appCheckName]: 'fire-app-check',\n  [appCheckCompatName]: 'fire-app-check-compat',\n  [authName]: 'fire-auth',\n  [authCompatName]: 'fire-auth-compat',\n  [databaseName]: 'fire-rtdb',\n  [databaseCompatName]: 'fire-rtdb-compat',\n  [functionsName]: 'fire-fn',\n  [functionsCompatName]: 'fire-fn-compat',\n  [installationsName]: 'fire-iid',\n  [installationsCompatName]: 'fire-iid-compat',\n  [messagingName]: 'fire-fcm',\n  [messagingCompatName]: 'fire-fcm-compat',\n  [performanceName]: 'fire-perf',\n  [performanceCompatName]: 'fire-perf-compat',\n  [remoteConfigName]: 'fire-rc',\n  [remoteConfigCompatName]: 'fire-rc-compat',\n  [storageName]: 'fire-gcs',\n  [storageCompatName]: 'fire-gcs-compat',\n  [firestoreName]: 'fire-fst',\n  [firestoreCompatName]: 'fire-fst-compat',\n  'fire-js': 'fire-js', // Platform identifier for JS SDK.\n  [packageName]: 'fire-js-all'\n} as const;\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp } from './public-types';\nimport { Component, Provider, Name } from '@firebase/component';\nimport { logger } from './logger';\nimport { DEFAULT_ENTRY_NAME } from './constants';\nimport { FirebaseAppImpl } from './firebaseApp';\n\n/**\n * @internal\n */\nexport const _apps = new Map<string, FirebaseApp>();\n\n/**\n * Registered components.\n *\n * @internal\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const _components = new Map<string, Component<any>>();\n\n/**\n * @param component - the component being added to this app's container\n *\n * @internal\n */\nexport function _addComponent<T extends Name>(\n  app: FirebaseApp,\n  component: Component<T>\n): void {\n  try {\n    (app as FirebaseAppImpl).container.addComponent(component);\n  } catch (e) {\n    logger.debug(\n      `Component ${component.name} failed to register with FirebaseApp ${app.name}`,\n      e\n    );\n  }\n}\n\n/**\n *\n * @internal\n */\nexport function _addOrOverwriteComponent(\n  app: FirebaseApp,\n  component: Component\n): void {\n  (app as FirebaseAppImpl).container.addOrOverwriteComponent(component);\n}\n\n/**\n *\n * @param component - the component to register\n * @returns whether or not the component is registered successfully\n *\n * @internal\n */\nexport function _registerComponent<T extends Name>(\n  component: Component<T>\n): boolean {\n  const componentName = component.name;\n  if (_components.has(componentName)) {\n    logger.debug(\n      `There were multiple attempts to register component ${componentName}.`\n    );\n\n    return false;\n  }\n\n  _components.set(componentName, component);\n\n  // add the component to existing app instances\n  for (const app of _apps.values()) {\n    _addComponent(app as FirebaseAppImpl, component);\n  }\n\n  return true;\n}\n\n/**\n *\n * @param app - FirebaseApp instance\n * @param name - service name\n *\n * @returns the provider for the service with the matching name\n *\n * @internal\n */\nexport function _getProvider<T extends Name>(\n  app: FirebaseApp,\n  name: T\n): Provider<T> {\n  const heartbeatController = (app as FirebaseAppImpl).container\n    .getProvider('heartbeat')\n    .getImmediate({ optional: true });\n  if (heartbeatController) {\n    void heartbeatController.triggerHeartbeat();\n  }\n  return (app as FirebaseAppImpl).container.getProvider(name);\n}\n\n/**\n *\n * @param app - FirebaseApp instance\n * @param name - service name\n * @param instanceIdentifier - service instance identifier in case the service supports multiple instances\n *\n * @internal\n */\nexport function _removeServiceInstance<T extends Name>(\n  app: FirebaseApp,\n  name: T,\n  instanceIdentifier: string = DEFAULT_ENTRY_NAME\n): void {\n  _getProvider(app, name).clearInstance(instanceIdentifier);\n}\n\n/**\n * Test only\n *\n * @internal\n */\nexport function _clearComponents(): void {\n  _components.clear();\n}\n\n/**\n * Exported in order to be used in app-compat package\n */\nexport { DEFAULT_ENTRY_NAME as _DEFAULT_ENTRY_NAME };\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ErrorFactory, ErrorMap } from '@firebase/util';\n\nexport const enum AppError {\n  NO_APP = 'no-app',\n  BAD_APP_NAME = 'bad-app-name',\n  DUPLICATE_APP = 'duplicate-app',\n  APP_DELETED = 'app-deleted',\n  INVALID_APP_ARGUMENT = 'invalid-app-argument',\n  INVALID_LOG_ARGUMENT = 'invalid-log-argument',\n  STORAGE_OPEN = 'storage-open',\n  STORAGE_GET = 'storage-get',\n  STORAGE_WRITE = 'storage-set',\n  STORAGE_DELETE = 'storage-delete'\n}\n\nconst ERRORS: ErrorMap<AppError> = {\n  [AppError.NO_APP]:\n    \"No Firebase App '{$appName}' has been created - \" +\n    'call Firebase App.initializeApp()',\n  [AppError.BAD_APP_NAME]: \"Illegal App name: '{$appName}\",\n  [AppError.DUPLICATE_APP]:\n    \"Firebase App named '{$appName}' already exists with different options or config\",\n  [AppError.APP_DELETED]: \"Firebase App named '{$appName}' already deleted\",\n  [AppError.INVALID_APP_ARGUMENT]:\n    'firebase.{$appName}() takes either no argument or a ' +\n    'Firebase App instance.',\n  [AppError.INVALID_LOG_ARGUMENT]:\n    'First argument to `onLog` must be null or a function.',\n  [AppError.STORAGE_OPEN]:\n    'Error thrown when opening storage. Original error: {$originalErrorMessage}.',\n  [AppError.STORAGE_GET]:\n    'Error thrown when reading from storage. Original error: {$originalErrorMessage}.',\n  [AppError.STORAGE_WRITE]:\n    'Error thrown when writing to storage. Original error: {$originalErrorMessage}.',\n  [AppError.STORAGE_DELETE]:\n    'Error thrown when deleting from storage. Original error: {$originalErrorMessage}.'\n};\n\ninterface ErrorParams {\n  [AppError.NO_APP]: { appName: string };\n  [AppError.BAD_APP_NAME]: { appName: string };\n  [AppError.DUPLICATE_APP]: { appName: string };\n  [AppError.APP_DELETED]: { appName: string };\n  [AppError.INVALID_APP_ARGUMENT]: { appName: string };\n  [AppError.STORAGE_OPEN]: { originalErrorMessage?: string };\n  [AppError.STORAGE_GET]: { originalErrorMessage?: string };\n  [AppError.STORAGE_WRITE]: { originalErrorMessage?: string };\n  [AppError.STORAGE_DELETE]: { originalErrorMessage?: string };\n}\n\nexport const ERROR_FACTORY = new ErrorFactory<AppError, ErrorParams>(\n  'app',\n  'Firebase',\n  ERRORS\n);\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FirebaseApp,\n  FirebaseOptions,\n  FirebaseAppSettings\n} from './public-types';\nimport {\n  ComponentContainer,\n  Component,\n  ComponentType\n} from '@firebase/component';\nimport { ERROR_FACTORY, AppError } from './errors';\n\nexport class FirebaseAppImpl implements FirebaseApp {\n  private readonly _options: FirebaseOptions;\n  private readonly _name: string;\n  /**\n   * Original config values passed in as a constructor parameter.\n   * It is only used to compare with another config object to support idempotent initializeApp().\n   *\n   * Updating automaticDataCollectionEnabled on the App instance will not change its value in _config.\n   */\n  private readonly _config: Required<FirebaseAppSettings>;\n  private _automaticDataCollectionEnabled: boolean;\n  private _isDeleted = false;\n  private readonly _container: ComponentContainer;\n\n  constructor(\n    options: FirebaseOptions,\n    config: Required<FirebaseAppSettings>,\n    container: ComponentContainer\n  ) {\n    this._options = { ...options };\n    this._config = { ...config };\n    this._name = config.name;\n    this._automaticDataCollectionEnabled =\n      config.automaticDataCollectionEnabled;\n    this._container = container;\n    this.container.addComponent(\n      new Component('app', () => this, ComponentType.PUBLIC)\n    );\n  }\n\n  get automaticDataCollectionEnabled(): boolean {\n    this.checkDestroyed();\n    return this._automaticDataCollectionEnabled;\n  }\n\n  set automaticDataCollectionEnabled(val: boolean) {\n    this.checkDestroyed();\n    this._automaticDataCollectionEnabled = val;\n  }\n\n  get name(): string {\n    this.checkDestroyed();\n    return this._name;\n  }\n\n  get options(): FirebaseOptions {\n    this.checkDestroyed();\n    return this._options;\n  }\n\n  get config(): Required<FirebaseAppSettings> {\n    this.checkDestroyed();\n    return this._config;\n  }\n\n  get container(): ComponentContainer {\n    return this._container;\n  }\n\n  get isDeleted(): boolean {\n    return this._isDeleted;\n  }\n\n  set isDeleted(val: boolean) {\n    this._isDeleted = val;\n  }\n\n  /**\n   * This function will throw an Error if the App has already been deleted -\n   * use before performing API actions on the App.\n   */\n  private checkDestroyed(): void {\n    if (this.isDeleted) {\n      throw ERROR_FACTORY.create(AppError.APP_DELETED, { appName: this._name });\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FirebaseApp,\n  FirebaseOptions,\n  FirebaseAppSettings\n} from './public-types';\nimport { DEFAULT_ENTRY_NAME, PLATFORM_LOG_STRING } from './constants';\nimport { ERROR_FACTORY, AppError } from './errors';\nimport {\n  ComponentContainer,\n  Component,\n  Name,\n  ComponentType\n} from '@firebase/component';\nimport { version } from '../../firebase/package.json';\nimport { FirebaseAppImpl } from './firebaseApp';\nimport { _apps, _components, _registerComponent } from './internal';\nimport { logger } from './logger';\nimport {\n  LogLevelString,\n  setLogLevel as setLogLevelImpl,\n  LogCallback,\n  LogOptions,\n  setUserLogHandler\n} from '@firebase/logger';\nimport { deepEqual } from '@firebase/util';\n\nexport { FirebaseError } from '@firebase/util';\n\n/**\n * The current SDK version.\n *\n * @public\n */\nexport const SDK_VERSION = version;\n\n/**\n * Creates and initializes a {@link @firebase/app#FirebaseApp} instance.\n *\n * See\n * {@link\n *   https://firebase.google.com/docs/web/setup#add_firebase_to_your_app\n *   | Add Firebase to your app} and\n * {@link\n *   https://firebase.google.com/docs/web/setup#multiple-projects\n *   | Initialize multiple projects} for detailed documentation.\n *\n * @example\n * ```javascript\n *\n * // Initialize default app\n * // Retrieve your own options values by adding a web app on\n * // https://console.firebase.google.com\n * initializeApp({\n *   apiKey: \"AIza....\",                             // Auth / General Use\n *   authDomain: \"YOUR_APP.firebaseapp.com\",         // Auth with popup/redirect\n *   databaseURL: \"https://YOUR_APP.firebaseio.com\", // Realtime Database\n *   storageBucket: \"YOUR_APP.appspot.com\",          // Storage\n *   messagingSenderId: \"123456789\"                  // Cloud Messaging\n * });\n * ```\n *\n * @example\n * ```javascript\n *\n * // Initialize another app\n * const otherApp = initializeApp({\n *   databaseURL: \"https://<OTHER_DATABASE_NAME>.firebaseio.com\",\n *   storageBucket: \"<OTHER_STORAGE_BUCKET>.appspot.com\"\n * }, \"otherApp\");\n * ```\n *\n * @param options - Options to configure the app's services.\n * @param name - Optional name of the app to initialize. If no name\n *   is provided, the default is `\"[DEFAULT]\"`.\n *\n * @returns The initialized app.\n *\n * @public\n */\nexport function initializeApp(\n  options: FirebaseOptions,\n  name?: string\n): FirebaseApp;\n/**\n * Creates and initializes a FirebaseApp instance.\n *\n * @param options - Options to configure the app's services.\n * @param config - FirebaseApp Configuration\n *\n * @public\n */\nexport function initializeApp(\n  options: FirebaseOptions,\n  config?: FirebaseAppSettings\n): FirebaseApp;\nexport function initializeApp(\n  options: FirebaseOptions,\n  rawConfig = {}\n): FirebaseApp {\n  if (typeof rawConfig !== 'object') {\n    const name = rawConfig;\n    rawConfig = { name };\n  }\n\n  const config: Required<FirebaseAppSettings> = {\n    name: DEFAULT_ENTRY_NAME,\n    automaticDataCollectionEnabled: false,\n    ...rawConfig\n  };\n  const name = config.name;\n\n  if (typeof name !== 'string' || !name) {\n    throw ERROR_FACTORY.create(AppError.BAD_APP_NAME, {\n      appName: String(name)\n    });\n  }\n\n  const existingApp = _apps.get(name) as FirebaseAppImpl;\n  if (existingApp) {\n    // return the existing app if options and config deep equal the ones in the existing app.\n    if (\n      deepEqual(options, existingApp.options) &&\n      deepEqual(config, existingApp.config)\n    ) {\n      return existingApp;\n    } else {\n      throw ERROR_FACTORY.create(AppError.DUPLICATE_APP, { appName: name });\n    }\n  }\n\n  const container = new ComponentContainer(name);\n  for (const component of _components.values()) {\n    container.addComponent(component);\n  }\n\n  const newApp = new FirebaseAppImpl(options, config, container);\n\n  _apps.set(name, newApp);\n\n  return newApp;\n}\n\n/**\n * Retrieves a {@link @firebase/app#FirebaseApp} instance.\n *\n * When called with no arguments, the default app is returned. When an app name\n * is provided, the app corresponding to that name is returned.\n *\n * An exception is thrown if the app being retrieved has not yet been\n * initialized.\n *\n * @example\n * ```javascript\n * // Return the default app\n * const app = getApp();\n * ```\n *\n * @example\n * ```javascript\n * // Return a named app\n * const otherApp = getApp(\"otherApp\");\n * ```\n *\n * @param name - Optional name of the app to return. If no name is\n *   provided, the default is `\"[DEFAULT]\"`.\n *\n * @returns The app corresponding to the provided app name.\n *   If no app name is provided, the default app is returned.\n *\n * @public\n */\nexport function getApp(name: string = DEFAULT_ENTRY_NAME): FirebaseApp {\n  const app = _apps.get(name);\n  if (!app) {\n    throw ERROR_FACTORY.create(AppError.NO_APP, { appName: name });\n  }\n\n  return app;\n}\n\n/**\n * A (read-only) array of all initialized apps.\n * @public\n */\nexport function getApps(): FirebaseApp[] {\n  return Array.from(_apps.values());\n}\n\n/**\n * Renders this app unusable and frees the resources of all associated\n * services.\n *\n * @example\n * ```javascript\n * deleteApp(app)\n *   .then(function() {\n *     console.log(\"App deleted successfully\");\n *   })\n *   .catch(function(error) {\n *     console.log(\"Error deleting app:\", error);\n *   });\n * ```\n *\n * @public\n */\nexport async function deleteApp(app: FirebaseApp): Promise<void> {\n  const name = app.name;\n  if (_apps.has(name)) {\n    _apps.delete(name);\n    await Promise.all(\n      (app as FirebaseAppImpl).container\n        .getProviders()\n        .map(provider => provider.delete())\n    );\n    (app as FirebaseAppImpl).isDeleted = true;\n  }\n}\n\n/**\n * Registers a library's name and version for platform logging purposes.\n * @param library - Name of 1p or 3p library (e.g. firestore, angularfire)\n * @param version - Current version of that library.\n * @param variant - Bundle variant, e.g., node, rn, etc.\n *\n * @public\n */\nexport function registerVersion(\n  libraryKeyOrName: string,\n  version: string,\n  variant?: string\n): void {\n  // TODO: We can use this check to whitelist strings when/if we set up\n  // a good whitelist system.\n  let library = PLATFORM_LOG_STRING[libraryKeyOrName] ?? libraryKeyOrName;\n  if (variant) {\n    library += `-${variant}`;\n  }\n  const libraryMismatch = library.match(/\\s|\\//);\n  const versionMismatch = version.match(/\\s|\\//);\n  if (libraryMismatch || versionMismatch) {\n    const warning = [\n      `Unable to register library \"${library}\" with version \"${version}\":`\n    ];\n    if (libraryMismatch) {\n      warning.push(\n        `library name \"${library}\" contains illegal characters (whitespace or \"/\")`\n      );\n    }\n    if (libraryMismatch && versionMismatch) {\n      warning.push('and');\n    }\n    if (versionMismatch) {\n      warning.push(\n        `version name \"${version}\" contains illegal characters (whitespace or \"/\")`\n      );\n    }\n    logger.warn(warning.join(' '));\n    return;\n  }\n  _registerComponent(\n    new Component(\n      `${library}-version` as Name,\n      () => ({ library, version }),\n      ComponentType.VERSION\n    )\n  );\n}\n\n/**\n * Sets log handler for all Firebase SDKs.\n * @param logCallback - An optional custom log handler that executes user code whenever\n * the Firebase SDK makes a logging call.\n *\n * @public\n */\nexport function onLog(\n  logCallback: LogCallback | null,\n  options?: LogOptions\n): void {\n  if (logCallback !== null && typeof logCallback !== 'function') {\n    throw ERROR_FACTORY.create(AppError.INVALID_LOG_ARGUMENT);\n  }\n  setUserLogHandler(logCallback, options);\n}\n\n/**\n * Sets log level for all Firebase SDKs.\n *\n * All of the log types above the current log level are captured (i.e. if\n * you set the log level to `info`, errors are logged, but `debug` and\n * `verbose` logs are not).\n *\n * @public\n */\nexport function setLogLevel(logLevel: LogLevelString): void {\n  setLogLevelImpl(logLevel);\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DBWrapper, openDB } from '@firebase/util';\nimport { AppError, ERROR_FACTORY } from './errors';\nimport { FirebaseApp } from './public-types';\nimport { HeartbeatsInIndexedDB } from './types';\nconst DB_NAME = 'firebase-heartbeat-database';\nconst DB_VERSION = 1;\nconst STORE_NAME = 'firebase-heartbeat-store';\n\nlet dbPromise: Promise<DBWrapper> | null = null;\nfunction getDbPromise(): Promise<DBWrapper> {\n  if (!dbPromise) {\n    dbPromise = openDB(DB_NAME, DB_VERSION, (db, oldVersion) => {\n      // We don't use 'break' in this switch statement, the fall-through\n      // behavior is what we want, because if there are multiple versions between\n      // the old version and the current version, we want ALL the migrations\n      // that correspond to those versions to run, not only the last one.\n      // eslint-disable-next-line default-case\n      switch (oldVersion) {\n        case 0:\n          db.createObjectStore(STORE_NAME);\n      }\n    }).catch(e => {\n      throw ERROR_FACTORY.create(AppError.STORAGE_OPEN, {\n        originalErrorMessage: e.message\n      });\n    });\n  }\n  return dbPromise;\n}\n\nexport async function readHeartbeatsFromIndexedDB(\n  app: FirebaseApp\n): Promise<HeartbeatsInIndexedDB | undefined> {\n  try {\n    const db = await getDbPromise();\n    return db\n      .transaction(STORE_NAME)\n      .objectStore(STORE_NAME)\n      .get(computeKey(app)) as Promise<HeartbeatsInIndexedDB | undefined>;\n  } catch (e) {\n    throw ERROR_FACTORY.create(AppError.STORAGE_GET, {\n      originalErrorMessage: e.message\n    });\n  }\n}\n\nexport async function writeHeartbeatsToIndexedDB(\n  app: FirebaseApp,\n  heartbeatObject: HeartbeatsInIndexedDB\n): Promise<void> {\n  try {\n    const db = await getDbPromise();\n    const tx = db.transaction(STORE_NAME, 'readwrite');\n    const objectStore = tx.objectStore(STORE_NAME);\n    await objectStore.put(heartbeatObject, computeKey(app));\n    return tx.complete;\n  } catch (e) {\n    throw ERROR_FACTORY.create(AppError.STORAGE_WRITE, {\n      originalErrorMessage: e.message\n    });\n  }\n}\n\nfunction computeKey(app: FirebaseApp): string {\n  return `${app.name}!${app.options.appId}`;\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ComponentContainer } from '@firebase/component';\nimport {\n  base64urlEncodeWithoutPadding,\n  isIndexedDBAvailable,\n  validateIndexedDBOpenable\n} from '@firebase/util';\nimport {\n  readHeartbeatsFromIndexedDB,\n  writeHeartbeatsToIndexedDB\n} from './indexeddb';\nimport { FirebaseApp } from './public-types';\nimport {\n  HeartbeatsByUserAgent,\n  HeartbeatService,\n  HeartbeatsInIndexedDB,\n  HeartbeatStorage,\n  SingleDateHeartbeat\n} from './types';\n\nconst MAX_HEADER_BYTES = 1024;\n// 30 days\nconst STORED_HEARTBEAT_RETENTION_MAX_MILLIS = 30 * 24 * 60 * 60 * 1000;\n\nexport class HeartbeatServiceImpl implements HeartbeatService {\n  /**\n   * The persistence layer for heartbeats\n   * Leave public for easier testing.\n   */\n  _storage: HeartbeatStorageImpl;\n\n  /**\n   * In-memory cache for heartbeats, used by getHeartbeatsHeader() to generate\n   * the header string.\n   * Stores one record per date. This will be consolidated into the standard\n   * format of one record per user agent string before being sent as a header.\n   * Populated from indexedDB when the controller is instantiated and should\n   * be kept in sync with indexedDB.\n   * Leave public for easier testing.\n   */\n  _heartbeatsCache: HeartbeatsInIndexedDB | null = null;\n\n  /**\n   * the initialization promise for populating heartbeatCache.\n   * If getHeartbeatsHeader() is called before the promise resolves\n   * (hearbeatsCache == null), it should wait for this promise\n   * Leave public for easier testing.\n   */\n  _heartbeatsCachePromise: Promise<HeartbeatsInIndexedDB>;\n  constructor(private readonly container: ComponentContainer) {\n    const app = this.container.getProvider('app').getImmediate();\n    this._storage = new HeartbeatStorageImpl(app);\n    this._heartbeatsCachePromise = this._storage.read().then(result => {\n      this._heartbeatsCache = result;\n      return result;\n    });\n  }\n\n  /**\n   * Called to report a heartbeat. The function will generate\n   * a HeartbeatsByUserAgent object, update heartbeatsCache, and persist it\n   * to IndexedDB.\n   * Note that we only store one heartbeat per day. So if a heartbeat for today is\n   * already logged, subsequent calls to this function in the same day will be ignored.\n   */\n  async triggerHeartbeat(): Promise<void> {\n    const platformLogger = this.container\n      .getProvider('platform-logger')\n      .getImmediate();\n\n    // This is the \"Firebase user agent\" string from the platform logger\n    // service, not the browser user agent.\n    const agent = platformLogger.getPlatformInfoString();\n    const date = getUTCDateString();\n    if (this._heartbeatsCache === null) {\n      this._heartbeatsCache = await this._heartbeatsCachePromise;\n    }\n    // Do not store a heartbeat if one is already stored for this day\n    // or if a header has already been sent today.\n    if (\n      this._heartbeatsCache.lastSentHeartbeatDate === date ||\n      this._heartbeatsCache.heartbeats.some(\n        singleDateHeartbeat => singleDateHeartbeat.date === date\n      )\n    ) {\n      return;\n    } else {\n      // There is no entry for this date. Create one.\n      this._heartbeatsCache.heartbeats.push({ date, agent });\n    }\n    // Remove entries older than 30 days.\n    this._heartbeatsCache.heartbeats = this._heartbeatsCache.heartbeats.filter(\n      singleDateHeartbeat => {\n        const hbTimestamp = new Date(singleDateHeartbeat.date).valueOf();\n        const now = Date.now();\n        return now - hbTimestamp <= STORED_HEARTBEAT_RETENTION_MAX_MILLIS;\n      }\n    );\n    return this._storage.overwrite(this._heartbeatsCache);\n  }\n\n  /**\n   * Returns a base64 encoded string which can be attached to the heartbeat-specific header directly.\n   * It also clears all heartbeats from memory as well as in IndexedDB.\n   *\n   * NOTE: Consuming product SDKs should not send the header if this method\n   * returns an empty string.\n   */\n  async getHeartbeatsHeader(): Promise<string> {\n    if (this._heartbeatsCache === null) {\n      await this._heartbeatsCachePromise;\n    }\n    // If it's still null or the array is empty, there is no data to send.\n    if (\n      this._heartbeatsCache === null ||\n      this._heartbeatsCache.heartbeats.length === 0\n    ) {\n      return '';\n    }\n    const date = getUTCDateString();\n    // Extract as many heartbeats from the cache as will fit under the size limit.\n    const { heartbeatsToSend, unsentEntries } = extractHeartbeatsForHeader(\n      this._heartbeatsCache.heartbeats\n    );\n    const headerString = base64urlEncodeWithoutPadding(\n      JSON.stringify({ version: 2, heartbeats: heartbeatsToSend })\n    );\n    // Store last sent date to prevent another being logged/sent for the same day.\n    this._heartbeatsCache.lastSentHeartbeatDate = date;\n    if (unsentEntries.length > 0) {\n      // Store any unsent entries if they exist.\n      this._heartbeatsCache.heartbeats = unsentEntries;\n      // This seems more likely than emptying the array (below) to lead to some odd state\n      // since the cache isn't empty and this will be called again on the next request,\n      // and is probably safest if we await it.\n      await this._storage.overwrite(this._heartbeatsCache);\n    } else {\n      this._heartbeatsCache.heartbeats = [];\n      // Do not wait for this, to reduce latency.\n      void this._storage.overwrite(this._heartbeatsCache);\n    }\n    return headerString;\n  }\n}\n\nfunction getUTCDateString(): string {\n  const today = new Date();\n  // Returns date format 'YYYY-MM-DD'\n  return today.toISOString().substring(0, 10);\n}\n\nexport function extractHeartbeatsForHeader(\n  heartbeatsCache: SingleDateHeartbeat[],\n  maxSize = MAX_HEADER_BYTES\n): {\n  heartbeatsToSend: HeartbeatsByUserAgent[];\n  unsentEntries: SingleDateHeartbeat[];\n} {\n  // Heartbeats grouped by user agent in the standard format to be sent in\n  // the header.\n  const heartbeatsToSend: HeartbeatsByUserAgent[] = [];\n  // Single date format heartbeats that are not sent.\n  let unsentEntries = heartbeatsCache.slice();\n  for (const singleDateHeartbeat of heartbeatsCache) {\n    // Look for an existing entry with the same user agent.\n    const heartbeatEntry = heartbeatsToSend.find(\n      hb => hb.agent === singleDateHeartbeat.agent\n    );\n    if (!heartbeatEntry) {\n      // If no entry for this user agent exists, create one.\n      heartbeatsToSend.push({\n        agent: singleDateHeartbeat.agent,\n        dates: [singleDateHeartbeat.date]\n      });\n      if (countBytes(heartbeatsToSend) > maxSize) {\n        // If the header would exceed max size, remove the added heartbeat\n        // entry and stop adding to the header.\n        heartbeatsToSend.pop();\n        break;\n      }\n    } else {\n      heartbeatEntry.dates.push(singleDateHeartbeat.date);\n      // If the header would exceed max size, remove the added date\n      // and stop adding to the header.\n      if (countBytes(heartbeatsToSend) > maxSize) {\n        heartbeatEntry.dates.pop();\n        break;\n      }\n    }\n    // Pop unsent entry from queue. (Skipped if adding the entry exceeded\n    // quota and the loop breaks early.)\n    unsentEntries = unsentEntries.slice(1);\n  }\n  return {\n    heartbeatsToSend,\n    unsentEntries\n  };\n}\n\nexport class HeartbeatStorageImpl implements HeartbeatStorage {\n  private _canUseIndexedDBPromise: Promise<boolean>;\n  constructor(public app: FirebaseApp) {\n    this._canUseIndexedDBPromise = this.runIndexedDBEnvironmentCheck();\n  }\n  async runIndexedDBEnvironmentCheck(): Promise<boolean> {\n    if (!isIndexedDBAvailable()) {\n      return false;\n    } else {\n      return validateIndexedDBOpenable()\n        .then(() => true)\n        .catch(() => false);\n    }\n  }\n  /**\n   * Read all heartbeats.\n   */\n  async read(): Promise<HeartbeatsInIndexedDB> {\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return { heartbeats: [] };\n    } else {\n      const idbHeartbeatObject = await readHeartbeatsFromIndexedDB(this.app);\n      return idbHeartbeatObject || { heartbeats: [] };\n    }\n  }\n  // overwrite the storage with the provided heartbeats\n  async overwrite(heartbeatsObject: HeartbeatsInIndexedDB): Promise<void> {\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return;\n    } else {\n      const existingHeartbeatsObject = await this.read();\n      return writeHeartbeatsToIndexedDB(this.app, {\n        lastSentHeartbeatDate:\n          heartbeatsObject.lastSentHeartbeatDate ??\n          existingHeartbeatsObject.lastSentHeartbeatDate,\n        heartbeats: heartbeatsObject.heartbeats\n      });\n    }\n  }\n  // add heartbeats\n  async add(heartbeatsObject: HeartbeatsInIndexedDB): Promise<void> {\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return;\n    } else {\n      const existingHeartbeatsObject = await this.read();\n      return writeHeartbeatsToIndexedDB(this.app, {\n        lastSentHeartbeatDate:\n          heartbeatsObject.lastSentHeartbeatDate ??\n          existingHeartbeatsObject.lastSentHeartbeatDate,\n        heartbeats: [\n          ...existingHeartbeatsObject.heartbeats,\n          ...heartbeatsObject.heartbeats\n        ]\n      });\n    }\n  }\n}\n\n/**\n * Calculate bytes of a HeartbeatsByUserAgent array after being wrapped\n * in a platform logging header JSON object, stringified, and converted\n * to base 64.\n */\nexport function countBytes(heartbeatsCache: HeartbeatsByUserAgent[]): number {\n  // base64 has a restricted set of characters, all of which should be 1 byte.\n  return base64urlEncodeWithoutPadding(\n    // heartbeatsCache wrapper properties\n    JSON.stringify({ version: 2, heartbeats: heartbeatsCache })\n  ).length;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ComponentType } from '@firebase/component';\nimport { PlatformLoggerServiceImpl } from './platformLoggerService';\nimport { name, version } from '../package.json';\nimport { _registerComponent } from './internal';\nimport { registerVersion } from './api';\nimport { HeartbeatServiceImpl } from './heartbeatService';\n\nexport function registerCoreComponents(variant?: string): void {\n  _registerComponent(\n    new Component(\n      'platform-logger',\n      container => new PlatformLoggerServiceImpl(container),\n      ComponentType.PRIVATE\n    )\n  );\n  _registerComponent(\n    new Component(\n      'heartbeat',\n      container => new HeartbeatServiceImpl(container),\n      ComponentType.PRIVATE\n    )\n  );\n\n  // Register `app` package.\n  registerVersion(name, version, variant);\n  // BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\n  registerVersion(name, version, '__BUILD_TARGET__');\n  // Register platform SDK identifier (no version).\n  registerVersion('fire-js', '');\n}\n","/**\n * Firebase App\n *\n * @remarks This package coordinates the communication between the different Firebase components\n * @packageDocumentation\n */\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { registerCoreComponents } from './registerCoreComponents';\n\nexport * from './api';\nexport * from './internal';\nexport * from './public-types';\n\nregisterCoreComponents('__RUNTIME_ENV__');\n",null,"/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  InstantiationMode,\n  InstanceFactory,\n  ComponentType,\n  Dictionary,\n  Name,\n  onInstanceCreatedCallback\n} from './types';\n\n/**\n * Component for service name T, e.g. `auth`, `auth-internal`\n */\nexport class Component<T extends Name = Name> {\n  multipleInstances = false;\n  /**\n   * Properties to be added to the service namespace\n   */\n  serviceProps: Dictionary = {};\n\n  instantiationMode = InstantiationMode.LAZY;\n\n  onInstanceCreated: onInstanceCreatedCallback<T> | null = null;\n\n  /**\n   *\n   * @param name The public service name, e.g. app, auth, firestore, database\n   * @param instanceFactory Service factory responsible for creating the public interface\n   * @param type whether the service provided by the component is public or private\n   */\n  constructor(\n    readonly name: T,\n    readonly instanceFactory: InstanceFactory<T>,\n    readonly type: ComponentType\n  ) {}\n\n  setInstantiationMode(mode: InstantiationMode): this {\n    this.instantiationMode = mode;\n    return this;\n  }\n\n  setMultipleInstances(multipleInstances: boolean): this {\n    this.multipleInstances = multipleInstances;\n    return this;\n  }\n\n  setServiceProps(props: Dictionary): this {\n    this.serviceProps = props;\n    return this;\n  }\n\n  setInstanceCreatedCallback(callback: onInstanceCreatedCallback<T>): this {\n    this.onInstanceCreated = callback;\n    return this;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const DEFAULT_ENTRY_NAME = '[DEFAULT]';\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Deferred } from '@firebase/util';\nimport { ComponentContainer } from './component_container';\nimport { DEFAULT_ENTRY_NAME } from './constants';\nimport {\n  InitializeOptions,\n  InstantiationMode,\n  Name,\n  NameServiceMapping,\n  OnInitCallBack\n} from './types';\nimport { Component } from './component';\n\n/**\n * Provider for instance for service name T, e.g. 'auth', 'auth-internal'\n * NameServiceMapping[T] is an alias for the type of the instance\n */\nexport class Provider<T extends Name> {\n  private component: Component<T> | null = null;\n  private readonly instances: Map<string, NameServiceMapping[T]> = new Map();\n  private readonly instancesDeferred: Map<\n    string,\n    Deferred<NameServiceMapping[T]>\n  > = new Map();\n  private readonly instancesOptions: Map<string, Record<string, unknown>> =\n    new Map();\n  private onInitCallbacks: Map<string, Set<OnInitCallBack<T>>> = new Map();\n\n  constructor(\n    private readonly name: T,\n    private readonly container: ComponentContainer\n  ) {}\n\n  /**\n   * @param identifier A provider can provide mulitple instances of a service\n   * if this.component.multipleInstances is true.\n   */\n  get(identifier?: string): Promise<NameServiceMapping[T]> {\n    // if multipleInstances is not supported, use the default name\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\n\n    if (!this.instancesDeferred.has(normalizedIdentifier)) {\n      const deferred = new Deferred<NameServiceMapping[T]>();\n      this.instancesDeferred.set(normalizedIdentifier, deferred);\n\n      if (\n        this.isInitialized(normalizedIdentifier) ||\n        this.shouldAutoInitialize()\n      ) {\n        // initialize the service if it can be auto-initialized\n        try {\n          const instance = this.getOrInitializeService({\n            instanceIdentifier: normalizedIdentifier\n          });\n          if (instance) {\n            deferred.resolve(instance);\n          }\n        } catch (e) {\n          // when the instance factory throws an exception during get(), it should not cause\n          // a fatal error. We just return the unresolved promise in this case.\n        }\n      }\n    }\n\n    return this.instancesDeferred.get(normalizedIdentifier)!.promise;\n  }\n\n  /**\n   *\n   * @param options.identifier A provider can provide mulitple instances of a service\n   * if this.component.multipleInstances is true.\n   * @param options.optional If optional is false or not provided, the method throws an error when\n   * the service is not immediately available.\n   * If optional is true, the method returns null if the service is not immediately available.\n   */\n  getImmediate(options: {\n    identifier?: string;\n    optional: true;\n  }): NameServiceMapping[T] | null;\n  getImmediate(options?: {\n    identifier?: string;\n    optional?: false;\n  }): NameServiceMapping[T];\n  getImmediate(options?: {\n    identifier?: string;\n    optional?: boolean;\n  }): NameServiceMapping[T] | null {\n    // if multipleInstances is not supported, use the default name\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(\n      options?.identifier\n    );\n    const optional = options?.optional ?? false;\n\n    if (\n      this.isInitialized(normalizedIdentifier) ||\n      this.shouldAutoInitialize()\n    ) {\n      try {\n        return this.getOrInitializeService({\n          instanceIdentifier: normalizedIdentifier\n        });\n      } catch (e) {\n        if (optional) {\n          return null;\n        } else {\n          throw e;\n        }\n      }\n    } else {\n      // In case a component is not initialized and should/can not be auto-initialized at the moment, return null if the optional flag is set, or throw\n      if (optional) {\n        return null;\n      } else {\n        throw Error(`Service ${this.name} is not available`);\n      }\n    }\n  }\n\n  getComponent(): Component<T> | null {\n    return this.component;\n  }\n\n  setComponent(component: Component<T>): void {\n    if (component.name !== this.name) {\n      throw Error(\n        `Mismatching Component ${component.name} for Provider ${this.name}.`\n      );\n    }\n\n    if (this.component) {\n      throw Error(`Component for ${this.name} has already been provided`);\n    }\n\n    this.component = component;\n\n    // return early without attempting to initialize the component if the component requires explicit initialization (calling `Provider.initialize()`)\n    if (!this.shouldAutoInitialize()) {\n      return;\n    }\n\n    // if the service is eager, initialize the default instance\n    if (isComponentEager(component)) {\n      try {\n        this.getOrInitializeService({ instanceIdentifier: DEFAULT_ENTRY_NAME });\n      } catch (e) {\n        // when the instance factory for an eager Component throws an exception during the eager\n        // initialization, it should not cause a fatal error.\n        // TODO: Investigate if we need to make it configurable, because some component may want to cause\n        // a fatal error in this case?\n      }\n    }\n\n    // Create service instances for the pending promises and resolve them\n    // NOTE: if this.multipleInstances is false, only the default instance will be created\n    // and all promises with resolve with it regardless of the identifier.\n    for (const [\n      instanceIdentifier,\n      instanceDeferred\n    ] of this.instancesDeferred.entries()) {\n      const normalizedIdentifier =\n        this.normalizeInstanceIdentifier(instanceIdentifier);\n\n      try {\n        // `getOrInitializeService()` should always return a valid instance since a component is guaranteed. use ! to make typescript happy.\n        const instance = this.getOrInitializeService({\n          instanceIdentifier: normalizedIdentifier\n        })!;\n        instanceDeferred.resolve(instance);\n      } catch (e) {\n        // when the instance factory throws an exception, it should not cause\n        // a fatal error. We just leave the promise unresolved.\n      }\n    }\n  }\n\n  clearInstance(identifier: string = DEFAULT_ENTRY_NAME): void {\n    this.instancesDeferred.delete(identifier);\n    this.instancesOptions.delete(identifier);\n    this.instances.delete(identifier);\n  }\n\n  // app.delete() will call this method on every provider to delete the services\n  // TODO: should we mark the provider as deleted?\n  async delete(): Promise<void> {\n    const services = Array.from(this.instances.values());\n\n    await Promise.all([\n      ...services\n        .filter(service => 'INTERNAL' in service) // legacy services\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        .map(service => (service as any).INTERNAL!.delete()),\n      ...services\n        .filter(service => '_delete' in service) // modularized services\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        .map(service => (service as any)._delete())\n    ]);\n  }\n\n  isComponentSet(): boolean {\n    return this.component != null;\n  }\n\n  isInitialized(identifier: string = DEFAULT_ENTRY_NAME): boolean {\n    return this.instances.has(identifier);\n  }\n\n  getOptions(identifier: string = DEFAULT_ENTRY_NAME): Record<string, unknown> {\n    return this.instancesOptions.get(identifier) || {};\n  }\n\n  initialize(opts: InitializeOptions = {}): NameServiceMapping[T] {\n    const { options = {} } = opts;\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(\n      opts.instanceIdentifier\n    );\n    if (this.isInitialized(normalizedIdentifier)) {\n      throw Error(\n        `${this.name}(${normalizedIdentifier}) has already been initialized`\n      );\n    }\n\n    if (!this.isComponentSet()) {\n      throw Error(`Component ${this.name} has not been registered yet`);\n    }\n\n    const instance = this.getOrInitializeService({\n      instanceIdentifier: normalizedIdentifier,\n      options\n    })!;\n\n    // resolve any pending promise waiting for the service instance\n    for (const [\n      instanceIdentifier,\n      instanceDeferred\n    ] of this.instancesDeferred.entries()) {\n      const normalizedDeferredIdentifier =\n        this.normalizeInstanceIdentifier(instanceIdentifier);\n      if (normalizedIdentifier === normalizedDeferredIdentifier) {\n        instanceDeferred.resolve(instance);\n      }\n    }\n\n    return instance;\n  }\n\n  /**\n   *\n   * @param callback - a function that will be invoked  after the provider has been initialized by calling provider.initialize().\n   * The function is invoked SYNCHRONOUSLY, so it should not execute any longrunning tasks in order to not block the program.\n   *\n   * @param identifier An optional instance identifier\n   * @returns a function to unregister the callback\n   */\n  onInit(callback: OnInitCallBack<T>, identifier?: string): () => void {\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\n    const existingCallbacks =\n      this.onInitCallbacks.get(normalizedIdentifier) ??\n      new Set<OnInitCallBack<T>>();\n    existingCallbacks.add(callback);\n    this.onInitCallbacks.set(normalizedIdentifier, existingCallbacks);\n\n    const existingInstance = this.instances.get(normalizedIdentifier);\n    if (existingInstance) {\n      callback(existingInstance, normalizedIdentifier);\n    }\n\n    return () => {\n      existingCallbacks.delete(callback);\n    };\n  }\n\n  /**\n   * Invoke onInit callbacks synchronously\n   * @param instance the service instance`\n   */\n  private invokeOnInitCallbacks(\n    instance: NameServiceMapping[T],\n    identifier: string\n  ): void {\n    const callbacks = this.onInitCallbacks.get(identifier);\n    if (!callbacks) {\n      return;\n    }\n    for (const callback of callbacks) {\n      try {\n        callback(instance, identifier);\n      } catch {\n        // ignore errors in the onInit callback\n      }\n    }\n  }\n\n  private getOrInitializeService({\n    instanceIdentifier,\n    options = {}\n  }: {\n    instanceIdentifier: string;\n    options?: Record<string, unknown>;\n  }): NameServiceMapping[T] | null {\n    let instance = this.instances.get(instanceIdentifier);\n    if (!instance && this.component) {\n      instance = this.component.instanceFactory(this.container, {\n        instanceIdentifier: normalizeIdentifierForFactory(instanceIdentifier),\n        options\n      });\n      this.instances.set(instanceIdentifier, instance);\n      this.instancesOptions.set(instanceIdentifier, options);\n\n      /**\n       * Invoke onInit listeners.\n       * Note this.component.onInstanceCreated is different, which is used by the component creator,\n       * while onInit listeners are registered by consumers of the provider.\n       */\n      this.invokeOnInitCallbacks(instance, instanceIdentifier);\n\n      /**\n       * Order is important\n       * onInstanceCreated() should be called after this.instances.set(instanceIdentifier, instance); which\n       * makes `isInitialized()` return true.\n       */\n      if (this.component.onInstanceCreated) {\n        try {\n          this.component.onInstanceCreated(\n            this.container,\n            instanceIdentifier,\n            instance\n          );\n        } catch {\n          // ignore errors in the onInstanceCreatedCallback\n        }\n      }\n    }\n\n    return instance || null;\n  }\n\n  private normalizeInstanceIdentifier(\n    identifier: string = DEFAULT_ENTRY_NAME\n  ): string {\n    if (this.component) {\n      return this.component.multipleInstances ? identifier : DEFAULT_ENTRY_NAME;\n    } else {\n      return identifier; // assume multiple instances are supported before the component is provided.\n    }\n  }\n\n  private shouldAutoInitialize(): boolean {\n    return (\n      !!this.component &&\n      this.component.instantiationMode !== InstantiationMode.EXPLICIT\n    );\n  }\n}\n\n// undefined should be passed to the service factory for the default instance\nfunction normalizeIdentifierForFactory(identifier: string): string | undefined {\n  return identifier === DEFAULT_ENTRY_NAME ? undefined : identifier;\n}\n\nfunction isComponentEager<T extends Name>(component: Component<T>): boolean {\n  return component.instantiationMode === InstantiationMode.EAGER;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Provider } from './provider';\nimport { Component } from './component';\nimport { Name } from './types';\n\n/**\n * ComponentContainer that provides Providers for service name T, e.g. `auth`, `auth-internal`\n */\nexport class ComponentContainer {\n  private readonly providers = new Map<string, Provider<Name>>();\n\n  constructor(private readonly name: string) {}\n\n  /**\n   *\n   * @param component Component being added\n   * @param overwrite When a component with the same name has already been registered,\n   * if overwrite is true: overwrite the existing component with the new component and create a new\n   * provider with the new component. It can be useful in tests where you want to use different mocks\n   * for different tests.\n   * if overwrite is false: throw an exception\n   */\n  addComponent<T extends Name>(component: Component<T>): void {\n    const provider = this.getProvider(component.name);\n    if (provider.isComponentSet()) {\n      throw new Error(\n        `Component ${component.name} has already been registered with ${this.name}`\n      );\n    }\n\n    provider.setComponent(component);\n  }\n\n  addOrOverwriteComponent<T extends Name>(component: Component<T>): void {\n    const provider = this.getProvider(component.name);\n    if (provider.isComponentSet()) {\n      // delete the existing provider from the container, so we can register the new component\n      this.providers.delete(component.name);\n    }\n\n    this.addComponent(component);\n  }\n\n  /**\n   * getProvider provides a type safe interface where it can only be called with a field name\n   * present in NameServiceMapping interface.\n   *\n   * Firebase SDKs providing services should extend NameServiceMapping interface to register\n   * themselves.\n   */\n  getProvider<T extends Name>(name: T): Provider<T> {\n    if (this.providers.has(name)) {\n      return this.providers.get(name) as unknown as Provider<T>;\n    }\n\n    // create a Provider for a service that hasn't registered with Firebase\n    const provider = new Provider<T>(name, this);\n    this.providers.set(name, provider as unknown as Provider<Name>);\n\n    return provider as Provider<T>;\n  }\n\n  getProviders(): Array<Provider<Name>> {\n    return Array.from(this.providers.values());\n  }\n}\n",null,"/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Firebase constants.  Some of these (@defines) can be overridden at compile-time.\n */\n\nexport const CONSTANTS = {\n  /**\n   * @define {boolean} Whether this is the client Node.js SDK.\n   */\n  NODE_CLIENT: false,\n  /**\n   * @define {boolean} Whether this is the Admin Node.js SDK.\n   */\n  NODE_ADMIN: false,\n\n  /**\n   * Firebase SDK Version\n   */\n  SDK_VERSION: '${JSCORE_VERSION}'\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CONSTANTS } from './constants';\n\n/**\n * Throws an error if the provided assertion is falsy\n */\nexport const assert = function (assertion: unknown, message: string): void {\n  if (!assertion) {\n    throw assertionError(message);\n  }\n};\n\n/**\n * Returns an Error object suitable for throwing.\n */\nexport const assertionError = function (message: string): Error {\n  return new Error(\n    'Firebase Database (' +\n      CONSTANTS.SDK_VERSION +\n      ') INTERNAL ASSERT FAILED: ' +\n      message\n  );\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst stringToByteArray = function (str: string): number[] {\n  // TODO(user): Use native implementations if/when available\n  const out: number[] = [];\n  let p = 0;\n  for (let i = 0; i < str.length; i++) {\n    let c = str.charCodeAt(i);\n    if (c < 128) {\n      out[p++] = c;\n    } else if (c < 2048) {\n      out[p++] = (c >> 6) | 192;\n      out[p++] = (c & 63) | 128;\n    } else if (\n      (c & 0xfc00) === 0xd800 &&\n      i + 1 < str.length &&\n      (str.charCodeAt(i + 1) & 0xfc00) === 0xdc00\n    ) {\n      // Surrogate Pair\n      c = 0x10000 + ((c & 0x03ff) << 10) + (str.charCodeAt(++i) & 0x03ff);\n      out[p++] = (c >> 18) | 240;\n      out[p++] = ((c >> 12) & 63) | 128;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    } else {\n      out[p++] = (c >> 12) | 224;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    }\n  }\n  return out;\n};\n\n/**\n * Turns an array of numbers into the string given by the concatenation of the\n * characters to which the numbers correspond.\n * @param bytes Array of numbers representing characters.\n * @return Stringification of the array.\n */\nconst byteArrayToString = function (bytes: number[]): string {\n  // TODO(user): Use native implementations if/when available\n  const out: string[] = [];\n  let pos = 0,\n    c = 0;\n  while (pos < bytes.length) {\n    const c1 = bytes[pos++];\n    if (c1 < 128) {\n      out[c++] = String.fromCharCode(c1);\n    } else if (c1 > 191 && c1 < 224) {\n      const c2 = bytes[pos++];\n      out[c++] = String.fromCharCode(((c1 & 31) << 6) | (c2 & 63));\n    } else if (c1 > 239 && c1 < 365) {\n      // Surrogate Pair\n      const c2 = bytes[pos++];\n      const c3 = bytes[pos++];\n      const c4 = bytes[pos++];\n      const u =\n        (((c1 & 7) << 18) | ((c2 & 63) << 12) | ((c3 & 63) << 6) | (c4 & 63)) -\n        0x10000;\n      out[c++] = String.fromCharCode(0xd800 + (u >> 10));\n      out[c++] = String.fromCharCode(0xdc00 + (u & 1023));\n    } else {\n      const c2 = bytes[pos++];\n      const c3 = bytes[pos++];\n      out[c++] = String.fromCharCode(\n        ((c1 & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63)\n      );\n    }\n  }\n  return out.join('');\n};\n\ninterface Base64 {\n  byteToCharMap_: { [key: number]: string } | null;\n  charToByteMap_: { [key: string]: number } | null;\n  byteToCharMapWebSafe_: { [key: number]: string } | null;\n  charToByteMapWebSafe_: { [key: string]: number } | null;\n  ENCODED_VALS_BASE: string;\n  readonly ENCODED_VALS: string;\n  readonly ENCODED_VALS_WEBSAFE: string;\n  HAS_NATIVE_SUPPORT: boolean;\n  encodeByteArray(input: number[] | Uint8Array, webSafe?: boolean): string;\n  encodeString(input: string, webSafe?: boolean): string;\n  decodeString(input: string, webSafe: boolean): string;\n  decodeStringToByteArray(input: string, webSafe: boolean): number[];\n  init_(): void;\n}\n\n// We define it as an object literal instead of a class because a class compiled down to es5 can't\n// be treeshaked. https://github.com/rollup/rollup/issues/1691\n// Static lookup maps, lazily populated by init_()\nexport const base64: Base64 = {\n  /**\n   * Maps bytes to characters.\n   */\n  byteToCharMap_: null,\n\n  /**\n   * Maps characters to bytes.\n   */\n  charToByteMap_: null,\n\n  /**\n   * Maps bytes to websafe characters.\n   * @private\n   */\n  byteToCharMapWebSafe_: null,\n\n  /**\n   * Maps websafe characters to bytes.\n   * @private\n   */\n  charToByteMapWebSafe_: null,\n\n  /**\n   * Our default alphabet, shared between\n   * ENCODED_VALS and ENCODED_VALS_WEBSAFE\n   */\n  ENCODED_VALS_BASE:\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZ' + 'abcdefghijklmnopqrstuvwxyz' + '0123456789',\n\n  /**\n   * Our default alphabet. Value 64 (=) is special; it means \"nothing.\"\n   */\n  get ENCODED_VALS() {\n    return this.ENCODED_VALS_BASE + '+/=';\n  },\n\n  /**\n   * Our websafe alphabet.\n   */\n  get ENCODED_VALS_WEBSAFE() {\n    return this.ENCODED_VALS_BASE + '-_.';\n  },\n\n  /**\n   * Whether this browser supports the atob and btoa functions. This extension\n   * started at Mozilla but is now implemented by many browsers. We use the\n   * ASSUME_* variables to avoid pulling in the full useragent detection library\n   * but still allowing the standard per-browser compilations.\n   *\n   */\n  HAS_NATIVE_SUPPORT: typeof atob === 'function',\n\n  /**\n   * Base64-encode an array of bytes.\n   *\n   * @param input An array of bytes (numbers with\n   *     value in [0, 255]) to encode.\n   * @param webSafe Boolean indicating we should use the\n   *     alternative alphabet.\n   * @return The base64 encoded string.\n   */\n  encodeByteArray(input: number[] | Uint8Array, webSafe?: boolean): string {\n    if (!Array.isArray(input)) {\n      throw Error('encodeByteArray takes an array as a parameter');\n    }\n\n    this.init_();\n\n    const byteToCharMap = webSafe\n      ? this.byteToCharMapWebSafe_!\n      : this.byteToCharMap_!;\n\n    const output = [];\n\n    for (let i = 0; i < input.length; i += 3) {\n      const byte1 = input[i];\n      const haveByte2 = i + 1 < input.length;\n      const byte2 = haveByte2 ? input[i + 1] : 0;\n      const haveByte3 = i + 2 < input.length;\n      const byte3 = haveByte3 ? input[i + 2] : 0;\n\n      const outByte1 = byte1 >> 2;\n      const outByte2 = ((byte1 & 0x03) << 4) | (byte2 >> 4);\n      let outByte3 = ((byte2 & 0x0f) << 2) | (byte3 >> 6);\n      let outByte4 = byte3 & 0x3f;\n\n      if (!haveByte3) {\n        outByte4 = 64;\n\n        if (!haveByte2) {\n          outByte3 = 64;\n        }\n      }\n\n      output.push(\n        byteToCharMap[outByte1],\n        byteToCharMap[outByte2],\n        byteToCharMap[outByte3],\n        byteToCharMap[outByte4]\n      );\n    }\n\n    return output.join('');\n  },\n\n  /**\n   * Base64-encode a string.\n   *\n   * @param input A string to encode.\n   * @param webSafe If true, we should use the\n   *     alternative alphabet.\n   * @return The base64 encoded string.\n   */\n  encodeString(input: string, webSafe?: boolean): string {\n    // Shortcut for Mozilla browsers that implement\n    // a native base64 encoder in the form of \"btoa/atob\"\n    if (this.HAS_NATIVE_SUPPORT && !webSafe) {\n      return btoa(input);\n    }\n    return this.encodeByteArray(stringToByteArray(input), webSafe);\n  },\n\n  /**\n   * Base64-decode a string.\n   *\n   * @param input to decode.\n   * @param webSafe True if we should use the\n   *     alternative alphabet.\n   * @return string representing the decoded value.\n   */\n  decodeString(input: string, webSafe: boolean): string {\n    // Shortcut for Mozilla browsers that implement\n    // a native base64 encoder in the form of \"btoa/atob\"\n    if (this.HAS_NATIVE_SUPPORT && !webSafe) {\n      return atob(input);\n    }\n    return byteArrayToString(this.decodeStringToByteArray(input, webSafe));\n  },\n\n  /**\n   * Base64-decode a string.\n   *\n   * In base-64 decoding, groups of four characters are converted into three\n   * bytes.  If the encoder did not apply padding, the input length may not\n   * be a multiple of 4.\n   *\n   * In this case, the last group will have fewer than 4 characters, and\n   * padding will be inferred.  If the group has one or two characters, it decodes\n   * to one byte.  If the group has three characters, it decodes to two bytes.\n   *\n   * @param input Input to decode.\n   * @param webSafe True if we should use the web-safe alphabet.\n   * @return bytes representing the decoded value.\n   */\n  decodeStringToByteArray(input: string, webSafe: boolean): number[] {\n    this.init_();\n\n    const charToByteMap = webSafe\n      ? this.charToByteMapWebSafe_!\n      : this.charToByteMap_!;\n\n    const output: number[] = [];\n\n    for (let i = 0; i < input.length; ) {\n      const byte1 = charToByteMap[input.charAt(i++)];\n\n      const haveByte2 = i < input.length;\n      const byte2 = haveByte2 ? charToByteMap[input.charAt(i)] : 0;\n      ++i;\n\n      const haveByte3 = i < input.length;\n      const byte3 = haveByte3 ? charToByteMap[input.charAt(i)] : 64;\n      ++i;\n\n      const haveByte4 = i < input.length;\n      const byte4 = haveByte4 ? charToByteMap[input.charAt(i)] : 64;\n      ++i;\n\n      if (byte1 == null || byte2 == null || byte3 == null || byte4 == null) {\n        throw Error();\n      }\n\n      const outByte1 = (byte1 << 2) | (byte2 >> 4);\n      output.push(outByte1);\n\n      if (byte3 !== 64) {\n        const outByte2 = ((byte2 << 4) & 0xf0) | (byte3 >> 2);\n        output.push(outByte2);\n\n        if (byte4 !== 64) {\n          const outByte3 = ((byte3 << 6) & 0xc0) | byte4;\n          output.push(outByte3);\n        }\n      }\n    }\n\n    return output;\n  },\n\n  /**\n   * Lazy static initialization function. Called before\n   * accessing any of the static map variables.\n   * @private\n   */\n  init_() {\n    if (!this.byteToCharMap_) {\n      this.byteToCharMap_ = {};\n      this.charToByteMap_ = {};\n      this.byteToCharMapWebSafe_ = {};\n      this.charToByteMapWebSafe_ = {};\n\n      // We want quick mappings back and forth, so we precompute two maps.\n      for (let i = 0; i < this.ENCODED_VALS.length; i++) {\n        this.byteToCharMap_[i] = this.ENCODED_VALS.charAt(i);\n        this.charToByteMap_[this.byteToCharMap_[i]] = i;\n        this.byteToCharMapWebSafe_[i] = this.ENCODED_VALS_WEBSAFE.charAt(i);\n        this.charToByteMapWebSafe_[this.byteToCharMapWebSafe_[i]] = i;\n\n        // Be forgiving when decoding and correctly decode both encodings.\n        if (i >= this.ENCODED_VALS_BASE.length) {\n          this.charToByteMap_[this.ENCODED_VALS_WEBSAFE.charAt(i)] = i;\n          this.charToByteMapWebSafe_[this.ENCODED_VALS.charAt(i)] = i;\n        }\n      }\n    }\n  }\n};\n\n/**\n * URL-safe base64 encoding\n */\nexport const base64Encode = function (str: string): string {\n  const utf8Bytes = stringToByteArray(str);\n  return base64.encodeByteArray(utf8Bytes, true);\n};\n\n/**\n * URL-safe base64 encoding (without \".\" padding in the end).\n * e.g. Used in JSON Web Token (JWT) parts.\n */\nexport const base64urlEncodeWithoutPadding = function (str: string): string {\n  // Use base64url encoding and remove padding in the end (dot characters).\n  return base64Encode(str).replace(/\\./g, '');\n};\n\n/**\n * URL-safe base64 decoding\n *\n * NOTE: DO NOT use the global atob() function - it does NOT support the\n * base64Url variant encoding.\n *\n * @param str To be decoded\n * @return Decoded result, if possible\n */\nexport const base64Decode = function (str: string): string | null {\n  try {\n    return base64.decodeString(str, true);\n  } catch (e) {\n    console.error('base64Decode failed: ', e);\n  }\n  return null;\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Do a deep-copy of basic JavaScript Objects or Arrays.\n */\nexport function deepCopy<T>(value: T): T {\n  return deepExtend(undefined, value) as T;\n}\n\n/**\n * Copy properties from source to target (recursively allows extension\n * of Objects and Arrays).  Scalar values in the target are over-written.\n * If target is undefined, an object of the appropriate type will be created\n * (and returned).\n *\n * We recursively copy all child properties of plain Objects in the source- so\n * that namespace- like dictionaries are merged.\n *\n * Note that the target can be a function, in which case the properties in\n * the source Object are copied onto it as static properties of the Function.\n *\n * Note: we don't merge __proto__ to prevent prototype pollution\n */\nexport function deepExtend(target: unknown, source: unknown): unknown {\n  if (!(source instanceof Object)) {\n    return source;\n  }\n\n  switch (source.constructor) {\n    case Date:\n      // Treat Dates like scalars; if the target date object had any child\n      // properties - they will be lost!\n      const dateValue = source as Date;\n      return new Date(dateValue.getTime());\n\n    case Object:\n      if (target === undefined) {\n        target = {};\n      }\n      break;\n    case Array:\n      // Always copy the array source and overwrite the target.\n      target = [];\n      break;\n\n    default:\n      // Not a plain Object - treat it as a scalar.\n      return source;\n  }\n\n  for (const prop in source) {\n    // use isValidKey to guard against prototype pollution. See https://snyk.io/vuln/SNYK-JS-LODASH-450202\n    if (!source.hasOwnProperty(prop) || !isValidKey(prop)) {\n      continue;\n    }\n    (target as Record<string, unknown>)[prop] = deepExtend(\n      (target as Record<string, unknown>)[prop],\n      (source as Record<string, unknown>)[prop]\n    );\n  }\n\n  return target;\n}\n\nfunction isValidKey(key: string): boolean {\n  return key !== '__proto__';\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class Deferred<R> {\n  promise: Promise<R>;\n  reject: (value?: unknown) => void = () => {};\n  resolve: (value?: unknown) => void = () => {};\n  constructor() {\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = resolve as (value?: unknown) => void;\n      this.reject = reject as (value?: unknown) => void;\n    });\n  }\n\n  /**\n   * Our API internals are not promiseified and cannot because our callback APIs have subtle expectations around\n   * invoking promises inline, which Promises are forbidden to do. This method accepts an optional node-style callback\n   * and returns a node-style callback which will resolve or reject the Deferred's promise.\n   */\n  wrapCallback(\n    callback?: (error?: unknown, value?: unknown) => void\n  ): (error: unknown, value?: unknown) => void {\n    return (error, value?) => {\n      if (error) {\n        this.reject(error);\n      } else {\n        this.resolve(value);\n      }\n      if (typeof callback === 'function') {\n        // Attaching noop handler just in case developer wasn't expecting\n        // promises\n        this.promise.catch(() => {});\n\n        // Some of our callbacks don't expect a value and our own tests\n        // assert that the parameter length is 1\n        if (callback.length === 1) {\n          callback(error);\n        } else {\n          callback(error, value);\n        }\n      }\n    };\n  }\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { base64urlEncodeWithoutPadding } from './crypt';\n\n// Firebase Auth tokens contain snake_case claims following the JWT standard / convention.\n/* eslint-disable camelcase */\n\nexport type FirebaseSignInProvider =\n  | 'custom'\n  | 'email'\n  | 'password'\n  | 'phone'\n  | 'anonymous'\n  | 'google.com'\n  | 'facebook.com'\n  | 'github.com'\n  | 'twitter.com'\n  | 'microsoft.com'\n  | 'apple.com';\n\ninterface FirebaseIdToken {\n  // Always set to https://securetoken.google.com/PROJECT_ID\n  iss: string;\n\n  // Always set to PROJECT_ID\n  aud: string;\n\n  // The user's unique ID\n  sub: string;\n\n  // The token issue time, in seconds since epoch\n  iat: number;\n\n  // The token expiry time, normally 'iat' + 3600\n  exp: number;\n\n  // The user's unique ID. Must be equal to 'sub'\n  user_id: string;\n\n  // The time the user authenticated, normally 'iat'\n  auth_time: number;\n\n  // The sign in provider, only set when the provider is 'anonymous'\n  provider_id?: 'anonymous';\n\n  // The user's primary email\n  email?: string;\n\n  // The user's email verification status\n  email_verified?: boolean;\n\n  // The user's primary phone number\n  phone_number?: string;\n\n  // The user's display name\n  name?: string;\n\n  // The user's profile photo URL\n  picture?: string;\n\n  // Information on all identities linked to this user\n  firebase: {\n    // The primary sign-in provider\n    sign_in_provider: FirebaseSignInProvider;\n\n    // A map of providers to the user's list of unique identifiers from\n    // each provider\n    identities?: { [provider in FirebaseSignInProvider]?: string[] };\n  };\n\n  // Custom claims set by the developer\n  [claim: string]: unknown;\n\n  uid?: never; // Try to catch a common mistake of \"uid\" (should be \"sub\" instead).\n}\n\nexport type EmulatorMockTokenOptions = ({ user_id: string } | { sub: string }) &\n  Partial<FirebaseIdToken>;\n\nexport function createMockUserToken(\n  token: EmulatorMockTokenOptions,\n  projectId?: string\n): string {\n  if (token.uid) {\n    throw new Error(\n      'The \"uid\" field is no longer supported by mockUserToken. Please use \"sub\" instead for Firebase Auth User ID.'\n    );\n  }\n  // Unsecured JWTs use \"none\" as the algorithm.\n  const header = {\n    alg: 'none',\n    type: 'JWT'\n  };\n\n  const project = projectId || 'demo-project';\n  const iat = token.iat || 0;\n  const sub = token.sub || token.user_id;\n  if (!sub) {\n    throw new Error(\"mockUserToken must contain 'sub' or 'user_id' field!\");\n  }\n\n  const payload: FirebaseIdToken = {\n    // Set all required fields to decent defaults\n    iss: `https://securetoken.google.com/${project}`,\n    aud: project,\n    iat,\n    exp: iat + 3600,\n    auth_time: iat,\n    sub,\n    user_id: sub,\n    firebase: {\n      sign_in_provider: 'custom',\n      identities: {}\n    },\n\n    // Override with user options\n    ...token\n  };\n\n  // Unsecured JWTs use the empty string as a signature.\n  const signature = '';\n  return [\n    base64urlEncodeWithoutPadding(JSON.stringify(header)),\n    base64urlEncodeWithoutPadding(JSON.stringify(payload)),\n    signature\n  ].join('.');\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CONSTANTS } from './constants';\n\n/**\n * Returns navigator.userAgent string or '' if it's not defined.\n * @return user agent string\n */\nexport function getUA(): string {\n  if (\n    typeof navigator !== 'undefined' &&\n    typeof navigator['userAgent'] === 'string'\n  ) {\n    return navigator['userAgent'];\n  } else {\n    return '';\n  }\n}\n\n/**\n * Detect Cordova / PhoneGap / Ionic frameworks on a mobile device.\n *\n * Deliberately does not rely on checking `file://` URLs (as this fails PhoneGap\n * in the Ripple emulator) nor Cordova `onDeviceReady`, which would normally\n * wait for a callback.\n */\nexport function isMobileCordova(): boolean {\n  return (\n    typeof window !== 'undefined' &&\n    // @ts-ignore Setting up an broadly applicable index signature for Window\n    // just to deal with this case would probably be a bad idea.\n    !!(window['cordova'] || window['phonegap'] || window['PhoneGap']) &&\n    /ios|iphone|ipod|ipad|android|blackberry|iemobile/i.test(getUA())\n  );\n}\n\n/**\n * Detect Node.js.\n *\n * @return true if Node.js environment is detected.\n */\n// Node detection logic from: https://github.com/iliakan/detect-node/\nexport function isNode(): boolean {\n  try {\n    return (\n      Object.prototype.toString.call(global.process) === '[object process]'\n    );\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Detect Browser Environment\n */\nexport function isBrowser(): boolean {\n  return typeof self === 'object' && self.self === self;\n}\n\n/**\n * Detect browser extensions (Chrome and Firefox at least).\n */\ninterface BrowserRuntime {\n  id?: unknown;\n}\ndeclare const chrome: { runtime?: BrowserRuntime };\ndeclare const browser: { runtime?: BrowserRuntime };\nexport function isBrowserExtension(): boolean {\n  const runtime =\n    typeof chrome === 'object'\n      ? chrome.runtime\n      : typeof browser === 'object'\n      ? browser.runtime\n      : undefined;\n  return typeof runtime === 'object' && runtime.id !== undefined;\n}\n\n/**\n * Detect React Native.\n *\n * @return true if ReactNative environment is detected.\n */\nexport function isReactNative(): boolean {\n  return (\n    typeof navigator === 'object' && navigator['product'] === 'ReactNative'\n  );\n}\n\n/** Detects Electron apps. */\nexport function isElectron(): boolean {\n  return getUA().indexOf('Electron/') >= 0;\n}\n\n/** Detects Internet Explorer. */\nexport function isIE(): boolean {\n  const ua = getUA();\n  return ua.indexOf('MSIE ') >= 0 || ua.indexOf('Trident/') >= 0;\n}\n\n/** Detects Universal Windows Platform apps. */\nexport function isUWP(): boolean {\n  return getUA().indexOf('MSAppHost/') >= 0;\n}\n\n/**\n * Detect whether the current SDK build is the Node version.\n *\n * @return true if it's the Node SDK build.\n */\nexport function isNodeSdk(): boolean {\n  return CONSTANTS.NODE_CLIENT === true || CONSTANTS.NODE_ADMIN === true;\n}\n\n/** Returns true if we are running in Safari. */\nexport function isSafari(): boolean {\n  return (\n    !isNode() &&\n    navigator.userAgent.includes('Safari') &&\n    !navigator.userAgent.includes('Chrome')\n  );\n}\n\n/**\n * This method checks if indexedDB is supported by current browser/service worker context\n * @return true if indexedDB is supported by current browser/service worker context\n */\nexport function isIndexedDBAvailable(): boolean {\n  return typeof indexedDB === 'object';\n}\n\n/**\n * This method validates browser/sw context for indexedDB by opening a dummy indexedDB database and reject\n * if errors occur during the database open operation.\n *\n * @throws exception if current browser/sw context can't run idb.open (ex: Safari iframe, Firefox\n * private browsing)\n */\nexport function validateIndexedDBOpenable(): Promise<boolean> {\n  return new Promise((resolve, reject) => {\n    try {\n      let preExist: boolean = true;\n      const DB_CHECK_NAME =\n        'validate-browser-context-for-indexeddb-analytics-module';\n      const request = self.indexedDB.open(DB_CHECK_NAME);\n      request.onsuccess = () => {\n        request.result.close();\n        // delete database only when it doesn't pre-exist\n        if (!preExist) {\n          self.indexedDB.deleteDatabase(DB_CHECK_NAME);\n        }\n        resolve(true);\n      };\n      request.onupgradeneeded = () => {\n        preExist = false;\n      };\n\n      request.onerror = () => {\n        reject(request.error?.message || '');\n      };\n    } catch (error) {\n      reject(error);\n    }\n  });\n}\n\n/**\n *\n * This method checks whether cookie is enabled within current browser\n * @return true if cookie is enabled within current browser\n */\nexport function areCookiesEnabled(): boolean {\n  if (typeof navigator === 'undefined' || !navigator.cookieEnabled) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * Polyfill for `globalThis` object.\n * @returns the `globalThis` object for the given environment.\n */\nexport function getGlobal(): typeof globalThis {\n  if (typeof self !== 'undefined') {\n    return self;\n  }\n  if (typeof window !== 'undefined') {\n    return window;\n  }\n  if (typeof global !== 'undefined') {\n    return global;\n  }\n  throw new Error('Unable to locate global object.');\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @fileoverview Standardized Firebase Error.\n *\n * Usage:\n *\n *   // Typescript string literals for type-safe codes\n *   type Err =\n *     'unknown' |\n *     'object-not-found'\n *     ;\n *\n *   // Closure enum for type-safe error codes\n *   // at-enum {string}\n *   var Err = {\n *     UNKNOWN: 'unknown',\n *     OBJECT_NOT_FOUND: 'object-not-found',\n *   }\n *\n *   let errors: Map<Err, string> = {\n *     'generic-error': \"Unknown error\",\n *     'file-not-found': \"Could not find file: {$file}\",\n *   };\n *\n *   // Type-safe function - must pass a valid error code as param.\n *   let error = new ErrorFactory<Err>('service', 'Service', errors);\n *\n *   ...\n *   throw error.create(Err.GENERIC);\n *   ...\n *   throw error.create(Err.FILE_NOT_FOUND, {'file': fileName});\n *   ...\n *   // Service: Could not file file: foo.txt (service/file-not-found).\n *\n *   catch (e) {\n *     assert(e.message === \"Could not find file: foo.txt.\");\n *     if (e.code === 'service/file-not-found') {\n *       console.log(\"Could not read file: \" + e['file']);\n *     }\n *   }\n */\n\nexport type ErrorMap<ErrorCode extends string> = {\n  readonly [K in ErrorCode]: string;\n};\n\nconst ERROR_NAME = 'FirebaseError';\n\nexport interface StringLike {\n  toString(): string;\n}\n\nexport interface ErrorData {\n  [key: string]: unknown;\n}\n\n// Based on code from:\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#Custom_Error_Types\nexport class FirebaseError extends Error {\n  /** The custom name for all FirebaseErrors. */\n  readonly name: string = ERROR_NAME;\n\n  constructor(\n    /** The error code for this error. */\n    readonly code: string,\n    message: string,\n    /** Custom data for this error. */\n    public customData?: Record<string, unknown>\n  ) {\n    super(message);\n\n    // Fix For ES5\n    // https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n    Object.setPrototypeOf(this, FirebaseError.prototype);\n\n    // Maintains proper stack trace for where our error was thrown.\n    // Only available on V8.\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, ErrorFactory.prototype.create);\n    }\n  }\n}\n\nexport class ErrorFactory<\n  ErrorCode extends string,\n  ErrorParams extends { readonly [K in ErrorCode]?: ErrorData } = {}\n> {\n  constructor(\n    private readonly service: string,\n    private readonly serviceName: string,\n    private readonly errors: ErrorMap<ErrorCode>\n  ) {}\n\n  create<K extends ErrorCode>(\n    code: K,\n    ...data: K extends keyof ErrorParams ? [ErrorParams[K]] : []\n  ): FirebaseError {\n    const customData = (data[0] as ErrorData) || {};\n    const fullCode = `${this.service}/${code}`;\n    const template = this.errors[code];\n\n    const message = template ? replaceTemplate(template, customData) : 'Error';\n    // Service Name: Error message (service/code).\n    const fullMessage = `${this.serviceName}: ${message} (${fullCode}).`;\n\n    const error = new FirebaseError(fullCode, fullMessage, customData);\n\n    return error;\n  }\n}\n\nfunction replaceTemplate(template: string, data: ErrorData): string {\n  return template.replace(PATTERN, (_, key) => {\n    const value = data[key];\n    return value != null ? String(value) : `<${key}?>`;\n  });\n}\n\nconst PATTERN = /\\{\\$([^}]+)}/g;\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Evaluates a JSON string into a javascript object.\n *\n * @param {string} str A string containing JSON.\n * @return {*} The javascript object representing the specified JSON.\n */\nexport function jsonEval(str: string): unknown {\n  return JSON.parse(str);\n}\n\n/**\n * Returns JSON representing a javascript object.\n * @param {*} data Javascript object to be stringified.\n * @return {string} The JSON contents of the object.\n */\nexport function stringify(data: unknown): string {\n  return JSON.stringify(data);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { base64Decode } from './crypt';\nimport { jsonEval } from './json';\n\ninterface Claims {\n  [key: string]: {};\n}\n\ninterface DecodedToken {\n  header: object;\n  claims: Claims;\n  data: object;\n  signature: string;\n}\n\n/**\n * Decodes a Firebase auth. token into constituent parts.\n *\n * Notes:\n * - May return with invalid / incomplete claims if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n */\nexport const decode = function (token: string): DecodedToken {\n  let header = {},\n    claims: Claims = {},\n    data = {},\n    signature = '';\n\n  try {\n    const parts = token.split('.');\n    header = jsonEval(base64Decode(parts[0]) || '') as object;\n    claims = jsonEval(base64Decode(parts[1]) || '') as Claims;\n    signature = parts[2];\n    data = claims['d'] || {};\n    delete claims['d'];\n  } catch (e) {}\n\n  return {\n    header,\n    claims,\n    data,\n    signature\n  };\n};\n\ninterface DecodedToken {\n  header: object;\n  claims: Claims;\n  data: object;\n  signature: string;\n}\n\n/**\n * Decodes a Firebase auth. token and checks the validity of its time-based claims. Will return true if the\n * token is within the time window authorized by the 'nbf' (not-before) and 'iat' (issued-at) claims.\n *\n * Notes:\n * - May return a false negative if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n */\nexport const isValidTimestamp = function (token: string): boolean {\n  const claims: Claims = decode(token).claims;\n  const now: number = Math.floor(new Date().getTime() / 1000);\n  let validSince: number = 0,\n    validUntil: number = 0;\n\n  if (typeof claims === 'object') {\n    if (claims.hasOwnProperty('nbf')) {\n      validSince = claims['nbf'] as number;\n    } else if (claims.hasOwnProperty('iat')) {\n      validSince = claims['iat'] as number;\n    }\n\n    if (claims.hasOwnProperty('exp')) {\n      validUntil = claims['exp'] as number;\n    } else {\n      // token will expire after 24h by default\n      validUntil = validSince + 86400;\n    }\n  }\n\n  return (\n    !!now &&\n    !!validSince &&\n    !!validUntil &&\n    now >= validSince &&\n    now <= validUntil\n  );\n};\n\n/**\n * Decodes a Firebase auth. token and returns its issued at time if valid, null otherwise.\n *\n * Notes:\n * - May return null if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n */\nexport const issuedAtTime = function (token: string): number | null {\n  const claims: Claims = decode(token).claims;\n  if (typeof claims === 'object' && claims.hasOwnProperty('iat')) {\n    return claims['iat'] as number;\n  }\n  return null;\n};\n\n/**\n * Decodes a Firebase auth. token and checks the validity of its format. Expects a valid issued-at time.\n *\n * Notes:\n * - May return a false negative if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n */\nexport const isValidFormat = function (token: string): boolean {\n  const decoded = decode(token),\n    claims = decoded.claims;\n\n  return !!claims && typeof claims === 'object' && claims.hasOwnProperty('iat');\n};\n\n/**\n * Attempts to peer into an auth token and determine if it's an admin auth token by looking at the claims portion.\n *\n * Notes:\n * - May return a false negative if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n */\nexport const isAdmin = function (token: string): boolean {\n  const claims: Claims = decode(token).claims;\n  return typeof claims === 'object' && claims['admin'] === true;\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function contains<T extends object>(obj: T, key: string): boolean {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\n\nexport function safeGet<T extends object, K extends keyof T>(\n  obj: T,\n  key: K\n): T[K] | undefined {\n  if (Object.prototype.hasOwnProperty.call(obj, key)) {\n    return obj[key];\n  } else {\n    return undefined;\n  }\n}\n\nexport function isEmpty(obj: object): obj is {} {\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function map<K extends string, V, U>(\n  obj: { [key in K]: V },\n  fn: (value: V, key: K, obj: { [key in K]: V }) => U,\n  contextObj?: unknown\n): { [key in K]: U } {\n  const res: Partial<{ [key in K]: U }> = {};\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      res[key] = fn.call(contextObj, obj[key], key, obj);\n    }\n  }\n  return res as { [key in K]: U };\n}\n\n/**\n * Deep equal two objects. Support Arrays and Objects.\n */\nexport function deepEqual(a: object, b: object): boolean {\n  if (a === b) {\n    return true;\n  }\n\n  const aKeys = Object.keys(a);\n  const bKeys = Object.keys(b);\n  for (const k of aKeys) {\n    if (!bKeys.includes(k)) {\n      return false;\n    }\n\n    const aProp = (a as Record<string, unknown>)[k];\n    const bProp = (b as Record<string, unknown>)[k];\n    if (isObject(aProp) && isObject(bProp)) {\n      if (!deepEqual(aProp, bProp)) {\n        return false;\n      }\n    } else if (aProp !== bProp) {\n      return false;\n    }\n  }\n\n  for (const k of bKeys) {\n    if (!aKeys.includes(k)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction isObject(thing: unknown): thing is object {\n  return thing !== null && typeof thing === 'object';\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns a querystring-formatted string (e.g. &arg=val&arg2=val2) from a\n * params object (e.g. {arg: 'val', arg2: 'val2'})\n * Note: You must prepend it with ? when adding it to a URL.\n */\nexport function querystring(querystringParams: {\n  [key: string]: string | number;\n}): string {\n  const params = [];\n  for (const [key, value] of Object.entries(querystringParams)) {\n    if (Array.isArray(value)) {\n      value.forEach(arrayVal => {\n        params.push(\n          encodeURIComponent(key) + '=' + encodeURIComponent(arrayVal)\n        );\n      });\n    } else {\n      params.push(encodeURIComponent(key) + '=' + encodeURIComponent(value));\n    }\n  }\n  return params.length ? '&' + params.join('&') : '';\n}\n\n/**\n * Decodes a querystring (e.g. ?arg=val&arg2=val2) into a params object\n * (e.g. {arg: 'val', arg2: 'val2'})\n */\nexport function querystringDecode(querystring: string): Record<string, string> {\n  const obj: Record<string, string> = {};\n  const tokens = querystring.replace(/^\\?/, '').split('&');\n\n  tokens.forEach(token => {\n    if (token) {\n      const [key, value] = token.split('=');\n      obj[decodeURIComponent(key)] = decodeURIComponent(value);\n    }\n  });\n  return obj;\n}\n\n/**\n * Extract the query string part of a URL, including the leading question mark (if present).\n */\nexport function extractQuerystring(url: string): string {\n  const queryStart = url.indexOf('?');\n  if (!queryStart) {\n    return '';\n  }\n  const fragmentStart = url.indexOf('#', queryStart);\n  return url.substring(\n    queryStart,\n    fragmentStart > 0 ? fragmentStart : undefined\n  );\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview SHA-1 cryptographic hash.\n * Variable names follow the notation in FIPS PUB 180-3:\n * http://csrc.nist.gov/publications/fips/fips180-3/fips180-3_final.pdf.\n *\n * Usage:\n *   var sha1 = new sha1();\n *   sha1.update(bytes);\n *   var hash = sha1.digest();\n *\n * Performance:\n *   Chrome 23:   ~400 Mbit/s\n *   Firefox 16:  ~250 Mbit/s\n *\n */\n\n/**\n * SHA-1 cryptographic hash constructor.\n *\n * The properties declared here are discussed in the above algorithm document.\n * @constructor\n * @final\n * @struct\n */\nexport class Sha1 {\n  /**\n   * Holds the previous values of accumulated variables a-e in the compress_\n   * function.\n   * @private\n   */\n  private chain_: number[] = [];\n\n  /**\n   * A buffer holding the partially computed hash result.\n   * @private\n   */\n  private buf_: number[] = [];\n\n  /**\n   * An array of 80 bytes, each a part of the message to be hashed.  Referred to\n   * as the message schedule in the docs.\n   * @private\n   */\n  private W_: number[] = [];\n\n  /**\n   * Contains data needed to pad messages less than 64 bytes.\n   * @private\n   */\n  private pad_: number[] = [];\n\n  /**\n   * @private {number}\n   */\n  private inbuf_: number = 0;\n\n  /**\n   * @private {number}\n   */\n  private total_: number = 0;\n\n  blockSize: number;\n\n  constructor() {\n    this.blockSize = 512 / 8;\n\n    this.pad_[0] = 128;\n    for (let i = 1; i < this.blockSize; ++i) {\n      this.pad_[i] = 0;\n    }\n\n    this.reset();\n  }\n\n  reset(): void {\n    this.chain_[0] = 0x67452301;\n    this.chain_[1] = 0xefcdab89;\n    this.chain_[2] = 0x98badcfe;\n    this.chain_[3] = 0x10325476;\n    this.chain_[4] = 0xc3d2e1f0;\n\n    this.inbuf_ = 0;\n    this.total_ = 0;\n  }\n\n  /**\n   * Internal compress helper function.\n   * @param buf Block to compress.\n   * @param offset Offset of the block in the buffer.\n   * @private\n   */\n  compress_(buf: number[] | Uint8Array | string, offset?: number): void {\n    if (!offset) {\n      offset = 0;\n    }\n\n    const W = this.W_;\n\n    // get 16 big endian words\n    if (typeof buf === 'string') {\n      for (let i = 0; i < 16; i++) {\n        // TODO(user): [bug 8140122] Recent versions of Safari for Mac OS and iOS\n        // have a bug that turns the post-increment ++ operator into pre-increment\n        // during JIT compilation.  We have code that depends heavily on SHA-1 for\n        // correctness and which is affected by this bug, so I've removed all uses\n        // of post-increment ++ in which the result value is used.  We can revert\n        // this change once the Safari bug\n        // (https://bugs.webkit.org/show_bug.cgi?id=109036) has been fixed and\n        // most clients have been updated.\n        W[i] =\n          (buf.charCodeAt(offset) << 24) |\n          (buf.charCodeAt(offset + 1) << 16) |\n          (buf.charCodeAt(offset + 2) << 8) |\n          buf.charCodeAt(offset + 3);\n        offset += 4;\n      }\n    } else {\n      for (let i = 0; i < 16; i++) {\n        W[i] =\n          (buf[offset] << 24) |\n          (buf[offset + 1] << 16) |\n          (buf[offset + 2] << 8) |\n          buf[offset + 3];\n        offset += 4;\n      }\n    }\n\n    // expand to 80 words\n    for (let i = 16; i < 80; i++) {\n      const t = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];\n      W[i] = ((t << 1) | (t >>> 31)) & 0xffffffff;\n    }\n\n    let a = this.chain_[0];\n    let b = this.chain_[1];\n    let c = this.chain_[2];\n    let d = this.chain_[3];\n    let e = this.chain_[4];\n    let f, k;\n\n    // TODO(user): Try to unroll this loop to speed up the computation.\n    for (let i = 0; i < 80; i++) {\n      if (i < 40) {\n        if (i < 20) {\n          f = d ^ (b & (c ^ d));\n          k = 0x5a827999;\n        } else {\n          f = b ^ c ^ d;\n          k = 0x6ed9eba1;\n        }\n      } else {\n        if (i < 60) {\n          f = (b & c) | (d & (b | c));\n          k = 0x8f1bbcdc;\n        } else {\n          f = b ^ c ^ d;\n          k = 0xca62c1d6;\n        }\n      }\n\n      const t = (((a << 5) | (a >>> 27)) + f + e + k + W[i]) & 0xffffffff;\n      e = d;\n      d = c;\n      c = ((b << 30) | (b >>> 2)) & 0xffffffff;\n      b = a;\n      a = t;\n    }\n\n    this.chain_[0] = (this.chain_[0] + a) & 0xffffffff;\n    this.chain_[1] = (this.chain_[1] + b) & 0xffffffff;\n    this.chain_[2] = (this.chain_[2] + c) & 0xffffffff;\n    this.chain_[3] = (this.chain_[3] + d) & 0xffffffff;\n    this.chain_[4] = (this.chain_[4] + e) & 0xffffffff;\n  }\n\n  update(bytes?: number[] | Uint8Array | string, length?: number): void {\n    // TODO(johnlenz): tighten the function signature and remove this check\n    if (bytes == null) {\n      return;\n    }\n\n    if (length === undefined) {\n      length = bytes.length;\n    }\n\n    const lengthMinusBlock = length - this.blockSize;\n    let n = 0;\n    // Using local instead of member variables gives ~5% speedup on Firefox 16.\n    const buf = this.buf_;\n    let inbuf = this.inbuf_;\n\n    // The outer while loop should execute at most twice.\n    while (n < length) {\n      // When we have no data in the block to top up, we can directly process the\n      // input buffer (assuming it contains sufficient data). This gives ~25%\n      // speedup on Chrome 23 and ~15% speedup on Firefox 16, but requires that\n      // the data is provided in large chunks (or in multiples of 64 bytes).\n      if (inbuf === 0) {\n        while (n <= lengthMinusBlock) {\n          this.compress_(bytes, n);\n          n += this.blockSize;\n        }\n      }\n\n      if (typeof bytes === 'string') {\n        while (n < length) {\n          buf[inbuf] = bytes.charCodeAt(n);\n          ++inbuf;\n          ++n;\n          if (inbuf === this.blockSize) {\n            this.compress_(buf);\n            inbuf = 0;\n            // Jump to the outer loop so we use the full-block optimization.\n            break;\n          }\n        }\n      } else {\n        while (n < length) {\n          buf[inbuf] = bytes[n];\n          ++inbuf;\n          ++n;\n          if (inbuf === this.blockSize) {\n            this.compress_(buf);\n            inbuf = 0;\n            // Jump to the outer loop so we use the full-block optimization.\n            break;\n          }\n        }\n      }\n    }\n\n    this.inbuf_ = inbuf;\n    this.total_ += length;\n  }\n\n  /** @override */\n  digest(): number[] {\n    const digest: number[] = [];\n    let totalBits = this.total_ * 8;\n\n    // Add pad 0x80 0x00*.\n    if (this.inbuf_ < 56) {\n      this.update(this.pad_, 56 - this.inbuf_);\n    } else {\n      this.update(this.pad_, this.blockSize - (this.inbuf_ - 56));\n    }\n\n    // Add # bits.\n    for (let i = this.blockSize - 1; i >= 56; i--) {\n      this.buf_[i] = totalBits & 255;\n      totalBits /= 256; // Don't use bit-shifting here!\n    }\n\n    this.compress_(this.buf_);\n\n    let n = 0;\n    for (let i = 0; i < 5; i++) {\n      for (let j = 24; j >= 0; j -= 8) {\n        digest[n] = (this.chain_[i] >> j) & 255;\n        ++n;\n      }\n    }\n    return digest;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport type NextFn<T> = (value: T) => void;\nexport type ErrorFn = (error: Error) => void;\nexport type CompleteFn = () => void;\n\nexport interface Observer<T> {\n  // Called once for each value in a stream of values.\n  next: NextFn<T>;\n\n  // A stream terminates by a single call to EITHER error() or complete().\n  error: ErrorFn;\n\n  // No events will be sent to next() once complete() is called.\n  complete: CompleteFn;\n}\n\nexport type PartialObserver<T> = Partial<Observer<T>>;\n\n// TODO: Support also Unsubscribe.unsubscribe?\nexport type Unsubscribe = () => void;\n\n/**\n * The Subscribe interface has two forms - passing the inline function\n * callbacks, or a object interface with callback properties.\n */\nexport interface Subscribe<T> {\n  (next?: NextFn<T>, error?: ErrorFn, complete?: CompleteFn): Unsubscribe;\n  (observer: PartialObserver<T>): Unsubscribe;\n}\n\nexport interface Observable<T> {\n  // Subscribe method\n  subscribe: Subscribe<T>;\n}\n\nexport type Executor<T> = (observer: Observer<T>) => void;\n\n/**\n * Helper to make a Subscribe function (just like Promise helps make a\n * Thenable).\n *\n * @param executor Function which can make calls to a single Observer\n *     as a proxy.\n * @param onNoObservers Callback when count of Observers goes to zero.\n */\nexport function createSubscribe<T>(\n  executor: Executor<T>,\n  onNoObservers?: Executor<T>\n): Subscribe<T> {\n  const proxy = new ObserverProxy<T>(executor, onNoObservers);\n  return proxy.subscribe.bind(proxy);\n}\n\n/**\n * Implement fan-out for any number of Observers attached via a subscribe\n * function.\n */\nclass ObserverProxy<T> implements Observer<T> {\n  private observers: Array<Observer<T>> | undefined = [];\n  private unsubscribes: Unsubscribe[] = [];\n  private onNoObservers: Executor<T> | undefined;\n  private observerCount = 0;\n  // Micro-task scheduling by calling task.then().\n  private task = Promise.resolve();\n  private finalized = false;\n  private finalError?: Error;\n\n  /**\n   * @param executor Function which can make calls to a single Observer\n   *     as a proxy.\n   * @param onNoObservers Callback when count of Observers goes to zero.\n   */\n  constructor(executor: Executor<T>, onNoObservers?: Executor<T>) {\n    this.onNoObservers = onNoObservers;\n    // Call the executor asynchronously so subscribers that are called\n    // synchronously after the creation of the subscribe function\n    // can still receive the very first value generated in the executor.\n    this.task\n      .then(() => {\n        executor(this);\n      })\n      .catch(e => {\n        this.error(e);\n      });\n  }\n\n  next(value: T): void {\n    this.forEachObserver((observer: Observer<T>) => {\n      observer.next(value);\n    });\n  }\n\n  error(error: Error): void {\n    this.forEachObserver((observer: Observer<T>) => {\n      observer.error(error);\n    });\n    this.close(error);\n  }\n\n  complete(): void {\n    this.forEachObserver((observer: Observer<T>) => {\n      observer.complete();\n    });\n    this.close();\n  }\n\n  /**\n   * Subscribe function that can be used to add an Observer to the fan-out list.\n   *\n   * - We require that no event is sent to a subscriber sychronously to their\n   *   call to subscribe().\n   */\n  subscribe(\n    nextOrObserver?: NextFn<T> | PartialObserver<T>,\n    error?: ErrorFn,\n    complete?: CompleteFn\n  ): Unsubscribe {\n    let observer: Observer<T>;\n\n    if (\n      nextOrObserver === undefined &&\n      error === undefined &&\n      complete === undefined\n    ) {\n      throw new Error('Missing Observer.');\n    }\n\n    // Assemble an Observer object when passed as callback functions.\n    if (\n      implementsAnyMethods(nextOrObserver as { [key: string]: unknown }, [\n        'next',\n        'error',\n        'complete'\n      ])\n    ) {\n      observer = nextOrObserver as Observer<T>;\n    } else {\n      observer = {\n        next: nextOrObserver as NextFn<T>,\n        error,\n        complete\n      } as Observer<T>;\n    }\n\n    if (observer.next === undefined) {\n      observer.next = noop as NextFn<T>;\n    }\n    if (observer.error === undefined) {\n      observer.error = noop as ErrorFn;\n    }\n    if (observer.complete === undefined) {\n      observer.complete = noop as CompleteFn;\n    }\n\n    const unsub = this.unsubscribeOne.bind(this, this.observers!.length);\n\n    // Attempt to subscribe to a terminated Observable - we\n    // just respond to the Observer with the final error or complete\n    // event.\n    if (this.finalized) {\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      this.task.then(() => {\n        try {\n          if (this.finalError) {\n            observer.error(this.finalError);\n          } else {\n            observer.complete();\n          }\n        } catch (e) {\n          // nothing\n        }\n        return;\n      });\n    }\n\n    this.observers!.push(observer as Observer<T>);\n\n    return unsub;\n  }\n\n  // Unsubscribe is synchronous - we guarantee that no events are sent to\n  // any unsubscribed Observer.\n  private unsubscribeOne(i: number): void {\n    if (this.observers === undefined || this.observers[i] === undefined) {\n      return;\n    }\n\n    delete this.observers[i];\n\n    this.observerCount -= 1;\n    if (this.observerCount === 0 && this.onNoObservers !== undefined) {\n      this.onNoObservers(this);\n    }\n  }\n\n  private forEachObserver(fn: (observer: Observer<T>) => void): void {\n    if (this.finalized) {\n      // Already closed by previous event....just eat the additional values.\n      return;\n    }\n\n    // Since sendOne calls asynchronously - there is no chance that\n    // this.observers will become undefined.\n    for (let i = 0; i < this.observers!.length; i++) {\n      this.sendOne(i, fn);\n    }\n  }\n\n  // Call the Observer via one of it's callback function. We are careful to\n  // confirm that the observe has not been unsubscribed since this asynchronous\n  // function had been queued.\n  private sendOne(i: number, fn: (observer: Observer<T>) => void): void {\n    // Execute the callback asynchronously\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this.task.then(() => {\n      if (this.observers !== undefined && this.observers[i] !== undefined) {\n        try {\n          fn(this.observers[i]);\n        } catch (e) {\n          // Ignore exceptions raised in Observers or missing methods of an\n          // Observer.\n          // Log error to console. b/31404806\n          if (typeof console !== 'undefined' && console.error) {\n            console.error(e);\n          }\n        }\n      }\n    });\n  }\n\n  private close(err?: Error): void {\n    if (this.finalized) {\n      return;\n    }\n    this.finalized = true;\n    if (err !== undefined) {\n      this.finalError = err;\n    }\n    // Proxy is no longer needed - garbage collect references\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this.task.then(() => {\n      this.observers = undefined;\n      this.onNoObservers = undefined;\n    });\n  }\n}\n\n/** Turn synchronous function into one called asynchronously. */\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function async(fn: Function, onError?: ErrorFn): Function {\n  return (...args: unknown[]) => {\n    Promise.resolve(true)\n      .then(() => {\n        fn(...args);\n      })\n      .catch((error: Error) => {\n        if (onError) {\n          onError(error);\n        }\n      });\n  };\n}\n\n/**\n * Return true if the object passed in implements any of the named methods.\n */\nfunction implementsAnyMethods(\n  obj: { [key: string]: unknown },\n  methods: string[]\n): boolean {\n  if (typeof obj !== 'object' || obj === null) {\n    return false;\n  }\n\n  for (const method of methods) {\n    if (method in obj && typeof obj[method] === 'function') {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction noop(): void {\n  // do nothing\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Check to make sure the appropriate number of arguments are provided for a public function.\n * Throws an error if it fails.\n *\n * @param fnName The function name\n * @param minCount The minimum number of arguments to allow for the function call\n * @param maxCount The maximum number of argument to allow for the function call\n * @param argCount The actual number of arguments provided.\n */\nexport const validateArgCount = function (\n  fnName: string,\n  minCount: number,\n  maxCount: number,\n  argCount: number\n): void {\n  let argError;\n  if (argCount < minCount) {\n    argError = 'at least ' + minCount;\n  } else if (argCount > maxCount) {\n    argError = maxCount === 0 ? 'none' : 'no more than ' + maxCount;\n  }\n  if (argError) {\n    const error =\n      fnName +\n      ' failed: Was called with ' +\n      argCount +\n      (argCount === 1 ? ' argument.' : ' arguments.') +\n      ' Expects ' +\n      argError +\n      '.';\n    throw new Error(error);\n  }\n};\n\n/**\n * Generates a string to prefix an error message about failed argument validation\n *\n * @param fnName The function name\n * @param argName The name of the argument\n * @return The prefix to add to the error thrown for validation.\n */\nexport function errorPrefix(fnName: string, argName: string): string {\n  return `${fnName} failed: ${argName} argument `;\n}\n\n/**\n * @param fnName\n * @param argumentNumber\n * @param namespace\n * @param optional\n */\nexport function validateNamespace(\n  fnName: string,\n  namespace: string,\n  optional: boolean\n): void {\n  if (optional && !namespace) {\n    return;\n  }\n  if (typeof namespace !== 'string') {\n    //TODO: I should do more validation here. We only allow certain chars in namespaces.\n    throw new Error(\n      errorPrefix(fnName, 'namespace') + 'must be a valid firebase namespace.'\n    );\n  }\n}\n\nexport function validateCallback(\n  fnName: string,\n  argumentName: string,\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  callback: Function,\n  optional: boolean\n): void {\n  if (optional && !callback) {\n    return;\n  }\n  if (typeof callback !== 'function') {\n    throw new Error(\n      errorPrefix(fnName, argumentName) + 'must be a valid function.'\n    );\n  }\n}\n\nexport function validateContextObject(\n  fnName: string,\n  argumentName: string,\n  context: unknown,\n  optional: boolean\n): void {\n  if (optional && !context) {\n    return;\n  }\n  if (typeof context !== 'object' || context === null) {\n    throw new Error(\n      errorPrefix(fnName, argumentName) + 'must be a valid context object.'\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from './assert';\n\n// Code originally came from goog.crypt.stringToUtf8ByteArray, but for some reason they\n// automatically replaced '\\r\\n' with '\\n', and they didn't handle surrogate pairs,\n// so it's been modified.\n\n// Note that not all Unicode characters appear as single characters in JavaScript strings.\n// fromCharCode returns the UTF-16 encoding of a character - so some Unicode characters\n// use 2 characters in Javascript.  All 4-byte UTF-8 characters begin with a first\n// character in the range 0xD800 - 0xDBFF (the first character of a so-called surrogate\n// pair).\n// See http://www.ecma-international.org/ecma-262/5.1/#sec-15.1.3\n\n/**\n * @param {string} str\n * @return {Array}\n */\nexport const stringToByteArray = function (str: string): number[] {\n  const out: number[] = [];\n  let p = 0;\n  for (let i = 0; i < str.length; i++) {\n    let c = str.charCodeAt(i);\n\n    // Is this the lead surrogate in a surrogate pair?\n    if (c >= 0xd800 && c <= 0xdbff) {\n      const high = c - 0xd800; // the high 10 bits.\n      i++;\n      assert(i < str.length, 'Surrogate pair missing trail surrogate.');\n      const low = str.charCodeAt(i) - 0xdc00; // the low 10 bits.\n      c = 0x10000 + (high << 10) + low;\n    }\n\n    if (c < 128) {\n      out[p++] = c;\n    } else if (c < 2048) {\n      out[p++] = (c >> 6) | 192;\n      out[p++] = (c & 63) | 128;\n    } else if (c < 65536) {\n      out[p++] = (c >> 12) | 224;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    } else {\n      out[p++] = (c >> 18) | 240;\n      out[p++] = ((c >> 12) & 63) | 128;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    }\n  }\n  return out;\n};\n\n/**\n * Calculate length without actually converting; useful for doing cheaper validation.\n * @param {string} str\n * @return {number}\n */\nexport const stringLength = function (str: string): number {\n  let p = 0;\n  for (let i = 0; i < str.length; i++) {\n    const c = str.charCodeAt(i);\n    if (c < 128) {\n      p++;\n    } else if (c < 2048) {\n      p += 2;\n    } else if (c >= 0xd800 && c <= 0xdbff) {\n      // Lead surrogate of a surrogate pair.  The pair together will take 4 bytes to represent.\n      p += 4;\n      i++; // skip trail surrogate.\n    } else {\n      p += 3;\n    }\n  }\n  return p;\n};\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * The amount of milliseconds to exponentially increase.\n */\nconst DEFAULT_INTERVAL_MILLIS = 1000;\n\n/**\n * The factor to backoff by.\n * Should be a number greater than 1.\n */\nconst DEFAULT_BACKOFF_FACTOR = 2;\n\n/**\n * The maximum milliseconds to increase to.\n *\n * <p>Visible for testing\n */\nexport const MAX_VALUE_MILLIS = 4 * 60 * 60 * 1000; // Four hours, like iOS and Android.\n\n/**\n * The percentage of backoff time to randomize by.\n * See\n * http://go/safe-client-behavior#step-1-determine-the-appropriate-retry-interval-to-handle-spike-traffic\n * for context.\n *\n * <p>Visible for testing\n */\nexport const RANDOM_FACTOR = 0.5;\n\n/**\n * Based on the backoff method from\n * https://github.com/google/closure-library/blob/master/closure/goog/math/exponentialbackoff.js.\n * Extracted here so we don't need to pass metadata and a stateful ExponentialBackoff object around.\n */\nexport function calculateBackoffMillis(\n  backoffCount: number,\n  intervalMillis: number = DEFAULT_INTERVAL_MILLIS,\n  backoffFactor: number = DEFAULT_BACKOFF_FACTOR\n): number {\n  // Calculates an exponentially increasing value.\n  // Deviation: calculates value from count and a constant interval, so we only need to save value\n  // and count to restore state.\n  const currBaseValue = intervalMillis * Math.pow(backoffFactor, backoffCount);\n\n  // A random \"fuzz\" to avoid waves of retries.\n  // Deviation: randomFactor is required.\n  const randomWait = Math.round(\n    // A fraction of the backoff value to add/subtract.\n    // Deviation: changes multiplication order to improve readability.\n    RANDOM_FACTOR *\n      currBaseValue *\n      // A random float (rounded to int by Math.round above) in the range [-1, 1]. Determines\n      // if we add or subtract.\n      (Math.random() - 0.5) *\n      2\n  );\n\n  // Limits backoff to max to avoid effectively permanent backoff.\n  return Math.min(MAX_VALUE_MILLIS, currBaseValue + randomWait);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Provide English ordinal letters after a number\n */\nexport function ordinal(i: number): string {\n  if (!Number.isFinite(i)) {\n    return `${i}`;\n  }\n  return i + indicator(i);\n}\n\nfunction indicator(i: number): string {\n  i = Math.abs(i);\n  const cent = i % 100;\n  if (cent >= 10 && cent <= 20) {\n    return 'th';\n  }\n  const dec = i % 10;\n  if (dec === 1) {\n    return 'st';\n  }\n  if (dec === 2) {\n    return 'nd';\n  }\n  if (dec === 3) {\n    return 'rd';\n  }\n  return 'th';\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport interface Compat<T> {\n  _delegate: T;\n}\n\nexport function getModularInstance<ExpService>(\n  service: Compat<ExpService> | ExpService\n): ExpService {\n  if (service && (service as Compat<ExpService>)._delegate) {\n    return (service as Compat<ExpService>)._delegate;\n  } else {\n    return service as ExpService;\n  }\n}\n","/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nfunction promisifyRequest(\n  request: IDBRequest,\n  errorMessage: string\n): Promise<unknown> {\n  return new Promise((resolve, reject) => {\n    request.onsuccess = event => {\n      resolve((event.target as IDBRequest).result);\n    };\n    request.onerror = event => {\n      reject(`${errorMessage}: ${(event.target as IDBRequest).error?.message}`);\n    };\n  });\n}\n\nexport class DBWrapper {\n  objectStoreNames: DOMStringList;\n  constructor(private _db: IDBDatabase) {\n    this.objectStoreNames = this._db.objectStoreNames;\n  }\n  transaction(\n    storeNames: string[] | string,\n    mode?: IDBTransactionMode\n  ): TransactionWrapper {\n    return new TransactionWrapper(\n      this._db.transaction.call(this._db, storeNames, mode)\n    );\n  }\n  createObjectStore(\n    storeName: string,\n    options?: IDBObjectStoreParameters\n  ): ObjectStoreWrapper {\n    return new ObjectStoreWrapper(\n      this._db.createObjectStore(storeName, options)\n    );\n  }\n  close(): void {\n    this._db.close();\n  }\n}\n\nclass TransactionWrapper {\n  complete: Promise<void>;\n  constructor(private _transaction: IDBTransaction) {\n    this.complete = new Promise((resolve, reject) => {\n      this._transaction.oncomplete = function () {\n        resolve();\n      };\n      this._transaction.onerror = () => {\n        reject(this._transaction.error);\n      };\n      this._transaction.onabort = () => {\n        reject(this._transaction.error);\n      };\n    });\n  }\n  objectStore(storeName: string): ObjectStoreWrapper {\n    return new ObjectStoreWrapper(this._transaction.objectStore(storeName));\n  }\n}\n\nclass ObjectStoreWrapper {\n  constructor(private _store: IDBObjectStore) {}\n  index(name: string): IndexWrapper {\n    return new IndexWrapper(this._store.index(name));\n  }\n  createIndex(\n    name: string,\n    keypath: string,\n    options: IDBIndexParameters\n  ): IndexWrapper {\n    return new IndexWrapper(this._store.createIndex(name, keypath, options));\n  }\n  get(key: string): Promise<unknown> {\n    const request = this._store.get(key);\n    return promisifyRequest(request, 'Error reading from IndexedDB');\n  }\n  put(value: unknown, key?: string): Promise<unknown> {\n    const request = this._store.put(value, key);\n    return promisifyRequest(request, 'Error writing to IndexedDB');\n  }\n  delete(key: string): Promise<unknown> {\n    const request = this._store.delete(key);\n    return promisifyRequest(request, 'Error deleting from IndexedDB');\n  }\n  clear(): Promise<unknown> {\n    const request = this._store.clear();\n    return promisifyRequest(request, 'Error clearing IndexedDB object store');\n  }\n}\n\nclass IndexWrapper {\n  constructor(private _index: IDBIndex) {}\n  get(key: string): Promise<unknown> {\n    const request = this._index.get(key);\n    return promisifyRequest(request, 'Error reading from IndexedDB');\n  }\n}\n\nexport function openDB(\n  dbName: string,\n  dbVersion: number,\n  upgradeCallback: (\n    db: DBWrapper,\n    oldVersion: number,\n    newVersion: number | null,\n    transaction: TransactionWrapper\n  ) => void\n): Promise<DBWrapper> {\n  return new Promise((resolve, reject) => {\n    try {\n      const request = indexedDB.open(dbName, dbVersion);\n\n      request.onsuccess = event => {\n        resolve(new DBWrapper((event.target as IDBOpenDBRequest).result));\n      };\n\n      request.onerror = event => {\n        reject(\n          `Error opening indexedDB: ${\n            (event.target as IDBRequest).error?.message\n          }`\n        );\n      };\n\n      request.onupgradeneeded = event => {\n        upgradeCallback(\n          new DBWrapper(request.result),\n          event.oldVersion,\n          event.newVersion,\n          new TransactionWrapper(request.transaction!)\n        );\n      };\n    } catch (e) {\n      reject(`Error opening indexedDB: ${e.message}`);\n    }\n  });\n}\n\nexport async function deleteDB(dbName: string): Promise<void> {\n  return new Promise((resolve, reject) => {\n    try {\n      const request = indexedDB.deleteDatabase(dbName);\n      request.onsuccess = () => {\n        resolve();\n      };\n      request.onerror = event => {\n        reject(\n          `Error deleting indexedDB database \"${dbName}\": ${\n            (event.target as IDBRequest).error?.message\n          }`\n        );\n      };\n    } catch (e) {\n      reject(`Error deleting indexedDB database \"${dbName}\": ${e.message}`);\n    }\n  });\n}\n","exports.interopDefault = function (a) {\n  return a && a.__esModule ? a : {default: a};\n};\n\nexports.defineInteropFlag = function (a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n};\n\nexports.exportAll = function (source, dest) {\n  Object.keys(source).forEach(function (key) {\n    if (key === 'default' || key === '__esModule' || dest.hasOwnProperty(key)) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function () {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n};\n\nexports.export = function (dest, destName, get) {\n  Object.defineProperty(dest, destName, {\n    enumerable: true,\n    get: get,\n  });\n};\n",null,"/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport type LogLevelString =\n  | 'debug'\n  | 'verbose'\n  | 'info'\n  | 'warn'\n  | 'error'\n  | 'silent';\n\nexport interface LogOptions {\n  level: LogLevelString;\n}\n\nexport type LogCallback = (callbackParams: LogCallbackParams) => void;\n\nexport interface LogCallbackParams {\n  level: LogLevelString;\n  message: string;\n  args: unknown[];\n  type: string;\n}\n\n/**\n * A container for all of the Logger instances\n */\nexport const instances: Logger[] = [];\n\n/**\n * The JS SDK supports 5 log levels and also allows a user the ability to\n * silence the logs altogether.\n *\n * The order is a follows:\n * DEBUG < VERBOSE < INFO < WARN < ERROR\n *\n * All of the log types above the current log level will be captured (i.e. if\n * you set the log level to `INFO`, errors will still be logged, but `DEBUG` and\n * `VERBOSE` logs will not)\n */\nexport enum LogLevel {\n  DEBUG,\n  VERBOSE,\n  INFO,\n  WARN,\n  ERROR,\n  SILENT\n}\n\nconst levelStringToEnum: { [key in LogLevelString]: LogLevel } = {\n  'debug': LogLevel.DEBUG,\n  'verbose': LogLevel.VERBOSE,\n  'info': LogLevel.INFO,\n  'warn': LogLevel.WARN,\n  'error': LogLevel.ERROR,\n  'silent': LogLevel.SILENT\n};\n\n/**\n * The default log level\n */\nconst defaultLogLevel: LogLevel = LogLevel.INFO;\n\n/**\n * We allow users the ability to pass their own log handler. We will pass the\n * type of log, the current log level, and any other arguments passed (i.e. the\n * messages that the user wants to log) to this function.\n */\nexport type LogHandler = (\n  loggerInstance: Logger,\n  logType: LogLevel,\n  ...args: unknown[]\n) => void;\n\n/**\n * By default, `console.debug` is not displayed in the developer console (in\n * chrome). To avoid forcing users to have to opt-in to these logs twice\n * (i.e. once for firebase, and once in the console), we are sending `DEBUG`\n * logs to the `console.log` function.\n */\nconst ConsoleMethod = {\n  [LogLevel.DEBUG]: 'log',\n  [LogLevel.VERBOSE]: 'log',\n  [LogLevel.INFO]: 'info',\n  [LogLevel.WARN]: 'warn',\n  [LogLevel.ERROR]: 'error'\n};\n\n/**\n * The default log handler will forward DEBUG, VERBOSE, INFO, WARN, and ERROR\n * messages on to their corresponding console counterparts (if the log method\n * is supported by the current log level)\n */\nconst defaultLogHandler: LogHandler = (instance, logType, ...args): void => {\n  if (logType < instance.logLevel) {\n    return;\n  }\n  const now = new Date().toISOString();\n  const method = ConsoleMethod[logType as keyof typeof ConsoleMethod];\n  if (method) {\n    console[method as 'log' | 'info' | 'warn' | 'error'](\n      `[${now}]  ${instance.name}:`,\n      ...args\n    );\n  } else {\n    throw new Error(\n      `Attempted to log a message with an invalid logType (value: ${logType})`\n    );\n  }\n};\n\nexport class Logger {\n  /**\n   * Gives you an instance of a Logger to capture messages according to\n   * Firebase's logging scheme.\n   *\n   * @param name The name that the logs will be associated with\n   */\n  constructor(public name: string) {\n    /**\n     * Capture the current instance for later use\n     */\n    instances.push(this);\n  }\n\n  /**\n   * The log level of the given Logger instance.\n   */\n  private _logLevel = defaultLogLevel;\n\n  get logLevel(): LogLevel {\n    return this._logLevel;\n  }\n\n  set logLevel(val: LogLevel) {\n    if (!(val in LogLevel)) {\n      throw new TypeError(`Invalid value \"${val}\" assigned to \\`logLevel\\``);\n    }\n    this._logLevel = val;\n  }\n\n  // Workaround for setter/getter having to be the same type.\n  setLogLevel(val: LogLevel | LogLevelString): void {\n    this._logLevel = typeof val === 'string' ? levelStringToEnum[val] : val;\n  }\n\n  /**\n   * The main (internal) log handler for the Logger instance.\n   * Can be set to a new function in internal package code but not by user.\n   */\n  private _logHandler: LogHandler = defaultLogHandler;\n  get logHandler(): LogHandler {\n    return this._logHandler;\n  }\n  set logHandler(val: LogHandler) {\n    if (typeof val !== 'function') {\n      throw new TypeError('Value assigned to `logHandler` must be a function');\n    }\n    this._logHandler = val;\n  }\n\n  /**\n   * The optional, additional, user-defined log handler for the Logger instance.\n   */\n  private _userLogHandler: LogHandler | null = null;\n  get userLogHandler(): LogHandler | null {\n    return this._userLogHandler;\n  }\n  set userLogHandler(val: LogHandler | null) {\n    this._userLogHandler = val;\n  }\n\n  /**\n   * The functions below are all based on the `console` interface\n   */\n\n  debug(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.DEBUG, ...args);\n    this._logHandler(this, LogLevel.DEBUG, ...args);\n  }\n  log(...args: unknown[]): void {\n    this._userLogHandler &&\n      this._userLogHandler(this, LogLevel.VERBOSE, ...args);\n    this._logHandler(this, LogLevel.VERBOSE, ...args);\n  }\n  info(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.INFO, ...args);\n    this._logHandler(this, LogLevel.INFO, ...args);\n  }\n  warn(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.WARN, ...args);\n    this._logHandler(this, LogLevel.WARN, ...args);\n  }\n  error(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.ERROR, ...args);\n    this._logHandler(this, LogLevel.ERROR, ...args);\n  }\n}\n\nexport function setLogLevel(level: LogLevelString | LogLevel): void {\n  instances.forEach(inst => {\n    inst.setLogLevel(level);\n  });\n}\n\nexport function setUserLogHandler(\n  logCallback: LogCallback | null,\n  options?: LogOptions\n): void {\n  for (const instance of instances) {\n    let customLogLevel: LogLevel | null = null;\n    if (options && options.level) {\n      customLogLevel = levelStringToEnum[options.level];\n    }\n    if (logCallback === null) {\n      instance.userLogHandler = null;\n    } else {\n      instance.userLogHandler = (\n        instance: Logger,\n        level: LogLevel,\n        ...args: unknown[]\n      ) => {\n        const message = args\n          .map(arg => {\n            if (arg == null) {\n              return null;\n            } else if (typeof arg === 'string') {\n              return arg;\n            } else if (typeof arg === 'number' || typeof arg === 'boolean') {\n              return arg.toString();\n            } else if (arg instanceof Error) {\n              return arg.message;\n            } else {\n              try {\n                return JSON.stringify(arg);\n              } catch (ignored) {\n                return null;\n              }\n            }\n          })\n          .filter(arg => arg)\n          .join(' ');\n        if (level >= (customLogLevel ?? instance.logLevel)) {\n          logCallback({\n            level: LogLevel[level].toLowerCase() as LogLevelString,\n            message,\n            args,\n            type: instance.name\n          });\n        }\n      };\n    }\n  }\n}\n",null,null,"/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** The semver (www.semver.org) version of the SDK. */\nexport let SDK_VERSION = '';\n\n/**\n * SDK_VERSION should be set before any database instance is created\n * @internal\n */\nexport function setSDKVersion(version: string): void {\n  SDK_VERSION = version;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { jsonEval, stringify } from '@firebase/util';\n\n/**\n * Wraps a DOM Storage object and:\n * - automatically encode objects as JSON strings before storing them to allow us to store arbitrary types.\n * - prefixes names with \"firebase:\" to avoid collisions with app data.\n *\n * We automatically (see storage.js) create two such wrappers, one for sessionStorage,\n * and one for localStorage.\n *\n */\nexport class DOMStorageWrapper {\n  // Use a prefix to avoid collisions with other stuff saved by the app.\n  private prefix_ = 'firebase:';\n\n  /**\n   * @param domStorage_ - The underlying storage object (e.g. localStorage or sessionStorage)\n   */\n  constructor(private domStorage_: Storage) {}\n\n  /**\n   * @param key - The key to save the value under\n   * @param value - The value being stored, or null to remove the key.\n   */\n  set(key: string, value: unknown | null) {\n    if (value == null) {\n      this.domStorage_.removeItem(this.prefixedName_(key));\n    } else {\n      this.domStorage_.setItem(this.prefixedName_(key), stringify(value));\n    }\n  }\n\n  /**\n   * @returns The value that was stored under this key, or null\n   */\n  get(key: string): unknown {\n    const storedVal = this.domStorage_.getItem(this.prefixedName_(key));\n    if (storedVal == null) {\n      return null;\n    } else {\n      return jsonEval(storedVal);\n    }\n  }\n\n  remove(key: string) {\n    this.domStorage_.removeItem(this.prefixedName_(key));\n  }\n\n  isInMemoryStorage: boolean;\n\n  prefixedName_(name: string): string {\n    return this.prefix_ + name;\n  }\n\n  toString(): string {\n    return this.domStorage_.toString();\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { contains } from '@firebase/util';\n\n/**\n * An in-memory storage implementation that matches the API of DOMStorageWrapper\n * (TODO: create interface for both to implement).\n */\nexport class MemoryStorage {\n  private cache_: { [k: string]: unknown } = {};\n\n  set(key: string, value: unknown | null) {\n    if (value == null) {\n      delete this.cache_[key];\n    } else {\n      this.cache_[key] = value;\n    }\n  }\n\n  get(key: string): unknown {\n    if (contains(this.cache_, key)) {\n      return this.cache_[key];\n    }\n    return null;\n  }\n\n  remove(key: string) {\n    delete this.cache_[key];\n  }\n\n  isInMemoryStorage = true;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DOMStorageWrapper } from './DOMStorageWrapper';\nimport { MemoryStorage } from './MemoryStorage';\n\ndeclare const window: Window;\n\n/**\n * Helper to create a DOMStorageWrapper or else fall back to MemoryStorage.\n * TODO: Once MemoryStorage and DOMStorageWrapper have a shared interface this method annotation should change\n * to reflect this type\n *\n * @param domStorageName - Name of the underlying storage object\n *   (e.g. 'localStorage' or 'sessionStorage').\n * @returns Turning off type information until a common interface is defined.\n */\nconst createStoragefor = function (\n  domStorageName: string\n): DOMStorageWrapper | MemoryStorage {\n  try {\n    // NOTE: just accessing \"localStorage\" or \"window['localStorage']\" may throw a security exception,\n    // so it must be inside the try/catch.\n    if (\n      typeof window !== 'undefined' &&\n      typeof window[domStorageName] !== 'undefined'\n    ) {\n      // Need to test cache. Just because it's here doesn't mean it works\n      const domStorage = window[domStorageName];\n      domStorage.setItem('firebase:sentinel', 'cache');\n      domStorage.removeItem('firebase:sentinel');\n      return new DOMStorageWrapper(domStorage);\n    }\n  } catch (e) {}\n\n  // Failed to create wrapper.  Just return in-memory storage.\n  // TODO: log?\n  return new MemoryStorage();\n};\n\n/** A storage object that lasts across sessions */\nexport const PersistentStorage = createStoragefor('localStorage');\n\n/** A storage object that only lasts one session */\nexport const SessionStorage = createStoragefor('sessionStorage');\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Logger, LogLevel } from '@firebase/logger';\nimport {\n  assert,\n  base64,\n  Sha1,\n  stringToByteArray,\n  stringify,\n  isNodeSdk\n} from '@firebase/util';\n\nimport { SessionStorage } from '../storage/storage';\nimport { QueryContext } from '../view/EventRegistration';\n\ndeclare const window: Window;\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ndeclare const Windows: any;\n\nconst logClient = new Logger('@firebase/database');\n\n/**\n * Returns a locally-unique ID (generated by just incrementing up from 0 each time its called).\n */\nexport const LUIDGenerator: () => number = (function () {\n  let id = 1;\n  return function () {\n    return id++;\n  };\n})();\n\n/**\n * Sha1 hash of the input string\n * @param str - The string to hash\n * @returns {!string} The resulting hash\n */\nexport const sha1 = function (str: string): string {\n  const utf8Bytes = stringToByteArray(str);\n  const sha1 = new Sha1();\n  sha1.update(utf8Bytes);\n  const sha1Bytes = sha1.digest();\n  return base64.encodeByteArray(sha1Bytes);\n};\n\nconst buildLogMessage_ = function (...varArgs: unknown[]): string {\n  let message = '';\n  for (let i = 0; i < varArgs.length; i++) {\n    const arg = varArgs[i];\n    if (\n      Array.isArray(arg) ||\n      (arg &&\n        typeof arg === 'object' &&\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        typeof (arg as any).length === 'number')\n    ) {\n      message += buildLogMessage_.apply(null, arg);\n    } else if (typeof arg === 'object') {\n      message += stringify(arg);\n    } else {\n      message += arg;\n    }\n    message += ' ';\n  }\n\n  return message;\n};\n\n/**\n * Use this for all debug messages in Firebase.\n */\nexport let logger: ((a: string) => void) | null = null;\n\n/**\n * Flag to check for log availability on first log message\n */\nlet firstLog_ = true;\n\n/**\n * The implementation of Firebase.enableLogging (defined here to break dependencies)\n * @param logger_ - A flag to turn on logging, or a custom logger\n * @param persistent - Whether or not to persist logging settings across refreshes\n */\nexport const enableLogging = function (\n  logger_?: boolean | ((a: string) => void) | null,\n  persistent?: boolean\n) {\n  assert(\n    !persistent || logger_ === true || logger_ === false,\n    \"Can't turn on custom loggers persistently.\"\n  );\n  if (logger_ === true) {\n    logClient.logLevel = LogLevel.VERBOSE;\n    logger = logClient.log.bind(logClient);\n    if (persistent) {\n      SessionStorage.set('logging_enabled', true);\n    }\n  } else if (typeof logger_ === 'function') {\n    logger = logger_;\n  } else {\n    logger = null;\n    SessionStorage.remove('logging_enabled');\n  }\n};\n\nexport const log = function (...varArgs: unknown[]) {\n  if (firstLog_ === true) {\n    firstLog_ = false;\n    if (logger === null && SessionStorage.get('logging_enabled') === true) {\n      enableLogging(true);\n    }\n  }\n\n  if (logger) {\n    const message = buildLogMessage_.apply(null, varArgs);\n    logger(message);\n  }\n};\n\nexport const logWrapper = function (\n  prefix: string\n): (...varArgs: unknown[]) => void {\n  return function (...varArgs: unknown[]) {\n    log(prefix, ...varArgs);\n  };\n};\n\nexport const error = function (...varArgs: string[]) {\n  const message = 'FIREBASE INTERNAL ERROR: ' + buildLogMessage_(...varArgs);\n  logClient.error(message);\n};\n\nexport const fatal = function (...varArgs: string[]) {\n  const message = `FIREBASE FATAL ERROR: ${buildLogMessage_(...varArgs)}`;\n  logClient.error(message);\n  throw new Error(message);\n};\n\nexport const warn = function (...varArgs: unknown[]) {\n  const message = 'FIREBASE WARNING: ' + buildLogMessage_(...varArgs);\n  logClient.warn(message);\n};\n\n/**\n * Logs a warning if the containing page uses https. Called when a call to new Firebase\n * does not use https.\n */\nexport const warnIfPageIsSecure = function () {\n  // Be very careful accessing browser globals. Who knows what may or may not exist.\n  if (\n    typeof window !== 'undefined' &&\n    window.location &&\n    window.location.protocol &&\n    window.location.protocol.indexOf('https:') !== -1\n  ) {\n    warn(\n      'Insecure Firebase access from a secure page. ' +\n        'Please use https in calls to new Firebase().'\n    );\n  }\n};\n\nexport const warnAboutUnsupportedMethod = function (methodName: string) {\n  warn(\n    methodName +\n      ' is unsupported and will likely change soon.  ' +\n      'Please do not use.'\n  );\n};\n\n/**\n * Returns true if data is NaN, or +/- Infinity.\n */\nexport const isInvalidJSONNumber = function (data: unknown): boolean {\n  return (\n    typeof data === 'number' &&\n    (data !== data || // NaN\n      data === Number.POSITIVE_INFINITY ||\n      data === Number.NEGATIVE_INFINITY)\n  );\n};\n\nexport const executeWhenDOMReady = function (fn: () => void) {\n  if (isNodeSdk() || document.readyState === 'complete') {\n    fn();\n  } else {\n    // Modeled after jQuery. Try DOMContentLoaded and onreadystatechange (which\n    // fire before onload), but fall back to onload.\n\n    let called = false;\n    const wrappedFn = function () {\n      if (!document.body) {\n        setTimeout(wrappedFn, Math.floor(10));\n        return;\n      }\n\n      if (!called) {\n        called = true;\n        fn();\n      }\n    };\n\n    if (document.addEventListener) {\n      document.addEventListener('DOMContentLoaded', wrappedFn, false);\n      // fallback to onload.\n      window.addEventListener('load', wrappedFn, false);\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } else if ((document as any).attachEvent) {\n      // IE.\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (document as any).attachEvent('onreadystatechange', () => {\n        if (document.readyState === 'complete') {\n          wrappedFn();\n        }\n      });\n      // fallback to onload.\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (window as any).attachEvent('onload', wrappedFn);\n\n      // jQuery has an extra hack for IE that we could employ (based on\n      // http://javascript.nwbox.com/IEContentLoaded/) But it looks really old.\n      // I'm hoping we don't need it.\n    }\n  }\n};\n\n/**\n * Minimum key name. Invalid for actual data, used as a marker to sort before any valid names\n */\nexport const MIN_NAME = '[MIN_NAME]';\n\n/**\n * Maximum key name. Invalid for actual data, used as a marker to sort above any valid names\n */\nexport const MAX_NAME = '[MAX_NAME]';\n\n/**\n * Compares valid Firebase key names, plus min and max name\n */\nexport const nameCompare = function (a: string, b: string): number {\n  if (a === b) {\n    return 0;\n  } else if (a === MIN_NAME || b === MAX_NAME) {\n    return -1;\n  } else if (b === MIN_NAME || a === MAX_NAME) {\n    return 1;\n  } else {\n    const aAsInt = tryParseInt(a),\n      bAsInt = tryParseInt(b);\n\n    if (aAsInt !== null) {\n      if (bAsInt !== null) {\n        return aAsInt - bAsInt === 0 ? a.length - b.length : aAsInt - bAsInt;\n      } else {\n        return -1;\n      }\n    } else if (bAsInt !== null) {\n      return 1;\n    } else {\n      return a < b ? -1 : 1;\n    }\n  }\n};\n\n/**\n * @returns {!number} comparison result.\n */\nexport const stringCompare = function (a: string, b: string): number {\n  if (a === b) {\n    return 0;\n  } else if (a < b) {\n    return -1;\n  } else {\n    return 1;\n  }\n};\n\nexport const requireKey = function (\n  key: string,\n  obj: { [k: string]: unknown }\n): unknown {\n  if (obj && key in obj) {\n    return obj[key];\n  } else {\n    throw new Error(\n      'Missing required key (' + key + ') in object: ' + stringify(obj)\n    );\n  }\n};\n\nexport const ObjectToUniqueKey = function (obj: unknown): string {\n  if (typeof obj !== 'object' || obj === null) {\n    return stringify(obj);\n  }\n\n  const keys = [];\n  // eslint-disable-next-line guard-for-in\n  for (const k in obj) {\n    keys.push(k);\n  }\n\n  // Export as json, but with the keys sorted.\n  keys.sort();\n  let key = '{';\n  for (let i = 0; i < keys.length; i++) {\n    if (i !== 0) {\n      key += ',';\n    }\n    key += stringify(keys[i]);\n    key += ':';\n    key += ObjectToUniqueKey(obj[keys[i]]);\n  }\n\n  key += '}';\n  return key;\n};\n\n/**\n * Splits a string into a number of smaller segments of maximum size\n * @param str - The string\n * @param segsize - The maximum number of chars in the string.\n * @returns The string, split into appropriately-sized chunks\n */\nexport const splitStringBySize = function (\n  str: string,\n  segsize: number\n): string[] {\n  const len = str.length;\n\n  if (len <= segsize) {\n    return [str];\n  }\n\n  const dataSegs = [];\n  for (let c = 0; c < len; c += segsize) {\n    if (c + segsize > len) {\n      dataSegs.push(str.substring(c, len));\n    } else {\n      dataSegs.push(str.substring(c, c + segsize));\n    }\n  }\n  return dataSegs;\n};\n\n/**\n * Apply a function to each (key, value) pair in an object or\n * apply a function to each (index, value) pair in an array\n * @param obj - The object or array to iterate over\n * @param fn - The function to apply\n */\nexport function each(obj: object, fn: (k: string, v: unknown) => void) {\n  for (const key in obj) {\n    if (obj.hasOwnProperty(key)) {\n      fn(key, obj[key]);\n    }\n  }\n}\n\n/**\n * Like goog.bind, but doesn't bother to create a closure if opt_context is null/undefined.\n * @param callback - Callback function.\n * @param context - Optional context to bind to.\n *\n */\nexport const bindCallback = function (\n  callback: (a: unknown) => void,\n  context?: object | null\n): (a: unknown) => void {\n  return context ? callback.bind(context) : callback;\n};\n\n/**\n * Borrowed from http://hg.secondlife.com/llsd/src/tip/js/typedarray.js (MIT License)\n * I made one modification at the end and removed the NaN / Infinity\n * handling (since it seemed broken [caused an overflow] and we don't need it).  See MJL comments.\n * @param v - A double\n *\n */\nexport const doubleToIEEE754String = function (v: number): string {\n  assert(!isInvalidJSONNumber(v), 'Invalid JSON number'); // MJL\n\n  const ebits = 11,\n    fbits = 52;\n  const bias = (1 << (ebits - 1)) - 1;\n  let s, e, f, ln, i;\n\n  // Compute sign, exponent, fraction\n  // Skip NaN / Infinity handling --MJL.\n  if (v === 0) {\n    e = 0;\n    f = 0;\n    s = 1 / v === -Infinity ? 1 : 0;\n  } else {\n    s = v < 0;\n    v = Math.abs(v);\n\n    if (v >= Math.pow(2, 1 - bias)) {\n      // Normalized\n      ln = Math.min(Math.floor(Math.log(v) / Math.LN2), bias);\n      e = ln + bias;\n      f = Math.round(v * Math.pow(2, fbits - ln) - Math.pow(2, fbits));\n    } else {\n      // Denormalized\n      e = 0;\n      f = Math.round(v / Math.pow(2, 1 - bias - fbits));\n    }\n  }\n\n  // Pack sign, exponent, fraction\n  const bits = [];\n  for (i = fbits; i; i -= 1) {\n    bits.push(f % 2 ? 1 : 0);\n    f = Math.floor(f / 2);\n  }\n  for (i = ebits; i; i -= 1) {\n    bits.push(e % 2 ? 1 : 0);\n    e = Math.floor(e / 2);\n  }\n  bits.push(s ? 1 : 0);\n  bits.reverse();\n  const str = bits.join('');\n\n  // Return the data as a hex string. --MJL\n  let hexByteString = '';\n  for (i = 0; i < 64; i += 8) {\n    let hexByte = parseInt(str.substr(i, 8), 2).toString(16);\n    if (hexByte.length === 1) {\n      hexByte = '0' + hexByte;\n    }\n    hexByteString = hexByteString + hexByte;\n  }\n  return hexByteString.toLowerCase();\n};\n\n/**\n * Used to detect if we're in a Chrome content script (which executes in an\n * isolated environment where long-polling doesn't work).\n */\nexport const isChromeExtensionContentScript = function (): boolean {\n  return !!(\n    typeof window === 'object' &&\n    window['chrome'] &&\n    window['chrome']['extension'] &&\n    !/^chrome/.test(window.location.href)\n  );\n};\n\n/**\n * Used to detect if we're in a Windows 8 Store app.\n */\nexport const isWindowsStoreApp = function (): boolean {\n  // Check for the presence of a couple WinRT globals\n  return typeof Windows === 'object' && typeof Windows.UI === 'object';\n};\n\n/**\n * Converts a server error code to a Javascript Error\n */\nexport function errorForServerCode(code: string, query: QueryContext): Error {\n  let reason = 'Unknown Error';\n  if (code === 'too_big') {\n    reason =\n      'The data requested exceeds the maximum size ' +\n      'that can be accessed with a single request.';\n  } else if (code === 'permission_denied') {\n    reason = \"Client doesn't have permission to access the desired data.\";\n  } else if (code === 'unavailable') {\n    reason = 'The service is unavailable';\n  }\n\n  const error = new Error(\n    code + ' at ' + query._path.toString() + ': ' + reason\n  );\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  (error as any).code = code.toUpperCase();\n  return error;\n}\n\n/**\n * Used to test for integer-looking strings\n */\nexport const INTEGER_REGEXP_ = new RegExp('^-?(0*)\\\\d{1,10}$');\n\n/**\n * For use in keys, the minimum possible 32-bit integer.\n */\nexport const INTEGER_32_MIN = -2147483648;\n\n/**\n * For use in kyes, the maximum possible 32-bit integer.\n */\nexport const INTEGER_32_MAX = 2147483647;\n\n/**\n * If the string contains a 32-bit integer, return it.  Else return null.\n */\nexport const tryParseInt = function (str: string): number | null {\n  if (INTEGER_REGEXP_.test(str)) {\n    const intVal = Number(str);\n    if (intVal >= INTEGER_32_MIN && intVal <= INTEGER_32_MAX) {\n      return intVal;\n    }\n  }\n  return null;\n};\n\n/**\n * Helper to run some code but catch any exceptions and re-throw them later.\n * Useful for preventing user callbacks from breaking internal code.\n *\n * Re-throwing the exception from a setTimeout is a little evil, but it's very\n * convenient (we don't have to try to figure out when is a safe point to\n * re-throw it), and the behavior seems reasonable:\n *\n * * If you aren't pausing on exceptions, you get an error in the console with\n *   the correct stack trace.\n * * If you're pausing on all exceptions, the debugger will pause on your\n *   exception and then again when we rethrow it.\n * * If you're only pausing on uncaught exceptions, the debugger will only pause\n *   on us re-throwing it.\n *\n * @param fn - The code to guard.\n */\nexport const exceptionGuard = function (fn: () => void) {\n  try {\n    fn();\n  } catch (e) {\n    // Re-throw exception when it's safe.\n    setTimeout(() => {\n      // It used to be that \"throw e\" would result in a good console error with\n      // relevant context, but as of Chrome 39, you just get the firebase.js\n      // file/line number where we re-throw it, which is useless. So we log\n      // e.stack explicitly.\n      const stack = e.stack || '';\n      warn('Exception was thrown by user callback.', stack);\n      throw e;\n    }, Math.floor(0));\n  }\n};\n\n/**\n * Helper function to safely call opt_callback with the specified arguments.  It:\n * 1. Turns into a no-op if opt_callback is null or undefined.\n * 2. Wraps the call inside exceptionGuard to prevent exceptions from breaking our state.\n *\n * @param callback - Optional onComplete callback.\n * @param varArgs - Arbitrary args to be passed to opt_onComplete\n */\nexport const callUserCallback = function (\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  callback?: Function | null,\n  ...varArgs: unknown[]\n) {\n  if (typeof callback === 'function') {\n    exceptionGuard(() => {\n      callback(...varArgs);\n    });\n  }\n};\n\n/**\n * @returns {boolean} true if we think we're currently being crawled.\n */\nexport const beingCrawled = function (): boolean {\n  const userAgent =\n    (typeof window === 'object' &&\n      window['navigator'] &&\n      window['navigator']['userAgent']) ||\n    '';\n\n  // For now we whitelist the most popular crawlers.  We should refine this to be the set of crawlers we\n  // believe to support JavaScript/AJAX rendering.\n  // NOTE: Google Webmaster Tools doesn't really belong, but their \"This is how a visitor to your website\n  // would have seen the page\" is flaky if we don't treat it as a crawler.\n  return (\n    userAgent.search(\n      /googlebot|google webmaster tools|bingbot|yahoo! slurp|baiduspider|yandexbot|duckduckbot/i\n    ) >= 0\n  );\n};\n\n/**\n * Export a property of an object using a getter function.\n */\nexport const exportPropGetter = function (\n  object: object,\n  name: string,\n  fnGet: () => unknown\n) {\n  Object.defineProperty(object, name, { get: fnGet });\n};\n\n/**\n * Same as setTimeout() except on Node.JS it will /not/ prevent the process from exiting.\n *\n * It is removed with clearTimeout() as normal.\n *\n * @param fn - Function to run.\n * @param time - Milliseconds to wait before running.\n * @returns The setTimeout() return value.\n */\nexport const setTimeoutNonBlocking = function (\n  fn: () => void,\n  time: number\n): number | object {\n  const timeout: number | object = setTimeout(fn, time);\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  if (typeof timeout === 'object' && (timeout as any)['unref']) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (timeout as any)['unref']();\n  }\n  return timeout;\n};\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AppCheckInternalComponentName,\n  AppCheckTokenListener,\n  AppCheckTokenResult,\n  FirebaseAppCheckInternal\n} from '@firebase/app-check-interop-types';\nimport { Provider } from '@firebase/component';\n\nimport { warn } from './util/util';\n\n/**\n * Abstraction around AppCheck's token fetching capabilities.\n */\nexport class AppCheckTokenProvider {\n  private appCheck?: FirebaseAppCheckInternal;\n  constructor(\n    private appName_: string,\n    private appCheckProvider?: Provider<AppCheckInternalComponentName>\n  ) {\n    this.appCheck = appCheckProvider?.getImmediate({ optional: true });\n    if (!this.appCheck) {\n      appCheckProvider?.get().then(appCheck => (this.appCheck = appCheck));\n    }\n  }\n\n  getToken(forceRefresh?: boolean): Promise<AppCheckTokenResult> {\n    if (!this.appCheck) {\n      return new Promise<AppCheckTokenResult>((resolve, reject) => {\n        // Support delayed initialization of FirebaseAppCheck. This allows our\n        // customers to initialize the RTDB SDK before initializing Firebase\n        // AppCheck and ensures that all requests are authenticated if a token\n        // becomes available before the timoeout below expires.\n        setTimeout(() => {\n          if (this.appCheck) {\n            this.getToken(forceRefresh).then(resolve, reject);\n          } else {\n            resolve(null);\n          }\n        }, 0);\n      });\n    }\n    return this.appCheck.getToken(forceRefresh);\n  }\n\n  addTokenChangeListener(listener: AppCheckTokenListener) {\n    this.appCheckProvider\n      ?.get()\n      .then(appCheck => appCheck.addTokenListener(listener));\n  }\n\n  notifyForInvalidToken(): void {\n    warn(\n      `Provided AppCheck credentials for the app named \"${this.appName_}\" ` +\n        'are invalid. This usually indicates your app was not initialized correctly.'\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseAuthTokenData } from '@firebase/app-types/private';\nimport {\n  FirebaseAuthInternal,\n  FirebaseAuthInternalName\n} from '@firebase/auth-interop-types';\nimport { Provider } from '@firebase/component';\n\nimport { log, warn } from './util/util';\n\nexport interface AuthTokenProvider {\n  getToken(forceRefresh: boolean): Promise<FirebaseAuthTokenData>;\n  addTokenChangeListener(listener: (token: string | null) => void): void;\n  removeTokenChangeListener(listener: (token: string | null) => void): void;\n  notifyForInvalidToken(): void;\n}\n\n/**\n * Abstraction around FirebaseApp's token fetching capabilities.\n */\nexport class FirebaseAuthTokenProvider implements AuthTokenProvider {\n  private auth_: FirebaseAuthInternal | null = null;\n\n  constructor(\n    private appName_: string,\n    private firebaseOptions_: object,\n    private authProvider_: Provider<FirebaseAuthInternalName>\n  ) {\n    this.auth_ = authProvider_.getImmediate({ optional: true });\n    if (!this.auth_) {\n      authProvider_.onInit(auth => (this.auth_ = auth));\n    }\n  }\n\n  getToken(forceRefresh: boolean): Promise<FirebaseAuthTokenData> {\n    if (!this.auth_) {\n      return new Promise<FirebaseAuthTokenData>((resolve, reject) => {\n        // Support delayed initialization of FirebaseAuth. This allows our\n        // customers to initialize the RTDB SDK before initializing Firebase\n        // Auth and ensures that all requests are authenticated if a token\n        // becomes available before the timoeout below expires.\n        setTimeout(() => {\n          if (this.auth_) {\n            this.getToken(forceRefresh).then(resolve, reject);\n          } else {\n            resolve(null);\n          }\n        }, 0);\n      });\n    }\n\n    return this.auth_.getToken(forceRefresh).catch(error => {\n      // TODO: Need to figure out all the cases this is raised and whether\n      // this makes sense.\n      if (error && error.code === 'auth/token-not-initialized') {\n        log('Got auth/token-not-initialized error.  Treating as null token.');\n        return null;\n      } else {\n        return Promise.reject(error);\n      }\n    });\n  }\n\n  addTokenChangeListener(listener: (token: string | null) => void): void {\n    // TODO: We might want to wrap the listener and call it with no args to\n    // avoid a leaky abstraction, but that makes removing the listener harder.\n    if (this.auth_) {\n      this.auth_.addAuthTokenListener(listener);\n    } else {\n      this.authProvider_\n        .get()\n        .then(auth => auth.addAuthTokenListener(listener));\n    }\n  }\n\n  removeTokenChangeListener(listener: (token: string | null) => void): void {\n    this.authProvider_\n      .get()\n      .then(auth => auth.removeAuthTokenListener(listener));\n  }\n\n  notifyForInvalidToken(): void {\n    let errorMessage =\n      'Provided authentication credentials for the app named \"' +\n      this.appName_ +\n      '\" are invalid. This usually indicates your app was not ' +\n      'initialized correctly. ';\n    if ('credential' in this.firebaseOptions_) {\n      errorMessage +=\n        'Make sure the \"credential\" property provided to initializeApp() ' +\n        'is authorized to access the specified \"databaseURL\" and is from the correct ' +\n        'project.';\n    } else if ('serviceAccount' in this.firebaseOptions_) {\n      errorMessage +=\n        'Make sure the \"serviceAccount\" property provided to initializeApp() ' +\n        'is authorized to access the specified \"databaseURL\" and is from the correct ' +\n        'project.';\n    } else {\n      errorMessage +=\n        'Make sure the \"apiKey\" and \"databaseURL\" properties provided to ' +\n        'initializeApp() match the values provided for your app at ' +\n        'https://console.firebase.google.com/.';\n    }\n    warn(errorMessage);\n  }\n}\n\n/* AuthTokenProvider that supplies a constant token. Used by Admin SDK or mockUserToken with emulators. */\nexport class EmulatorTokenProvider implements AuthTokenProvider {\n  /** A string that is treated as an admin access token by the RTDB emulator. Used by Admin SDK. */\n  static OWNER = 'owner';\n\n  constructor(private accessToken: string) {}\n\n  getToken(forceRefresh: boolean): Promise<FirebaseAuthTokenData> {\n    return Promise.resolve({\n      accessToken: this.accessToken\n    });\n  }\n\n  addTokenChangeListener(listener: (token: string | null) => void): void {\n    // Invoke the listener immediately to match the behavior in Firebase Auth\n    // (see packages/auth/src/auth.js#L1807)\n    listener(this.accessToken);\n  }\n\n  removeTokenChangeListener(listener: (token: string | null) => void): void {}\n\n  notifyForInvalidToken(): void {}\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const PROTOCOL_VERSION = '5';\n\nexport const VERSION_PARAM = 'v';\n\nexport const TRANSPORT_SESSION_PARAM = 's';\n\nexport const REFERER_PARAM = 'r';\n\nexport const FORGE_REF = 'f';\n\n// Matches console.firebase.google.com, firebase-console-*.corp.google.com and\n// firebase.corp.google.com\nexport const FORGE_DOMAIN_RE =\n  /(console\\.firebase|firebase-console-\\w+\\.corp|firebase\\.corp)\\.google\\.com/;\n\nexport const LAST_SESSION_PARAM = 'ls';\n\nexport const APPLICATION_ID_PARAM = 'p';\n\nexport const APP_CHECK_TOKEN_PARAM = 'ac';\n\nexport const WEBSOCKET = 'websocket';\n\nexport const LONG_POLLING = 'long_polling';\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { LONG_POLLING, WEBSOCKET } from '../realtime/Constants';\n\nimport { PersistentStorage } from './storage/storage';\nimport { each } from './util/util';\n\n/**\n * A class that holds metadata about a Repo object\n */\nexport class RepoInfo {\n  private _host: string;\n  private _domain: string;\n  internalHost: string;\n\n  /**\n   * @param host - Hostname portion of the url for the repo\n   * @param secure - Whether or not this repo is accessed over ssl\n   * @param namespace - The namespace represented by the repo\n   * @param webSocketOnly - Whether to prefer websockets over all other transports (used by Nest).\n   * @param nodeAdmin - Whether this instance uses Admin SDK credentials\n   * @param persistenceKey - Override the default session persistence storage key\n   */\n  constructor(\n    host: string,\n    public readonly secure: boolean,\n    public readonly namespace: string,\n    public readonly webSocketOnly: boolean,\n    public readonly nodeAdmin: boolean = false,\n    public readonly persistenceKey: string = '',\n    public readonly includeNamespaceInQueryParams: boolean = false\n  ) {\n    this._host = host.toLowerCase();\n    this._domain = this._host.substr(this._host.indexOf('.') + 1);\n    this.internalHost =\n      (PersistentStorage.get('host:' + host) as string) || this._host;\n  }\n\n  isCacheableHost(): boolean {\n    return this.internalHost.substr(0, 2) === 's-';\n  }\n\n  isCustomHost() {\n    return (\n      this._domain !== 'firebaseio.com' &&\n      this._domain !== 'firebaseio-demo.com'\n    );\n  }\n\n  get host() {\n    return this._host;\n  }\n\n  set host(newHost: string) {\n    if (newHost !== this.internalHost) {\n      this.internalHost = newHost;\n      if (this.isCacheableHost()) {\n        PersistentStorage.set('host:' + this._host, this.internalHost);\n      }\n    }\n  }\n\n  toString(): string {\n    let str = this.toURLString();\n    if (this.persistenceKey) {\n      str += '<' + this.persistenceKey + '>';\n    }\n    return str;\n  }\n\n  toURLString(): string {\n    const protocol = this.secure ? 'https://' : 'http://';\n    const query = this.includeNamespaceInQueryParams\n      ? `?ns=${this.namespace}`\n      : '';\n    return `${protocol}${this.host}/${query}`;\n  }\n}\n\nfunction repoInfoNeedsQueryParam(repoInfo: RepoInfo): boolean {\n  return (\n    repoInfo.host !== repoInfo.internalHost ||\n    repoInfo.isCustomHost() ||\n    repoInfo.includeNamespaceInQueryParams\n  );\n}\n\n/**\n * Returns the websocket URL for this repo\n * @param repoInfo - RepoInfo object\n * @param type - of connection\n * @param params - list\n * @returns The URL for this repo\n */\nexport function repoInfoConnectionURL(\n  repoInfo: RepoInfo,\n  type: string,\n  params: { [k: string]: string }\n): string {\n  assert(typeof type === 'string', 'typeof type must == string');\n  assert(typeof params === 'object', 'typeof params must == object');\n\n  let connURL: string;\n  if (type === WEBSOCKET) {\n    connURL =\n      (repoInfo.secure ? 'wss://' : 'ws://') + repoInfo.internalHost + '/.ws?';\n  } else if (type === LONG_POLLING) {\n    connURL =\n      (repoInfo.secure ? 'https://' : 'http://') +\n      repoInfo.internalHost +\n      '/.lp?';\n  } else {\n    throw new Error('Unknown connection type: ' + type);\n  }\n  if (repoInfoNeedsQueryParam(repoInfo)) {\n    params['ns'] = repoInfo.namespace;\n  }\n\n  const pairs: string[] = [];\n\n  each(params, (key: string, value: string) => {\n    pairs.push(key + '=' + value);\n  });\n\n  return connURL + pairs.join('&');\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { deepCopy, contains } from '@firebase/util';\n\n/**\n * Tracks a collection of stats.\n */\nexport class StatsCollection {\n  private counters_: { [k: string]: number } = {};\n\n  incrementCounter(name: string, amount: number = 1) {\n    if (!contains(this.counters_, name)) {\n      this.counters_[name] = 0;\n    }\n\n    this.counters_[name] += amount;\n  }\n\n  get() {\n    return deepCopy(this.counters_);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RepoInfo } from '../RepoInfo';\n\nimport { StatsCollection } from './StatsCollection';\n\nconst collections: { [k: string]: StatsCollection } = {};\nconst reporters: { [k: string]: unknown } = {};\n\nexport function statsManagerGetCollection(repoInfo: RepoInfo): StatsCollection {\n  const hashString = repoInfo.toString();\n\n  if (!collections[hashString]) {\n    collections[hashString] = new StatsCollection();\n  }\n\n  return collections[hashString];\n}\n\nexport function statsManagerGetOrCreateReporter<T>(\n  repoInfo: RepoInfo,\n  creatorFunction: () => T\n): T {\n  const hashString = repoInfo.toString();\n\n  if (!reporters[hashString]) {\n    reporters[hashString] = creatorFunction();\n  }\n\n  return reporters[hashString] as T;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { exceptionGuard } from '../../core/util/util';\n\n/**\n * This class ensures the packets from the server arrive in order\n * This class takes data from the server and ensures it gets passed into the callbacks in order.\n */\nexport class PacketReceiver {\n  pendingResponses: unknown[] = [];\n  currentResponseNum = 0;\n  closeAfterResponse = -1;\n  onClose: (() => void) | null = null;\n\n  /**\n   * @param onMessage_\n   */\n  constructor(private onMessage_: (a: {}) => void) {}\n\n  closeAfter(responseNum: number, callback: () => void) {\n    this.closeAfterResponse = responseNum;\n    this.onClose = callback;\n    if (this.closeAfterResponse < this.currentResponseNum) {\n      this.onClose();\n      this.onClose = null;\n    }\n  }\n\n  /**\n   * Each message from the server comes with a response number, and an array of data. The responseNumber\n   * allows us to ensure that we process them in the right order, since we can't be guaranteed that all\n   * browsers will respond in the same order as the requests we sent\n   */\n  handleResponse(requestNum: number, data: unknown[]) {\n    this.pendingResponses[requestNum] = data;\n    while (this.pendingResponses[this.currentResponseNum]) {\n      const toProcess = this.pendingResponses[\n        this.currentResponseNum\n      ] as unknown[];\n      delete this.pendingResponses[this.currentResponseNum];\n      for (let i = 0; i < toProcess.length; ++i) {\n        if (toProcess[i]) {\n          exceptionGuard(() => {\n            this.onMessage_(toProcess[i]);\n          });\n        }\n      }\n      if (this.currentResponseNum === this.closeAfterResponse) {\n        if (this.onClose) {\n          this.onClose();\n          this.onClose = null;\n        }\n        break;\n      }\n      this.currentResponseNum++;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { base64Encode, isNodeSdk, stringify } from '@firebase/util';\n\nimport { RepoInfo, repoInfoConnectionURL } from '../core/RepoInfo';\nimport { StatsCollection } from '../core/stats/StatsCollection';\nimport { statsManagerGetCollection } from '../core/stats/StatsManager';\nimport {\n  executeWhenDOMReady,\n  isChromeExtensionContentScript,\n  isWindowsStoreApp,\n  log,\n  logWrapper,\n  LUIDGenerator,\n  splitStringBySize\n} from '../core/util/util';\n\nimport {\n  APP_CHECK_TOKEN_PARAM,\n  APPLICATION_ID_PARAM,\n  FORGE_DOMAIN_RE,\n  FORGE_REF,\n  LAST_SESSION_PARAM,\n  LONG_POLLING,\n  PROTOCOL_VERSION,\n  REFERER_PARAM,\n  TRANSPORT_SESSION_PARAM,\n  VERSION_PARAM\n} from './Constants';\nimport { PacketReceiver } from './polling/PacketReceiver';\nimport { Transport } from './Transport';\n\n// URL query parameters associated with longpolling\nexport const FIREBASE_LONGPOLL_START_PARAM = 'start';\nexport const FIREBASE_LONGPOLL_CLOSE_COMMAND = 'close';\nexport const FIREBASE_LONGPOLL_COMMAND_CB_NAME = 'pLPCommand';\nexport const FIREBASE_LONGPOLL_DATA_CB_NAME = 'pRTLPCB';\nexport const FIREBASE_LONGPOLL_ID_PARAM = 'id';\nexport const FIREBASE_LONGPOLL_PW_PARAM = 'pw';\nexport const FIREBASE_LONGPOLL_SERIAL_PARAM = 'ser';\nexport const FIREBASE_LONGPOLL_CALLBACK_ID_PARAM = 'cb';\nexport const FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM = 'seg';\nexport const FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET = 'ts';\nexport const FIREBASE_LONGPOLL_DATA_PARAM = 'd';\nexport const FIREBASE_LONGPOLL_DISCONN_FRAME_PARAM = 'disconn';\nexport const FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM = 'dframe';\n\n//Data size constants.\n//TODO: Perf: the maximum length actually differs from browser to browser.\n// We should check what browser we're on and set accordingly.\nconst MAX_URL_DATA_SIZE = 1870;\nconst SEG_HEADER_SIZE = 30; //ie: &seg=8299234&ts=982389123&d=\nconst MAX_PAYLOAD_SIZE = MAX_URL_DATA_SIZE - SEG_HEADER_SIZE;\n\n/**\n * Keepalive period\n * send a fresh request at minimum every 25 seconds. Opera has a maximum request\n * length of 30 seconds that we can't exceed.\n */\nconst KEEPALIVE_REQUEST_INTERVAL = 25000;\n\n/**\n * How long to wait before aborting a long-polling connection attempt.\n */\nconst LP_CONNECT_TIMEOUT = 30000;\n\n/**\n * This class manages a single long-polling connection.\n */\nexport class BrowserPollConnection implements Transport {\n  bytesSent = 0;\n  bytesReceived = 0;\n  urlFn: (params: object) => string;\n  scriptTagHolder: FirebaseIFrameScriptHolder;\n  myDisconnFrame: HTMLIFrameElement;\n  curSegmentNum: number;\n  myPacketOrderer: PacketReceiver;\n  id: string;\n  password: string;\n  private log_: (...a: unknown[]) => void;\n  private stats_: StatsCollection;\n  private everConnected_ = false;\n  private isClosed_: boolean;\n  private connectTimeoutTimer_: number | null;\n  private onDisconnect_: ((a?: boolean) => void) | null;\n\n  /**\n   * @param connId An identifier for this connection, used for logging\n   * @param repoInfo The info for the endpoint to send data to.\n   * @param applicationId The Firebase App ID for this project.\n   * @param appCheckToken The AppCheck token for this client.\n   * @param authToken The AuthToken to use for this connection.\n   * @param transportSessionId Optional transportSessionid if we are\n   * reconnecting for an existing transport session\n   * @param lastSessionId Optional lastSessionId if the PersistentConnection has\n   * already created a connection previously\n   */\n  constructor(\n    public connId: string,\n    public repoInfo: RepoInfo,\n    private applicationId?: string,\n    private appCheckToken?: string,\n    private authToken?: string,\n    public transportSessionId?: string,\n    public lastSessionId?: string\n  ) {\n    this.log_ = logWrapper(connId);\n    this.stats_ = statsManagerGetCollection(repoInfo);\n    this.urlFn = (params: { [k: string]: string }) => {\n      // Always add the token if we have one.\n      if (this.appCheckToken) {\n        params[APP_CHECK_TOKEN_PARAM] = this.appCheckToken;\n      }\n      return repoInfoConnectionURL(repoInfo, LONG_POLLING, params);\n    };\n  }\n\n  /**\n   * @param onMessage - Callback when messages arrive\n   * @param onDisconnect - Callback with connection lost.\n   */\n  open(onMessage: (msg: {}) => void, onDisconnect: (a?: boolean) => void) {\n    this.curSegmentNum = 0;\n    this.onDisconnect_ = onDisconnect;\n    this.myPacketOrderer = new PacketReceiver(onMessage);\n    this.isClosed_ = false;\n\n    this.connectTimeoutTimer_ = setTimeout(() => {\n      this.log_('Timed out trying to connect.');\n      // Make sure we clear the host cache\n      this.onClosed_();\n      this.connectTimeoutTimer_ = null;\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    }, Math.floor(LP_CONNECT_TIMEOUT)) as any;\n\n    // Ensure we delay the creation of the iframe until the DOM is loaded.\n    executeWhenDOMReady(() => {\n      if (this.isClosed_) {\n        return;\n      }\n\n      //Set up a callback that gets triggered once a connection is set up.\n      this.scriptTagHolder = new FirebaseIFrameScriptHolder(\n        (...args) => {\n          const [command, arg1, arg2, arg3, arg4] = args;\n          this.incrementIncomingBytes_(args);\n          if (!this.scriptTagHolder) {\n            return; // we closed the connection.\n          }\n\n          if (this.connectTimeoutTimer_) {\n            clearTimeout(this.connectTimeoutTimer_);\n            this.connectTimeoutTimer_ = null;\n          }\n          this.everConnected_ = true;\n          if (command === FIREBASE_LONGPOLL_START_PARAM) {\n            this.id = arg1 as string;\n            this.password = arg2 as string;\n          } else if (command === FIREBASE_LONGPOLL_CLOSE_COMMAND) {\n            // Don't clear the host cache. We got a response from the server, so we know it's reachable\n            if (arg1) {\n              // We aren't expecting any more data (other than what the server's already in the process of sending us\n              // through our already open polls), so don't send any more.\n              this.scriptTagHolder.sendNewPolls = false;\n\n              // arg1 in this case is the last response number sent by the server. We should try to receive\n              // all of the responses up to this one before closing\n              this.myPacketOrderer.closeAfter(arg1 as number, () => {\n                this.onClosed_();\n              });\n            } else {\n              this.onClosed_();\n            }\n          } else {\n            throw new Error('Unrecognized command received: ' + command);\n          }\n        },\n        (...args) => {\n          const [pN, data] = args;\n          this.incrementIncomingBytes_(args);\n          this.myPacketOrderer.handleResponse(pN as number, data as unknown[]);\n        },\n        () => {\n          this.onClosed_();\n        },\n        this.urlFn\n      );\n\n      //Send the initial request to connect. The serial number is simply to keep the browser from pulling previous results\n      //from cache.\n      const urlParams: { [k: string]: string | number } = {};\n      urlParams[FIREBASE_LONGPOLL_START_PARAM] = 't';\n      urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = Math.floor(\n        Math.random() * 100000000\n      );\n      if (this.scriptTagHolder.uniqueCallbackIdentifier) {\n        urlParams[FIREBASE_LONGPOLL_CALLBACK_ID_PARAM] =\n          this.scriptTagHolder.uniqueCallbackIdentifier;\n      }\n      urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\n      if (this.transportSessionId) {\n        urlParams[TRANSPORT_SESSION_PARAM] = this.transportSessionId;\n      }\n      if (this.lastSessionId) {\n        urlParams[LAST_SESSION_PARAM] = this.lastSessionId;\n      }\n      if (this.applicationId) {\n        urlParams[APPLICATION_ID_PARAM] = this.applicationId;\n      }\n      if (this.appCheckToken) {\n        urlParams[APP_CHECK_TOKEN_PARAM] = this.appCheckToken;\n      }\n      if (\n        typeof location !== 'undefined' &&\n        location.hostname &&\n        FORGE_DOMAIN_RE.test(location.hostname)\n      ) {\n        urlParams[REFERER_PARAM] = FORGE_REF;\n      }\n      const connectURL = this.urlFn(urlParams);\n      this.log_('Connecting via long-poll to ' + connectURL);\n      this.scriptTagHolder.addTag(connectURL, () => {\n        /* do nothing */\n      });\n    });\n  }\n\n  /**\n   * Call this when a handshake has completed successfully and we want to consider the connection established\n   */\n  start() {\n    this.scriptTagHolder.startLongPoll(this.id, this.password);\n    this.addDisconnectPingFrame(this.id, this.password);\n  }\n\n  private static forceAllow_: boolean;\n\n  /**\n   * Forces long polling to be considered as a potential transport\n   */\n  static forceAllow() {\n    BrowserPollConnection.forceAllow_ = true;\n  }\n\n  private static forceDisallow_: boolean;\n\n  /**\n   * Forces longpolling to not be considered as a potential transport\n   */\n  static forceDisallow() {\n    BrowserPollConnection.forceDisallow_ = true;\n  }\n\n  // Static method, use string literal so it can be accessed in a generic way\n  static isAvailable() {\n    if (isNodeSdk()) {\n      return false;\n    } else if (BrowserPollConnection.forceAllow_) {\n      return true;\n    } else {\n      // NOTE: In React-Native there's normally no 'document', but if you debug a React-Native app in\n      // the Chrome debugger, 'document' is defined, but document.createElement is null (2015/06/08).\n      return (\n        !BrowserPollConnection.forceDisallow_ &&\n        typeof document !== 'undefined' &&\n        document.createElement != null &&\n        !isChromeExtensionContentScript() &&\n        !isWindowsStoreApp()\n      );\n    }\n  }\n\n  /**\n   * No-op for polling\n   */\n  markConnectionHealthy() {}\n\n  /**\n   * Stops polling and cleans up the iframe\n   */\n  private shutdown_() {\n    this.isClosed_ = true;\n\n    if (this.scriptTagHolder) {\n      this.scriptTagHolder.close();\n      this.scriptTagHolder = null;\n    }\n\n    //remove the disconnect frame, which will trigger an XHR call to the server to tell it we're leaving.\n    if (this.myDisconnFrame) {\n      document.body.removeChild(this.myDisconnFrame);\n      this.myDisconnFrame = null;\n    }\n\n    if (this.connectTimeoutTimer_) {\n      clearTimeout(this.connectTimeoutTimer_);\n      this.connectTimeoutTimer_ = null;\n    }\n  }\n\n  /**\n   * Triggered when this transport is closed\n   */\n  private onClosed_() {\n    if (!this.isClosed_) {\n      this.log_('Longpoll is closing itself');\n      this.shutdown_();\n\n      if (this.onDisconnect_) {\n        this.onDisconnect_(this.everConnected_);\n        this.onDisconnect_ = null;\n      }\n    }\n  }\n\n  /**\n   * External-facing close handler. RealTime has requested we shut down. Kill our connection and tell the server\n   * that we've left.\n   */\n  close() {\n    if (!this.isClosed_) {\n      this.log_('Longpoll is being closed.');\n      this.shutdown_();\n    }\n  }\n\n  /**\n   * Send the JSON object down to the server. It will need to be stringified, base64 encoded, and then\n   * broken into chunks (since URLs have a small maximum length).\n   * @param data - The JSON data to transmit.\n   */\n  send(data: {}) {\n    const dataStr = stringify(data);\n    this.bytesSent += dataStr.length;\n    this.stats_.incrementCounter('bytes_sent', dataStr.length);\n\n    //first, lets get the base64-encoded data\n    const base64data = base64Encode(dataStr);\n\n    //We can only fit a certain amount in each URL, so we need to split this request\n    //up into multiple pieces if it doesn't fit in one request.\n    const dataSegs = splitStringBySize(base64data, MAX_PAYLOAD_SIZE);\n\n    //Enqueue each segment for transmission. We assign each chunk a sequential ID and a total number\n    //of segments so that we can reassemble the packet on the server.\n    for (let i = 0; i < dataSegs.length; i++) {\n      this.scriptTagHolder.enqueueSegment(\n        this.curSegmentNum,\n        dataSegs.length,\n        dataSegs[i]\n      );\n      this.curSegmentNum++;\n    }\n  }\n\n  /**\n   * This is how we notify the server that we're leaving.\n   * We aren't able to send requests with DHTML on a window close event, but we can\n   * trigger XHR requests in some browsers (everything but Opera basically).\n   */\n  addDisconnectPingFrame(id: string, pw: string) {\n    if (isNodeSdk()) {\n      return;\n    }\n    this.myDisconnFrame = document.createElement('iframe');\n    const urlParams: { [k: string]: string } = {};\n    urlParams[FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM] = 't';\n    urlParams[FIREBASE_LONGPOLL_ID_PARAM] = id;\n    urlParams[FIREBASE_LONGPOLL_PW_PARAM] = pw;\n    this.myDisconnFrame.src = this.urlFn(urlParams);\n    this.myDisconnFrame.style.display = 'none';\n\n    document.body.appendChild(this.myDisconnFrame);\n  }\n\n  /**\n   * Used to track the bytes received by this client\n   */\n  private incrementIncomingBytes_(args: unknown) {\n    // TODO: This is an annoying perf hit just to track the number of incoming bytes.  Maybe it should be opt-in.\n    const bytesReceived = stringify(args).length;\n    this.bytesReceived += bytesReceived;\n    this.stats_.incrementCounter('bytes_received', bytesReceived);\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport interface IFrameElement extends HTMLIFrameElement {\n  doc: Document;\n}\n\n/*********************************************************************************************\n * A wrapper around an iframe that is used as a long-polling script holder.\n *********************************************************************************************/\nexport class FirebaseIFrameScriptHolder {\n  //We maintain a count of all of the outstanding requests, because if we have too many active at once it can cause\n  //problems in some browsers.\n  outstandingRequests = new Set<number>();\n\n  //A queue of the pending segments waiting for transmission to the server.\n  pendingSegs: Array<{ seg: number; ts: number; d: unknown }> = [];\n\n  //A serial number. We use this for two things:\n  // 1) A way to ensure the browser doesn't cache responses to polls\n  // 2) A way to make the server aware when long-polls arrive in a different order than we started them. The\n  //    server needs to release both polls in this case or it will cause problems in Opera since Opera can only execute\n  //    JSONP code in the order it was added to the iframe.\n  currentSerial = Math.floor(Math.random() * 100000000);\n\n  // This gets set to false when we're \"closing down\" the connection (e.g. we're switching transports but there's still\n  // incoming data from the server that we're waiting for).\n  sendNewPolls = true;\n\n  uniqueCallbackIdentifier: number;\n  myIFrame: IFrameElement;\n  alive: boolean;\n  myID: string;\n  myPW: string;\n  commandCB: (command: string, ...args: unknown[]) => void;\n  onMessageCB: (...args: unknown[]) => void;\n\n  /**\n   * @param commandCB - The callback to be called when control commands are recevied from the server.\n   * @param onMessageCB - The callback to be triggered when responses arrive from the server.\n   * @param onDisconnect - The callback to be triggered when this tag holder is closed\n   * @param urlFn - A function that provides the URL of the endpoint to send data to.\n   */\n  constructor(\n    commandCB: (command: string, ...args: unknown[]) => void,\n    onMessageCB: (...args: unknown[]) => void,\n    public onDisconnect: () => void,\n    public urlFn: (a: object) => string\n  ) {\n    if (!isNodeSdk()) {\n      //Each script holder registers a couple of uniquely named callbacks with the window. These are called from the\n      //iframes where we put the long-polling script tags. We have two callbacks:\n      //   1) Command Callback - Triggered for control issues, like starting a connection.\n      //   2) Message Callback - Triggered when new data arrives.\n      this.uniqueCallbackIdentifier = LUIDGenerator();\n      window[\n        FIREBASE_LONGPOLL_COMMAND_CB_NAME + this.uniqueCallbackIdentifier\n      ] = commandCB;\n      window[FIREBASE_LONGPOLL_DATA_CB_NAME + this.uniqueCallbackIdentifier] =\n        onMessageCB;\n\n      //Create an iframe for us to add script tags to.\n      this.myIFrame = FirebaseIFrameScriptHolder.createIFrame_();\n\n      // Set the iframe's contents.\n      let script = '';\n      // if we set a javascript url, it's IE and we need to set the document domain. The javascript url is sufficient\n      // for ie9, but ie8 needs to do it again in the document itself.\n      if (\n        this.myIFrame.src &&\n        this.myIFrame.src.substr(0, 'javascript:'.length) === 'javascript:'\n      ) {\n        const currentDomain = document.domain;\n        script = '<script>document.domain=\"' + currentDomain + '\";</script>';\n      }\n      const iframeContents = '<html><body>' + script + '</body></html>';\n      try {\n        this.myIFrame.doc.open();\n        this.myIFrame.doc.write(iframeContents);\n        this.myIFrame.doc.close();\n      } catch (e) {\n        log('frame writing exception');\n        if (e.stack) {\n          log(e.stack);\n        }\n        log(e);\n      }\n    } else {\n      this.commandCB = commandCB;\n      this.onMessageCB = onMessageCB;\n    }\n  }\n\n  /**\n   * Each browser has its own funny way to handle iframes. Here we mush them all together into one object that I can\n   * actually use.\n   */\n  private static createIFrame_(): IFrameElement {\n    const iframe = document.createElement('iframe') as IFrameElement;\n    iframe.style.display = 'none';\n\n    // This is necessary in order to initialize the document inside the iframe\n    if (document.body) {\n      document.body.appendChild(iframe);\n      try {\n        // If document.domain has been modified in IE, this will throw an error, and we need to set the\n        // domain of the iframe's document manually. We can do this via a javascript: url as the src attribute\n        // Also note that we must do this *after* the iframe has been appended to the page. Otherwise it doesn't work.\n        const a = iframe.contentWindow.document;\n        if (!a) {\n          // Apologies for the log-spam, I need to do something to keep closure from optimizing out the assignment above.\n          log('No IE domain setting required');\n        }\n      } catch (e) {\n        const domain = document.domain;\n        iframe.src =\n          \"javascript:void((function(){document.open();document.domain='\" +\n          domain +\n          \"';document.close();})())\";\n      }\n    } else {\n      // LongPollConnection attempts to delay initialization until the document is ready, so hopefully this\n      // never gets hit.\n      throw 'Document body has not initialized. Wait to initialize Firebase until after the document is ready.';\n    }\n\n    // Get the document of the iframe in a browser-specific way.\n    if (iframe.contentDocument) {\n      iframe.doc = iframe.contentDocument; // Firefox, Opera, Safari\n    } else if (iframe.contentWindow) {\n      iframe.doc = iframe.contentWindow.document; // Internet Explorer\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } else if ((iframe as any).document) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      iframe.doc = (iframe as any).document; //others?\n    }\n\n    return iframe;\n  }\n\n  /**\n   * Cancel all outstanding queries and remove the frame.\n   */\n  close() {\n    //Mark this iframe as dead, so no new requests are sent.\n    this.alive = false;\n\n    if (this.myIFrame) {\n      //We have to actually remove all of the html inside this iframe before removing it from the\n      //window, or IE will continue loading and executing the script tags we've already added, which\n      //can lead to some errors being thrown. Setting innerHTML seems to be the easiest way to do this.\n      this.myIFrame.doc.body.innerHTML = '';\n      setTimeout(() => {\n        if (this.myIFrame !== null) {\n          document.body.removeChild(this.myIFrame);\n          this.myIFrame = null;\n        }\n      }, Math.floor(0));\n    }\n\n    // Protect from being called recursively.\n    const onDisconnect = this.onDisconnect;\n    if (onDisconnect) {\n      this.onDisconnect = null;\n      onDisconnect();\n    }\n  }\n\n  /**\n   * Actually start the long-polling session by adding the first script tag(s) to the iframe.\n   * @param id - The ID of this connection\n   * @param pw - The password for this connection\n   */\n  startLongPoll(id: string, pw: string) {\n    this.myID = id;\n    this.myPW = pw;\n    this.alive = true;\n\n    //send the initial request. If there are requests queued, make sure that we transmit as many as we are currently able to.\n    while (this.newRequest_()) {}\n  }\n\n  /**\n   * This is called any time someone might want a script tag to be added. It adds a script tag when there aren't\n   * too many outstanding requests and we are still alive.\n   *\n   * If there are outstanding packet segments to send, it sends one. If there aren't, it sends a long-poll anyways if\n   * needed.\n   */\n  private newRequest_() {\n    // We keep one outstanding request open all the time to receive data, but if we need to send data\n    // (pendingSegs.length > 0) then we create a new request to send the data.  The server will automatically\n    // close the old request.\n    if (\n      this.alive &&\n      this.sendNewPolls &&\n      this.outstandingRequests.size < (this.pendingSegs.length > 0 ? 2 : 1)\n    ) {\n      //construct our url\n      this.currentSerial++;\n      const urlParams: { [k: string]: string | number } = {};\n      urlParams[FIREBASE_LONGPOLL_ID_PARAM] = this.myID;\n      urlParams[FIREBASE_LONGPOLL_PW_PARAM] = this.myPW;\n      urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = this.currentSerial;\n      let theURL = this.urlFn(urlParams);\n      //Now add as much data as we can.\n      let curDataString = '';\n      let i = 0;\n\n      while (this.pendingSegs.length > 0) {\n        //first, lets see if the next segment will fit.\n        const nextSeg = this.pendingSegs[0];\n        if (\n          (nextSeg.d as unknown[]).length +\n            SEG_HEADER_SIZE +\n            curDataString.length <=\n          MAX_URL_DATA_SIZE\n        ) {\n          //great, the segment will fit. Lets append it.\n          const theSeg = this.pendingSegs.shift();\n          curDataString =\n            curDataString +\n            '&' +\n            FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM +\n            i +\n            '=' +\n            theSeg.seg +\n            '&' +\n            FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET +\n            i +\n            '=' +\n            theSeg.ts +\n            '&' +\n            FIREBASE_LONGPOLL_DATA_PARAM +\n            i +\n            '=' +\n            theSeg.d;\n          i++;\n        } else {\n          break;\n        }\n      }\n\n      theURL = theURL + curDataString;\n      this.addLongPollTag_(theURL, this.currentSerial);\n\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Queue a packet for transmission to the server.\n   * @param segnum - A sequential id for this packet segment used for reassembly\n   * @param totalsegs - The total number of segments in this packet\n   * @param data - The data for this segment.\n   */\n  enqueueSegment(segnum: number, totalsegs: number, data: unknown) {\n    //add this to the queue of segments to send.\n    this.pendingSegs.push({ seg: segnum, ts: totalsegs, d: data });\n\n    //send the data immediately if there isn't already data being transmitted, unless\n    //startLongPoll hasn't been called yet.\n    if (this.alive) {\n      this.newRequest_();\n    }\n  }\n\n  /**\n   * Add a script tag for a regular long-poll request.\n   * @param url - The URL of the script tag.\n   * @param serial - The serial number of the request.\n   */\n  private addLongPollTag_(url: string, serial: number) {\n    //remember that we sent this request.\n    this.outstandingRequests.add(serial);\n\n    const doNewRequest = () => {\n      this.outstandingRequests.delete(serial);\n      this.newRequest_();\n    };\n\n    // If this request doesn't return on its own accord (by the server sending us some data), we'll\n    // create a new one after the KEEPALIVE interval to make sure we always keep a fresh request open.\n    const keepaliveTimeout = setTimeout(\n      doNewRequest,\n      Math.floor(KEEPALIVE_REQUEST_INTERVAL)\n    );\n\n    const readyStateCB = () => {\n      // Request completed.  Cancel the keepalive.\n      clearTimeout(keepaliveTimeout);\n\n      // Trigger a new request so we can continue receiving data.\n      doNewRequest();\n    };\n\n    this.addTag(url, readyStateCB);\n  }\n\n  /**\n   * Add an arbitrary script tag to the iframe.\n   * @param url - The URL for the script tag source.\n   * @param loadCB - A callback to be triggered once the script has loaded.\n   */\n  addTag(url: string, loadCB: () => void) {\n    if (isNodeSdk()) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (this as any).doNodeLongPoll(url, loadCB);\n    } else {\n      setTimeout(() => {\n        try {\n          // if we're already closed, don't add this poll\n          if (!this.sendNewPolls) {\n            return;\n          }\n          const newScript = this.myIFrame.doc.createElement('script');\n          newScript.type = 'text/javascript';\n          newScript.async = true;\n          newScript.src = url;\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          newScript.onload = (newScript as any).onreadystatechange =\n            function () {\n              // eslint-disable-next-line @typescript-eslint/no-explicit-any\n              const rstate = (newScript as any).readyState;\n              if (!rstate || rstate === 'loaded' || rstate === 'complete') {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                newScript.onload = (newScript as any).onreadystatechange = null;\n                if (newScript.parentNode) {\n                  newScript.parentNode.removeChild(newScript);\n                }\n                loadCB();\n              }\n            };\n          newScript.onerror = () => {\n            log('Long-poll script failed to load: ' + url);\n            this.sendNewPolls = false;\n            this.close();\n          };\n          this.myIFrame.doc.body.appendChild(newScript);\n        } catch (e) {\n          // TODO: we should make this error visible somehow\n        }\n      }, Math.floor(1));\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, isNodeSdk, jsonEval, stringify } from '@firebase/util';\n\nimport { RepoInfo, repoInfoConnectionURL } from '../core/RepoInfo';\nimport { StatsCollection } from '../core/stats/StatsCollection';\nimport { statsManagerGetCollection } from '../core/stats/StatsManager';\nimport { PersistentStorage } from '../core/storage/storage';\nimport { logWrapper, splitStringBySize } from '../core/util/util';\nimport { SDK_VERSION } from '../core/version';\n\nimport {\n  APP_CHECK_TOKEN_PARAM,\n  FORGE_DOMAIN_RE,\n  FORGE_REF,\n  LAST_SESSION_PARAM,\n  PROTOCOL_VERSION,\n  REFERER_PARAM,\n  TRANSPORT_SESSION_PARAM,\n  VERSION_PARAM,\n  WEBSOCKET\n} from './Constants';\nimport { Transport } from './Transport';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ndeclare const MozWebSocket: any;\n\nconst WEBSOCKET_MAX_FRAME_SIZE = 16384;\nconst WEBSOCKET_KEEPALIVE_INTERVAL = 45000;\n\nlet WebSocketImpl = null;\nif (typeof MozWebSocket !== 'undefined') {\n  WebSocketImpl = MozWebSocket;\n} else if (typeof WebSocket !== 'undefined') {\n  WebSocketImpl = WebSocket;\n}\n\nexport function setWebSocketImpl(impl) {\n  WebSocketImpl = impl;\n}\n\n/**\n * Create a new websocket connection with the given callbacks.\n */\nexport class WebSocketConnection implements Transport {\n  keepaliveTimer: number | null = null;\n  frames: string[] | null = null;\n  totalFrames = 0;\n  bytesSent = 0;\n  bytesReceived = 0;\n  connURL: string;\n  onDisconnect: (a?: boolean) => void;\n  onMessage: (msg: {}) => void;\n  mySock: WebSocket | null;\n  private log_: (...a: unknown[]) => void;\n  private stats_: StatsCollection;\n  private everConnected_: boolean;\n  private isClosed_: boolean;\n  private nodeAdmin: boolean;\n\n  /**\n   * @param connId identifier for this transport\n   * @param repoInfo The info for the websocket endpoint.\n   * @param applicationId The Firebase App ID for this project.\n   * @param appCheckToken The App Check Token for this client.\n   * @param authToken The Auth Token for this client.\n   * @param transportSessionId Optional transportSessionId if this is connecting\n   * to an existing transport session\n   * @param lastSessionId Optional lastSessionId if there was a previous\n   * connection\n   */\n  constructor(\n    public connId: string,\n    repoInfo: RepoInfo,\n    private applicationId?: string,\n    private appCheckToken?: string,\n    private authToken?: string,\n    transportSessionId?: string,\n    lastSessionId?: string\n  ) {\n    this.log_ = logWrapper(this.connId);\n    this.stats_ = statsManagerGetCollection(repoInfo);\n    this.connURL = WebSocketConnection.connectionURL_(\n      repoInfo,\n      transportSessionId,\n      lastSessionId,\n      appCheckToken\n    );\n    this.nodeAdmin = repoInfo.nodeAdmin;\n  }\n\n  /**\n   * @param repoInfo - The info for the websocket endpoint.\n   * @param transportSessionId - Optional transportSessionId if this is connecting to an existing transport\n   *                                         session\n   * @param lastSessionId - Optional lastSessionId if there was a previous connection\n   * @returns connection url\n   */\n  private static connectionURL_(\n    repoInfo: RepoInfo,\n    transportSessionId?: string,\n    lastSessionId?: string,\n    appCheckToken?: string\n  ): string {\n    const urlParams: { [k: string]: string } = {};\n    urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\n\n    if (\n      !isNodeSdk() &&\n      typeof location !== 'undefined' &&\n      location.hostname &&\n      FORGE_DOMAIN_RE.test(location.hostname)\n    ) {\n      urlParams[REFERER_PARAM] = FORGE_REF;\n    }\n    if (transportSessionId) {\n      urlParams[TRANSPORT_SESSION_PARAM] = transportSessionId;\n    }\n    if (lastSessionId) {\n      urlParams[LAST_SESSION_PARAM] = lastSessionId;\n    }\n    if (appCheckToken) {\n      urlParams[APP_CHECK_TOKEN_PARAM] = appCheckToken;\n    }\n\n    return repoInfoConnectionURL(repoInfo, WEBSOCKET, urlParams);\n  }\n\n  /**\n   * @param onMessage - Callback when messages arrive\n   * @param onDisconnect - Callback with connection lost.\n   */\n  open(onMessage: (msg: {}) => void, onDisconnect: (a?: boolean) => void) {\n    this.onDisconnect = onDisconnect;\n    this.onMessage = onMessage;\n\n    this.log_('Websocket connecting to ' + this.connURL);\n\n    this.everConnected_ = false;\n    // Assume failure until proven otherwise.\n    PersistentStorage.set('previous_websocket_failure', true);\n\n    try {\n      if (isNodeSdk()) {\n        const device = this.nodeAdmin ? 'AdminNode' : 'Node';\n        // UA Format: Firebase/<wire_protocol>/<sdk_version>/<platform>/<device>\n        const options: { [k: string]: object } = {\n          headers: {\n            'User-Agent': `Firebase/${PROTOCOL_VERSION}/${SDK_VERSION}/${process.platform}/${device}`,\n            'X-Firebase-GMPID': this.applicationId || ''\n          }\n        };\n\n        // If using Node with admin creds, AppCheck-related checks are unnecessary.\n        // Note that we send the credentials here even if they aren't admin credentials, which is\n        // not a problem.\n        // Note that this header is just used to bypass appcheck, and the token should still be sent\n        // through the websocket connection once it is established.\n        if (this.authToken) {\n          options.headers['Authorization'] = `Bearer ${this.authToken}`;\n        }\n        if (this.appCheckToken) {\n          options.headers['X-Firebase-AppCheck'] = this.appCheckToken;\n        }\n\n        // Plumb appropriate http_proxy environment variable into faye-websocket if it exists.\n        const env = process['env'];\n        const proxy =\n          this.connURL.indexOf('wss://') === 0\n            ? env['HTTPS_PROXY'] || env['https_proxy']\n            : env['HTTP_PROXY'] || env['http_proxy'];\n\n        if (proxy) {\n          options['proxy'] = { origin: proxy };\n        }\n\n        this.mySock = new WebSocketImpl(this.connURL, [], options);\n      } else {\n        const options: { [k: string]: object } = {\n          headers: {\n            'X-Firebase-GMPID': this.applicationId || '',\n            'X-Firebase-AppCheck': this.appCheckToken || ''\n          }\n        };\n        this.mySock = new WebSocketImpl(this.connURL, [], options);\n      }\n    } catch (e) {\n      this.log_('Error instantiating WebSocket.');\n      const error = e.message || e.data;\n      if (error) {\n        this.log_(error);\n      }\n      this.onClosed_();\n      return;\n    }\n\n    this.mySock.onopen = () => {\n      this.log_('Websocket connected.');\n      this.everConnected_ = true;\n    };\n\n    this.mySock.onclose = () => {\n      this.log_('Websocket connection was disconnected.');\n      this.mySock = null;\n      this.onClosed_();\n    };\n\n    this.mySock.onmessage = m => {\n      this.handleIncomingFrame(m as {});\n    };\n\n    this.mySock.onerror = e => {\n      this.log_('WebSocket error.  Closing connection.');\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const error = (e as any).message || (e as any).data;\n      if (error) {\n        this.log_(error);\n      }\n      this.onClosed_();\n    };\n  }\n\n  /**\n   * No-op for websockets, we don't need to do anything once the connection is confirmed as open\n   */\n  start() {}\n\n  static forceDisallow_: boolean;\n\n  static forceDisallow() {\n    WebSocketConnection.forceDisallow_ = true;\n  }\n\n  static isAvailable(): boolean {\n    let isOldAndroid = false;\n    if (typeof navigator !== 'undefined' && navigator.userAgent) {\n      const oldAndroidRegex = /Android ([0-9]{0,}\\.[0-9]{0,})/;\n      const oldAndroidMatch = navigator.userAgent.match(oldAndroidRegex);\n      if (oldAndroidMatch && oldAndroidMatch.length > 1) {\n        if (parseFloat(oldAndroidMatch[1]) < 4.4) {\n          isOldAndroid = true;\n        }\n      }\n    }\n\n    return (\n      !isOldAndroid &&\n      WebSocketImpl !== null &&\n      !WebSocketConnection.forceDisallow_\n    );\n  }\n\n  /**\n   * Number of response before we consider the connection \"healthy.\"\n   */\n  static responsesRequiredToBeHealthy = 2;\n\n  /**\n   * Time to wait for the connection te become healthy before giving up.\n   */\n  static healthyTimeout = 30000;\n\n  /**\n   * Returns true if we previously failed to connect with this transport.\n   */\n  static previouslyFailed(): boolean {\n    // If our persistent storage is actually only in-memory storage,\n    // we default to assuming that it previously failed to be safe.\n    return (\n      PersistentStorage.isInMemoryStorage ||\n      PersistentStorage.get('previous_websocket_failure') === true\n    );\n  }\n\n  markConnectionHealthy() {\n    PersistentStorage.remove('previous_websocket_failure');\n  }\n\n  private appendFrame_(data: string) {\n    this.frames.push(data);\n    if (this.frames.length === this.totalFrames) {\n      const fullMess = this.frames.join('');\n      this.frames = null;\n      const jsonMess = jsonEval(fullMess) as object;\n\n      //handle the message\n      this.onMessage(jsonMess);\n    }\n  }\n\n  /**\n   * @param frameCount - The number of frames we are expecting from the server\n   */\n  private handleNewFrameCount_(frameCount: number) {\n    this.totalFrames = frameCount;\n    this.frames = [];\n  }\n\n  /**\n   * Attempts to parse a frame count out of some text. If it can't, assumes a value of 1\n   * @returns Any remaining data to be process, or null if there is none\n   */\n  private extractFrameCount_(data: string): string | null {\n    assert(this.frames === null, 'We already have a frame buffer');\n    // TODO: The server is only supposed to send up to 9999 frames (i.e. length <= 4), but that isn't being enforced\n    // currently.  So allowing larger frame counts (length <= 6).  See https://app.asana.com/0/search/8688598998380/8237608042508\n    if (data.length <= 6) {\n      const frameCount = Number(data);\n      if (!isNaN(frameCount)) {\n        this.handleNewFrameCount_(frameCount);\n        return null;\n      }\n    }\n    this.handleNewFrameCount_(1);\n    return data;\n  }\n\n  /**\n   * Process a websocket frame that has arrived from the server.\n   * @param mess - The frame data\n   */\n  handleIncomingFrame(mess: { [k: string]: unknown }) {\n    if (this.mySock === null) {\n      return; // Chrome apparently delivers incoming packets even after we .close() the connection sometimes.\n    }\n    const data = mess['data'] as string;\n    this.bytesReceived += data.length;\n    this.stats_.incrementCounter('bytes_received', data.length);\n\n    this.resetKeepAlive();\n\n    if (this.frames !== null) {\n      // we're buffering\n      this.appendFrame_(data);\n    } else {\n      // try to parse out a frame count, otherwise, assume 1 and process it\n      const remainingData = this.extractFrameCount_(data);\n      if (remainingData !== null) {\n        this.appendFrame_(remainingData);\n      }\n    }\n  }\n\n  /**\n   * Send a message to the server\n   * @param data - The JSON object to transmit\n   */\n  send(data: {}) {\n    this.resetKeepAlive();\n\n    const dataStr = stringify(data);\n    this.bytesSent += dataStr.length;\n    this.stats_.incrementCounter('bytes_sent', dataStr.length);\n\n    //We can only fit a certain amount in each websocket frame, so we need to split this request\n    //up into multiple pieces if it doesn't fit in one request.\n\n    const dataSegs = splitStringBySize(dataStr, WEBSOCKET_MAX_FRAME_SIZE);\n\n    //Send the length header\n    if (dataSegs.length > 1) {\n      this.sendString_(String(dataSegs.length));\n    }\n\n    //Send the actual data in segments.\n    for (let i = 0; i < dataSegs.length; i++) {\n      this.sendString_(dataSegs[i]);\n    }\n  }\n\n  private shutdown_() {\n    this.isClosed_ = true;\n    if (this.keepaliveTimer) {\n      clearInterval(this.keepaliveTimer);\n      this.keepaliveTimer = null;\n    }\n\n    if (this.mySock) {\n      this.mySock.close();\n      this.mySock = null;\n    }\n  }\n\n  private onClosed_() {\n    if (!this.isClosed_) {\n      this.log_('WebSocket is closing itself');\n      this.shutdown_();\n\n      // since this is an internal close, trigger the close listener\n      if (this.onDisconnect) {\n        this.onDisconnect(this.everConnected_);\n        this.onDisconnect = null;\n      }\n    }\n  }\n\n  /**\n   * External-facing close handler.\n   * Close the websocket and kill the connection.\n   */\n  close() {\n    if (!this.isClosed_) {\n      this.log_('WebSocket is being closed');\n      this.shutdown_();\n    }\n  }\n\n  /**\n   * Kill the current keepalive timer and start a new one, to ensure that it always fires N seconds after\n   * the last activity.\n   */\n  resetKeepAlive() {\n    clearInterval(this.keepaliveTimer);\n    this.keepaliveTimer = setInterval(() => {\n      //If there has been no websocket activity for a while, send a no-op\n      if (this.mySock) {\n        this.sendString_('0');\n      }\n      this.resetKeepAlive();\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    }, Math.floor(WEBSOCKET_KEEPALIVE_INTERVAL)) as any;\n  }\n\n  /**\n   * Send a string over the websocket.\n   *\n   * @param str - String to send.\n   */\n  private sendString_(str: string) {\n    // Firefox seems to sometimes throw exceptions (NS_ERROR_UNEXPECTED) from websocket .send()\n    // calls for some unknown reason.  We treat these as an error and disconnect.\n    // See https://app.asana.com/0/58926111402292/68021340250410\n    try {\n      this.mySock.send(str);\n    } catch (e) {\n      this.log_(\n        'Exception thrown from WebSocket.send():',\n        e.message || e.data,\n        'Closing connection.'\n      );\n      setTimeout(this.onClosed_.bind(this), 0);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RepoInfo } from '../core/RepoInfo';\nimport { warn } from '../core/util/util';\n\nimport { BrowserPollConnection } from './BrowserPollConnection';\nimport { TransportConstructor } from './Transport';\nimport { WebSocketConnection } from './WebSocketConnection';\n\n/**\n * Currently simplistic, this class manages what transport a Connection should use at various stages of its\n * lifecycle.\n *\n * It starts with longpolling in a browser, and httppolling on node. It then upgrades to websockets if\n * they are available.\n */\nexport class TransportManager {\n  private transports_: TransportConstructor[];\n\n  static get ALL_TRANSPORTS() {\n    return [BrowserPollConnection, WebSocketConnection];\n  }\n\n  /**\n   * @param repoInfo - Metadata around the namespace we're connecting to\n   */\n  constructor(repoInfo: RepoInfo) {\n    this.initTransports_(repoInfo);\n  }\n\n  private initTransports_(repoInfo: RepoInfo) {\n    const isWebSocketsAvailable: boolean =\n      WebSocketConnection && WebSocketConnection['isAvailable']();\n    let isSkipPollConnection =\n      isWebSocketsAvailable && !WebSocketConnection.previouslyFailed();\n\n    if (repoInfo.webSocketOnly) {\n      if (!isWebSocketsAvailable) {\n        warn(\n          \"wss:// URL used, but browser isn't known to support websockets.  Trying anyway.\"\n        );\n      }\n\n      isSkipPollConnection = true;\n    }\n\n    if (isSkipPollConnection) {\n      this.transports_ = [WebSocketConnection];\n    } else {\n      const transports = (this.transports_ = [] as TransportConstructor[]);\n      for (const transport of TransportManager.ALL_TRANSPORTS) {\n        if (transport && transport['isAvailable']()) {\n          transports.push(transport);\n        }\n      }\n    }\n  }\n\n  /**\n   * @returns The constructor for the initial transport to use\n   */\n  initialTransport(): TransportConstructor {\n    if (this.transports_.length > 0) {\n      return this.transports_[0];\n    } else {\n      throw new Error('No transports available');\n    }\n  }\n\n  /**\n   * @returns The constructor for the next transport, or null\n   */\n  upgradeTransport(): TransportConstructor | null {\n    if (this.transports_.length > 1) {\n      return this.transports_[1];\n    } else {\n      return null;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RepoInfo } from '../core/RepoInfo';\nimport { PersistentStorage } from '../core/storage/storage';\nimport { Indexable } from '../core/util/misc';\nimport {\n  error,\n  logWrapper,\n  requireKey,\n  setTimeoutNonBlocking,\n  warn\n} from '../core/util/util';\n\nimport { PROTOCOL_VERSION } from './Constants';\nimport { Transport, TransportConstructor } from './Transport';\nimport { TransportManager } from './TransportManager';\n\n// Abort upgrade attempt if it takes longer than 60s.\nconst UPGRADE_TIMEOUT = 60000;\n\n// For some transports (WebSockets), we need to \"validate\" the transport by exchanging a few requests and responses.\n// If we haven't sent enough requests within 5s, we'll start sending noop ping requests.\nconst DELAY_BEFORE_SENDING_EXTRA_REQUESTS = 5000;\n\n// If the initial data sent triggers a lot of bandwidth (i.e. it's a large put or a listen for a large amount of data)\n// then we may not be able to exchange our ping/pong requests within the healthy timeout.  So if we reach the timeout\n// but we've sent/received enough bytes, we don't cancel the connection.\nconst BYTES_SENT_HEALTHY_OVERRIDE = 10 * 1024;\nconst BYTES_RECEIVED_HEALTHY_OVERRIDE = 100 * 1024;\n\nconst enum RealtimeState {\n  CONNECTING,\n  CONNECTED,\n  DISCONNECTED\n}\n\nconst MESSAGE_TYPE = 't';\nconst MESSAGE_DATA = 'd';\nconst CONTROL_SHUTDOWN = 's';\nconst CONTROL_RESET = 'r';\nconst CONTROL_ERROR = 'e';\nconst CONTROL_PONG = 'o';\nconst SWITCH_ACK = 'a';\nconst END_TRANSMISSION = 'n';\nconst PING = 'p';\n\nconst SERVER_HELLO = 'h';\n\n/**\n * Creates a new real-time connection to the server using whichever method works\n * best in the current browser.\n */\nexport class Connection {\n  connectionCount = 0;\n  pendingDataMessages: unknown[] = [];\n  sessionId: string;\n\n  private conn_: Transport;\n  private healthyTimeout_: number;\n  private isHealthy_: boolean;\n  private log_: (...args: unknown[]) => void;\n  private primaryResponsesRequired_: number;\n  private rx_: Transport;\n  private secondaryConn_: Transport;\n  private secondaryResponsesRequired_: number;\n  private state_ = RealtimeState.CONNECTING;\n  private transportManager_: TransportManager;\n  private tx_: Transport;\n\n  /**\n   * @param id - an id for this connection\n   * @param repoInfo_ - the info for the endpoint to connect to\n   * @param applicationId_ - the Firebase App ID for this project\n   * @param appCheckToken_ - The App Check Token for this device.\n   * @param authToken_ - The auth token for this session.\n   * @param onMessage_ - the callback to be triggered when a server-push message arrives\n   * @param onReady_ - the callback to be triggered when this connection is ready to send messages.\n   * @param onDisconnect_ - the callback to be triggered when a connection was lost\n   * @param onKill_ - the callback to be triggered when this connection has permanently shut down.\n   * @param lastSessionId - last session id in persistent connection. is used to clean up old session in real-time server\n   */\n  constructor(\n    public id: string,\n    private repoInfo_: RepoInfo,\n    private applicationId_: string | undefined,\n    private appCheckToken_: string | undefined,\n    private authToken_: string | undefined,\n    private onMessage_: (a: {}) => void,\n    private onReady_: (a: number, b: string) => void,\n    private onDisconnect_: () => void,\n    private onKill_: (a: string) => void,\n    public lastSessionId?: string\n  ) {\n    this.log_ = logWrapper('c:' + this.id + ':');\n    this.transportManager_ = new TransportManager(repoInfo_);\n    this.log_('Connection created');\n    this.start_();\n  }\n\n  /**\n   * Starts a connection attempt\n   */\n  private start_(): void {\n    const conn = this.transportManager_.initialTransport();\n    this.conn_ = new conn(\n      this.nextTransportId_(),\n      this.repoInfo_,\n      this.applicationId_,\n      this.appCheckToken_,\n      this.authToken_,\n      null,\n      this.lastSessionId\n    );\n\n    // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\n    // can consider the transport healthy.\n    this.primaryResponsesRequired_ = conn['responsesRequiredToBeHealthy'] || 0;\n\n    const onMessageReceived = this.connReceiver_(this.conn_);\n    const onConnectionLost = this.disconnReceiver_(this.conn_);\n    this.tx_ = this.conn_;\n    this.rx_ = this.conn_;\n    this.secondaryConn_ = null;\n    this.isHealthy_ = false;\n\n    /*\n     * Firefox doesn't like when code from one iframe tries to create another iframe by way of the parent frame.\n     * This can occur in the case of a redirect, i.e. we guessed wrong on what server to connect to and received a reset.\n     * Somehow, setTimeout seems to make this ok. That doesn't make sense from a security perspective, since you should\n     * still have the context of your originating frame.\n     */\n    setTimeout(() => {\n      // this.conn_ gets set to null in some of the tests. Check to make sure it still exists before using it\n      this.conn_ && this.conn_.open(onMessageReceived, onConnectionLost);\n    }, Math.floor(0));\n\n    const healthyTimeoutMS = conn['healthyTimeout'] || 0;\n    if (healthyTimeoutMS > 0) {\n      this.healthyTimeout_ = setTimeoutNonBlocking(() => {\n        this.healthyTimeout_ = null;\n        if (!this.isHealthy_) {\n          if (\n            this.conn_ &&\n            this.conn_.bytesReceived > BYTES_RECEIVED_HEALTHY_OVERRIDE\n          ) {\n            this.log_(\n              'Connection exceeded healthy timeout but has received ' +\n                this.conn_.bytesReceived +\n                ' bytes.  Marking connection healthy.'\n            );\n            this.isHealthy_ = true;\n            this.conn_.markConnectionHealthy();\n          } else if (\n            this.conn_ &&\n            this.conn_.bytesSent > BYTES_SENT_HEALTHY_OVERRIDE\n          ) {\n            this.log_(\n              'Connection exceeded healthy timeout but has sent ' +\n                this.conn_.bytesSent +\n                ' bytes.  Leaving connection alive.'\n            );\n            // NOTE: We don't want to mark it healthy, since we have no guarantee that the bytes have made it to\n            // the server.\n          } else {\n            this.log_('Closing unhealthy connection after timeout.');\n            this.close();\n          }\n        }\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      }, Math.floor(healthyTimeoutMS)) as any;\n    }\n  }\n\n  private nextTransportId_(): string {\n    return 'c:' + this.id + ':' + this.connectionCount++;\n  }\n\n  private disconnReceiver_(conn) {\n    return everConnected => {\n      if (conn === this.conn_) {\n        this.onConnectionLost_(everConnected);\n      } else if (conn === this.secondaryConn_) {\n        this.log_('Secondary connection lost.');\n        this.onSecondaryConnectionLost_();\n      } else {\n        this.log_('closing an old connection');\n      }\n    };\n  }\n\n  private connReceiver_(conn: Transport) {\n    return (message: Indexable) => {\n      if (this.state_ !== RealtimeState.DISCONNECTED) {\n        if (conn === this.rx_) {\n          this.onPrimaryMessageReceived_(message);\n        } else if (conn === this.secondaryConn_) {\n          this.onSecondaryMessageReceived_(message);\n        } else {\n          this.log_('message on old connection');\n        }\n      }\n    };\n  }\n\n  /**\n   * @param dataMsg - An arbitrary data message to be sent to the server\n   */\n  sendRequest(dataMsg: object) {\n    // wrap in a data message envelope and send it on\n    const msg = { t: 'd', d: dataMsg };\n    this.sendData_(msg);\n  }\n\n  tryCleanupConnection() {\n    if (this.tx_ === this.secondaryConn_ && this.rx_ === this.secondaryConn_) {\n      this.log_(\n        'cleaning up and promoting a connection: ' + this.secondaryConn_.connId\n      );\n      this.conn_ = this.secondaryConn_;\n      this.secondaryConn_ = null;\n      // the server will shutdown the old connection\n    }\n  }\n\n  private onSecondaryControl_(controlData: { [k: string]: unknown }) {\n    if (MESSAGE_TYPE in controlData) {\n      const cmd = controlData[MESSAGE_TYPE] as string;\n      if (cmd === SWITCH_ACK) {\n        this.upgradeIfSecondaryHealthy_();\n      } else if (cmd === CONTROL_RESET) {\n        // Most likely the session wasn't valid. Abandon the switch attempt\n        this.log_('Got a reset on secondary, closing it');\n        this.secondaryConn_.close();\n        // If we were already using this connection for something, than we need to fully close\n        if (\n          this.tx_ === this.secondaryConn_ ||\n          this.rx_ === this.secondaryConn_\n        ) {\n          this.close();\n        }\n      } else if (cmd === CONTROL_PONG) {\n        this.log_('got pong on secondary.');\n        this.secondaryResponsesRequired_--;\n        this.upgradeIfSecondaryHealthy_();\n      }\n    }\n  }\n\n  private onSecondaryMessageReceived_(parsedData: Indexable) {\n    const layer: string = requireKey('t', parsedData) as string;\n    const data: unknown = requireKey('d', parsedData);\n    if (layer === 'c') {\n      this.onSecondaryControl_(data as Indexable);\n    } else if (layer === 'd') {\n      // got a data message, but we're still second connection. Need to buffer it up\n      this.pendingDataMessages.push(data);\n    } else {\n      throw new Error('Unknown protocol layer: ' + layer);\n    }\n  }\n\n  private upgradeIfSecondaryHealthy_() {\n    if (this.secondaryResponsesRequired_ <= 0) {\n      this.log_('Secondary connection is healthy.');\n      this.isHealthy_ = true;\n      this.secondaryConn_.markConnectionHealthy();\n      this.proceedWithUpgrade_();\n    } else {\n      // Send a ping to make sure the connection is healthy.\n      this.log_('sending ping on secondary.');\n      this.secondaryConn_.send({ t: 'c', d: { t: PING, d: {} } });\n    }\n  }\n\n  private proceedWithUpgrade_() {\n    // tell this connection to consider itself open\n    this.secondaryConn_.start();\n    // send ack\n    this.log_('sending client ack on secondary');\n    this.secondaryConn_.send({ t: 'c', d: { t: SWITCH_ACK, d: {} } });\n\n    // send end packet on primary transport, switch to sending on this one\n    // can receive on this one, buffer responses until end received on primary transport\n    this.log_('Ending transmission on primary');\n    this.conn_.send({ t: 'c', d: { t: END_TRANSMISSION, d: {} } });\n    this.tx_ = this.secondaryConn_;\n\n    this.tryCleanupConnection();\n  }\n\n  private onPrimaryMessageReceived_(parsedData: { [k: string]: unknown }) {\n    // Must refer to parsedData properties in quotes, so closure doesn't touch them.\n    const layer: string = requireKey('t', parsedData) as string;\n    const data: unknown = requireKey('d', parsedData);\n    if (layer === 'c') {\n      this.onControl_(data as { [k: string]: unknown });\n    } else if (layer === 'd') {\n      this.onDataMessage_(data);\n    }\n  }\n\n  private onDataMessage_(message: unknown) {\n    this.onPrimaryResponse_();\n\n    // We don't do anything with data messages, just kick them up a level\n    this.onMessage_(message);\n  }\n\n  private onPrimaryResponse_() {\n    if (!this.isHealthy_) {\n      this.primaryResponsesRequired_--;\n      if (this.primaryResponsesRequired_ <= 0) {\n        this.log_('Primary connection is healthy.');\n        this.isHealthy_ = true;\n        this.conn_.markConnectionHealthy();\n      }\n    }\n  }\n\n  private onControl_(controlData: { [k: string]: unknown }) {\n    const cmd: string = requireKey(MESSAGE_TYPE, controlData) as string;\n    if (MESSAGE_DATA in controlData) {\n      const payload = controlData[MESSAGE_DATA];\n      if (cmd === SERVER_HELLO) {\n        this.onHandshake_(\n          payload as {\n            ts: number;\n            v: string;\n            h: string;\n            s: string;\n          }\n        );\n      } else if (cmd === END_TRANSMISSION) {\n        this.log_('recvd end transmission on primary');\n        this.rx_ = this.secondaryConn_;\n        for (let i = 0; i < this.pendingDataMessages.length; ++i) {\n          this.onDataMessage_(this.pendingDataMessages[i]);\n        }\n        this.pendingDataMessages = [];\n        this.tryCleanupConnection();\n      } else if (cmd === CONTROL_SHUTDOWN) {\n        // This was previously the 'onKill' callback passed to the lower-level connection\n        // payload in this case is the reason for the shutdown. Generally a human-readable error\n        this.onConnectionShutdown_(payload as string);\n      } else if (cmd === CONTROL_RESET) {\n        // payload in this case is the host we should contact\n        this.onReset_(payload as string);\n      } else if (cmd === CONTROL_ERROR) {\n        error('Server Error: ' + payload);\n      } else if (cmd === CONTROL_PONG) {\n        this.log_('got pong on primary.');\n        this.onPrimaryResponse_();\n        this.sendPingOnPrimaryIfNecessary_();\n      } else {\n        error('Unknown control packet command: ' + cmd);\n      }\n    }\n  }\n\n  /**\n   * @param handshake - The handshake data returned from the server\n   */\n  private onHandshake_(handshake: {\n    ts: number;\n    v: string;\n    h: string;\n    s: string;\n  }): void {\n    const timestamp = handshake.ts;\n    const version = handshake.v;\n    const host = handshake.h;\n    this.sessionId = handshake.s;\n    this.repoInfo_.host = host;\n    // if we've already closed the connection, then don't bother trying to progress further\n    if (this.state_ === RealtimeState.CONNECTING) {\n      this.conn_.start();\n      this.onConnectionEstablished_(this.conn_, timestamp);\n      if (PROTOCOL_VERSION !== version) {\n        warn('Protocol version mismatch detected');\n      }\n      // TODO: do we want to upgrade? when? maybe a delay?\n      this.tryStartUpgrade_();\n    }\n  }\n\n  private tryStartUpgrade_() {\n    const conn = this.transportManager_.upgradeTransport();\n    if (conn) {\n      this.startUpgrade_(conn);\n    }\n  }\n\n  private startUpgrade_(conn: TransportConstructor) {\n    this.secondaryConn_ = new conn(\n      this.nextTransportId_(),\n      this.repoInfo_,\n      this.applicationId_,\n      this.appCheckToken_,\n      this.authToken_,\n      this.sessionId\n    );\n    // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\n    // can consider the transport healthy.\n    this.secondaryResponsesRequired_ =\n      conn['responsesRequiredToBeHealthy'] || 0;\n\n    const onMessage = this.connReceiver_(this.secondaryConn_);\n    const onDisconnect = this.disconnReceiver_(this.secondaryConn_);\n    this.secondaryConn_.open(onMessage, onDisconnect);\n\n    // If we haven't successfully upgraded after UPGRADE_TIMEOUT, give up and kill the secondary.\n    setTimeoutNonBlocking(() => {\n      if (this.secondaryConn_) {\n        this.log_('Timed out trying to upgrade.');\n        this.secondaryConn_.close();\n      }\n    }, Math.floor(UPGRADE_TIMEOUT));\n  }\n\n  private onReset_(host: string) {\n    this.log_('Reset packet received.  New host: ' + host);\n    this.repoInfo_.host = host;\n    // TODO: if we're already \"connected\", we need to trigger a disconnect at the next layer up.\n    // We don't currently support resets after the connection has already been established\n    if (this.state_ === RealtimeState.CONNECTED) {\n      this.close();\n    } else {\n      // Close whatever connections we have open and start again.\n      this.closeConnections_();\n      this.start_();\n    }\n  }\n\n  private onConnectionEstablished_(conn: Transport, timestamp: number) {\n    this.log_('Realtime connection established.');\n    this.conn_ = conn;\n    this.state_ = RealtimeState.CONNECTED;\n\n    if (this.onReady_) {\n      this.onReady_(timestamp, this.sessionId);\n      this.onReady_ = null;\n    }\n\n    // If after 5 seconds we haven't sent enough requests to the server to get the connection healthy,\n    // send some pings.\n    if (this.primaryResponsesRequired_ === 0) {\n      this.log_('Primary connection is healthy.');\n      this.isHealthy_ = true;\n    } else {\n      setTimeoutNonBlocking(() => {\n        this.sendPingOnPrimaryIfNecessary_();\n      }, Math.floor(DELAY_BEFORE_SENDING_EXTRA_REQUESTS));\n    }\n  }\n\n  private sendPingOnPrimaryIfNecessary_() {\n    // If the connection isn't considered healthy yet, we'll send a noop ping packet request.\n    if (!this.isHealthy_ && this.state_ === RealtimeState.CONNECTED) {\n      this.log_('sending ping on primary.');\n      this.sendData_({ t: 'c', d: { t: PING, d: {} } });\n    }\n  }\n\n  private onSecondaryConnectionLost_() {\n    const conn = this.secondaryConn_;\n    this.secondaryConn_ = null;\n    if (this.tx_ === conn || this.rx_ === conn) {\n      // we are relying on this connection already in some capacity. Therefore, a failure is real\n      this.close();\n    }\n  }\n\n  /**\n   * @param everConnected - Whether or not the connection ever reached a server. Used to determine if\n   * we should flush the host cache\n   */\n  private onConnectionLost_(everConnected: boolean) {\n    this.conn_ = null;\n\n    // NOTE: IF you're seeing a Firefox error for this line, I think it might be because it's getting\n    // called on window close and RealtimeState.CONNECTING is no longer defined.  Just a guess.\n    if (!everConnected && this.state_ === RealtimeState.CONNECTING) {\n      this.log_('Realtime connection failed.');\n      // Since we failed to connect at all, clear any cached entry for this namespace in case the machine went away\n      if (this.repoInfo_.isCacheableHost()) {\n        PersistentStorage.remove('host:' + this.repoInfo_.host);\n        // reset the internal host to what we would show the user, i.e. <ns>.firebaseio.com\n        this.repoInfo_.internalHost = this.repoInfo_.host;\n      }\n    } else if (this.state_ === RealtimeState.CONNECTED) {\n      this.log_('Realtime connection lost.');\n    }\n\n    this.close();\n  }\n\n  private onConnectionShutdown_(reason: string) {\n    this.log_('Connection shutdown command received. Shutting down...');\n\n    if (this.onKill_) {\n      this.onKill_(reason);\n      this.onKill_ = null;\n    }\n\n    // We intentionally don't want to fire onDisconnect (kill is a different case),\n    // so clear the callback.\n    this.onDisconnect_ = null;\n\n    this.close();\n  }\n\n  private sendData_(data: object) {\n    if (this.state_ !== RealtimeState.CONNECTED) {\n      throw 'Connection is not connected';\n    } else {\n      this.tx_.send(data);\n    }\n  }\n\n  /**\n   * Cleans up this connection, calling the appropriate callbacks\n   */\n  close() {\n    if (this.state_ !== RealtimeState.DISCONNECTED) {\n      this.log_('Closing realtime connection.');\n      this.state_ = RealtimeState.DISCONNECTED;\n\n      this.closeConnections_();\n\n      if (this.onDisconnect_) {\n        this.onDisconnect_();\n        this.onDisconnect_ = null;\n      }\n    }\n  }\n\n  private closeConnections_() {\n    this.log_('Shutting down all connections');\n    if (this.conn_) {\n      this.conn_.close();\n      this.conn_ = null;\n    }\n\n    if (this.secondaryConn_) {\n      this.secondaryConn_.close();\n      this.secondaryConn_ = null;\n    }\n\n    if (this.healthyTimeout_) {\n      clearTimeout(this.healthyTimeout_);\n      this.healthyTimeout_ = null;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { QueryContext } from './view/EventRegistration';\n\n/**\n * Interface defining the set of actions that can be performed against the Firebase server\n * (basically corresponds to our wire protocol).\n *\n * @interface\n */\nexport abstract class ServerActions {\n  abstract listen(\n    query: QueryContext,\n    currentHashFn: () => string,\n    tag: number | null,\n    onComplete: (a: string, b: unknown) => void\n  ): void;\n\n  /**\n   * Remove a listen.\n   */\n  abstract unlisten(query: QueryContext, tag: number | null): void;\n\n  /**\n   * Get the server value satisfying this query.\n   */\n  abstract get(query: QueryContext): Promise<string>;\n\n  put(\n    pathString: string,\n    data: unknown,\n    onComplete?: (a: string, b: string) => void,\n    hash?: string\n  ) {}\n\n  merge(\n    pathString: string,\n    data: unknown,\n    onComplete: (a: string, b: string | null) => void,\n    hash?: string\n  ) {}\n\n  /**\n   * Refreshes the auth token for the current connection.\n   * @param token - The authentication token\n   */\n  refreshAuthToken(token: string) {}\n\n  /**\n   * Refreshes the app check token for the current connection.\n   * @param token The app check token\n   */\n  refreshAppCheckToken(token: string) {}\n\n  onDisconnectPut(\n    pathString: string,\n    data: unknown,\n    onComplete?: (a: string, b: string) => void\n  ) {}\n\n  onDisconnectMerge(\n    pathString: string,\n    data: unknown,\n    onComplete?: (a: string, b: string) => void\n  ) {}\n\n  onDisconnectCancel(\n    pathString: string,\n    onComplete?: (a: string, b: string) => void\n  ) {}\n\n  reportStats(stats: { [k: string]: unknown }) {}\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\n/**\n * Base class to be used if you want to emit events. Call the constructor with\n * the set of allowed event names.\n */\nexport abstract class EventEmitter {\n  private listeners_: {\n    [eventType: string]: Array<{\n      callback(...args: unknown[]): void;\n      context: unknown;\n    }>;\n  } = {};\n\n  constructor(private allowedEvents_: string[]) {\n    assert(\n      Array.isArray(allowedEvents_) && allowedEvents_.length > 0,\n      'Requires a non-empty array'\n    );\n  }\n\n  /**\n   * To be overridden by derived classes in order to fire an initial event when\n   * somebody subscribes for data.\n   *\n   * @returns {Array.<*>} Array of parameters to trigger initial event with.\n   */\n  abstract getInitialEvent(eventType: string): unknown[];\n\n  /**\n   * To be called by derived classes to trigger events.\n   */\n  protected trigger(eventType: string, ...varArgs: unknown[]) {\n    if (Array.isArray(this.listeners_[eventType])) {\n      // Clone the list, since callbacks could add/remove listeners.\n      const listeners = [...this.listeners_[eventType]];\n\n      for (let i = 0; i < listeners.length; i++) {\n        listeners[i].callback.apply(listeners[i].context, varArgs);\n      }\n    }\n  }\n\n  on(eventType: string, callback: (a: unknown) => void, context: unknown) {\n    this.validateEventType_(eventType);\n    this.listeners_[eventType] = this.listeners_[eventType] || [];\n    this.listeners_[eventType].push({ callback, context });\n\n    const eventData = this.getInitialEvent(eventType);\n    if (eventData) {\n      callback.apply(context, eventData);\n    }\n  }\n\n  off(eventType: string, callback: (a: unknown) => void, context: unknown) {\n    this.validateEventType_(eventType);\n    const listeners = this.listeners_[eventType] || [];\n    for (let i = 0; i < listeners.length; i++) {\n      if (\n        listeners[i].callback === callback &&\n        (!context || context === listeners[i].context)\n      ) {\n        listeners.splice(i, 1);\n        return;\n      }\n    }\n  }\n\n  private validateEventType_(eventType: string) {\n    assert(\n      this.allowedEvents_.find(et => {\n        return et === eventType;\n      }),\n      'Unknown event: ' + eventType\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, isMobileCordova } from '@firebase/util';\n\nimport { EventEmitter } from './EventEmitter';\n\n/**\n * Monitors online state (as reported by window.online/offline events).\n *\n * The expectation is that this could have many false positives (thinks we are online\n * when we're not), but no false negatives.  So we can safely use it to determine when\n * we definitely cannot reach the internet.\n */\nexport class OnlineMonitor extends EventEmitter {\n  private online_ = true;\n\n  static getInstance() {\n    return new OnlineMonitor();\n  }\n\n  constructor() {\n    super(['online']);\n\n    // We've had repeated complaints that Cordova apps can get stuck \"offline\", e.g.\n    // https://forum.ionicframework.com/t/firebase-connection-is-lost-and-never-come-back/43810\n    // It would seem that the 'online' event does not always fire consistently. So we disable it\n    // for Cordova.\n    if (\n      typeof window !== 'undefined' &&\n      typeof window.addEventListener !== 'undefined' &&\n      !isMobileCordova()\n    ) {\n      window.addEventListener(\n        'online',\n        () => {\n          if (!this.online_) {\n            this.online_ = true;\n            this.trigger('online', true);\n          }\n        },\n        false\n      );\n\n      window.addEventListener(\n        'offline',\n        () => {\n          if (this.online_) {\n            this.online_ = false;\n            this.trigger('online', false);\n          }\n        },\n        false\n      );\n    }\n  }\n\n  getInitialEvent(eventType: string): boolean[] {\n    assert(eventType === 'online', 'Unknown event type: ' + eventType);\n    return [this.online_];\n  }\n\n  currentlyOnline(): boolean {\n    return this.online_;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { stringLength } from '@firebase/util';\n\nimport { nameCompare } from './util';\n\n/** Maximum key depth. */\nconst MAX_PATH_DEPTH = 32;\n\n/** Maximum number of (UTF8) bytes in a Firebase path. */\nconst MAX_PATH_LENGTH_BYTES = 768;\n\n/**\n * An immutable object representing a parsed path.  It's immutable so that you\n * can pass them around to other functions without worrying about them changing\n * it.\n */\n\nexport class Path {\n  pieces_: string[];\n  pieceNum_: number;\n\n  /**\n   * @param pathOrString - Path string to parse, or another path, or the raw\n   * tokens array\n   */\n  constructor(pathOrString: string | string[], pieceNum?: number) {\n    if (pieceNum === void 0) {\n      this.pieces_ = (pathOrString as string).split('/');\n\n      // Remove empty pieces.\n      let copyTo = 0;\n      for (let i = 0; i < this.pieces_.length; i++) {\n        if (this.pieces_[i].length > 0) {\n          this.pieces_[copyTo] = this.pieces_[i];\n          copyTo++;\n        }\n      }\n      this.pieces_.length = copyTo;\n\n      this.pieceNum_ = 0;\n    } else {\n      this.pieces_ = pathOrString as string[];\n      this.pieceNum_ = pieceNum;\n    }\n  }\n\n  toString(): string {\n    let pathString = '';\n    for (let i = this.pieceNum_; i < this.pieces_.length; i++) {\n      if (this.pieces_[i] !== '') {\n        pathString += '/' + this.pieces_[i];\n      }\n    }\n\n    return pathString || '/';\n  }\n}\n\nexport function newEmptyPath(): Path {\n  return new Path('');\n}\n\nexport function pathGetFront(path: Path): string | null {\n  if (path.pieceNum_ >= path.pieces_.length) {\n    return null;\n  }\n\n  return path.pieces_[path.pieceNum_];\n}\n\n/**\n * @returns The number of segments in this path\n */\nexport function pathGetLength(path: Path): number {\n  return path.pieces_.length - path.pieceNum_;\n}\n\nexport function pathPopFront(path: Path): Path {\n  let pieceNum = path.pieceNum_;\n  if (pieceNum < path.pieces_.length) {\n    pieceNum++;\n  }\n  return new Path(path.pieces_, pieceNum);\n}\n\nexport function pathGetBack(path: Path): string | null {\n  if (path.pieceNum_ < path.pieces_.length) {\n    return path.pieces_[path.pieces_.length - 1];\n  }\n\n  return null;\n}\n\nexport function pathToUrlEncodedString(path: Path): string {\n  let pathString = '';\n  for (let i = path.pieceNum_; i < path.pieces_.length; i++) {\n    if (path.pieces_[i] !== '') {\n      pathString += '/' + encodeURIComponent(String(path.pieces_[i]));\n    }\n  }\n\n  return pathString || '/';\n}\n\n/**\n * Shallow copy of the parts of the path.\n *\n */\nexport function pathSlice(path: Path, begin: number = 0): string[] {\n  return path.pieces_.slice(path.pieceNum_ + begin);\n}\n\nexport function pathParent(path: Path): Path | null {\n  if (path.pieceNum_ >= path.pieces_.length) {\n    return null;\n  }\n\n  const pieces = [];\n  for (let i = path.pieceNum_; i < path.pieces_.length - 1; i++) {\n    pieces.push(path.pieces_[i]);\n  }\n\n  return new Path(pieces, 0);\n}\n\nexport function pathChild(path: Path, childPathObj: string | Path): Path {\n  const pieces = [];\n  for (let i = path.pieceNum_; i < path.pieces_.length; i++) {\n    pieces.push(path.pieces_[i]);\n  }\n\n  if (childPathObj instanceof Path) {\n    for (let i = childPathObj.pieceNum_; i < childPathObj.pieces_.length; i++) {\n      pieces.push(childPathObj.pieces_[i]);\n    }\n  } else {\n    const childPieces = childPathObj.split('/');\n    for (let i = 0; i < childPieces.length; i++) {\n      if (childPieces[i].length > 0) {\n        pieces.push(childPieces[i]);\n      }\n    }\n  }\n\n  return new Path(pieces, 0);\n}\n\n/**\n * @returns True if there are no segments in this path\n */\nexport function pathIsEmpty(path: Path): boolean {\n  return path.pieceNum_ >= path.pieces_.length;\n}\n\n/**\n * @returns The path from outerPath to innerPath\n */\nexport function newRelativePath(outerPath: Path, innerPath: Path): Path {\n  const outer = pathGetFront(outerPath),\n    inner = pathGetFront(innerPath);\n  if (outer === null) {\n    return innerPath;\n  } else if (outer === inner) {\n    return newRelativePath(pathPopFront(outerPath), pathPopFront(innerPath));\n  } else {\n    throw new Error(\n      'INTERNAL ERROR: innerPath (' +\n        innerPath +\n        ') is not within ' +\n        'outerPath (' +\n        outerPath +\n        ')'\n    );\n  }\n}\n\n/**\n * @returns -1, 0, 1 if left is less, equal, or greater than the right.\n */\nexport function pathCompare(left: Path, right: Path): number {\n  const leftKeys = pathSlice(left, 0);\n  const rightKeys = pathSlice(right, 0);\n  for (let i = 0; i < leftKeys.length && i < rightKeys.length; i++) {\n    const cmp = nameCompare(leftKeys[i], rightKeys[i]);\n    if (cmp !== 0) {\n      return cmp;\n    }\n  }\n  if (leftKeys.length === rightKeys.length) {\n    return 0;\n  }\n  return leftKeys.length < rightKeys.length ? -1 : 1;\n}\n\n/**\n * @returns true if paths are the same.\n */\nexport function pathEquals(path: Path, other: Path): boolean {\n  if (pathGetLength(path) !== pathGetLength(other)) {\n    return false;\n  }\n\n  for (\n    let i = path.pieceNum_, j = other.pieceNum_;\n    i <= path.pieces_.length;\n    i++, j++\n  ) {\n    if (path.pieces_[i] !== other.pieces_[j]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * @returns True if this path is a parent (or the same as) other\n */\nexport function pathContains(path: Path, other: Path): boolean {\n  let i = path.pieceNum_;\n  let j = other.pieceNum_;\n  if (pathGetLength(path) > pathGetLength(other)) {\n    return false;\n  }\n  while (i < path.pieces_.length) {\n    if (path.pieces_[i] !== other.pieces_[j]) {\n      return false;\n    }\n    ++i;\n    ++j;\n  }\n  return true;\n}\n\n/**\n * Dynamic (mutable) path used to count path lengths.\n *\n * This class is used to efficiently check paths for valid\n * length (in UTF8 bytes) and depth (used in path validation).\n *\n * Throws Error exception if path is ever invalid.\n *\n * The definition of a path always begins with '/'.\n */\nexport class ValidationPath {\n  parts_: string[];\n  /** Initialize to number of '/' chars needed in path. */\n  byteLength_: number;\n\n  /**\n   * @param path - Initial Path.\n   * @param errorPrefix_ - Prefix for any error messages.\n   */\n  constructor(path: Path, public errorPrefix_: string) {\n    this.parts_ = pathSlice(path, 0);\n    /** Initialize to number of '/' chars needed in path. */\n    this.byteLength_ = Math.max(1, this.parts_.length);\n\n    for (let i = 0; i < this.parts_.length; i++) {\n      this.byteLength_ += stringLength(this.parts_[i]);\n    }\n    validationPathCheckValid(this);\n  }\n}\n\nexport function validationPathPush(\n  validationPath: ValidationPath,\n  child: string\n): void {\n  // Count the needed '/'\n  if (validationPath.parts_.length > 0) {\n    validationPath.byteLength_ += 1;\n  }\n  validationPath.parts_.push(child);\n  validationPath.byteLength_ += stringLength(child);\n  validationPathCheckValid(validationPath);\n}\n\nexport function validationPathPop(validationPath: ValidationPath): void {\n  const last = validationPath.parts_.pop();\n  validationPath.byteLength_ -= stringLength(last);\n  // Un-count the previous '/'\n  if (validationPath.parts_.length > 0) {\n    validationPath.byteLength_ -= 1;\n  }\n}\n\nfunction validationPathCheckValid(validationPath: ValidationPath): void {\n  if (validationPath.byteLength_ > MAX_PATH_LENGTH_BYTES) {\n    throw new Error(\n      validationPath.errorPrefix_ +\n        'has a key path longer than ' +\n        MAX_PATH_LENGTH_BYTES +\n        ' bytes (' +\n        validationPath.byteLength_ +\n        ').'\n    );\n  }\n  if (validationPath.parts_.length > MAX_PATH_DEPTH) {\n    throw new Error(\n      validationPath.errorPrefix_ +\n        'path specified exceeds the maximum depth that can be written (' +\n        MAX_PATH_DEPTH +\n        ') or object contains a cycle ' +\n        validationPathToErrorString(validationPath)\n    );\n  }\n}\n\n/**\n * String for use in error messages - uses '.' notation for path.\n */\nexport function validationPathToErrorString(\n  validationPath: ValidationPath\n): string {\n  if (validationPath.parts_.length === 0) {\n    return '';\n  }\n  return \"in property '\" + validationPath.parts_.join('.') + \"'\";\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { EventEmitter } from './EventEmitter';\n\ndeclare const document: Document;\n\nexport class VisibilityMonitor extends EventEmitter {\n  private visible_: boolean;\n\n  static getInstance() {\n    return new VisibilityMonitor();\n  }\n\n  constructor() {\n    super(['visible']);\n    let hidden: string;\n    let visibilityChange: string;\n    if (\n      typeof document !== 'undefined' &&\n      typeof document.addEventListener !== 'undefined'\n    ) {\n      if (typeof document['hidden'] !== 'undefined') {\n        // Opera 12.10 and Firefox 18 and later support\n        visibilityChange = 'visibilitychange';\n        hidden = 'hidden';\n      } else if (typeof document['mozHidden'] !== 'undefined') {\n        visibilityChange = 'mozvisibilitychange';\n        hidden = 'mozHidden';\n      } else if (typeof document['msHidden'] !== 'undefined') {\n        visibilityChange = 'msvisibilitychange';\n        hidden = 'msHidden';\n      } else if (typeof document['webkitHidden'] !== 'undefined') {\n        visibilityChange = 'webkitvisibilitychange';\n        hidden = 'webkitHidden';\n      }\n    }\n\n    // Initially, we always assume we are visible. This ensures that in browsers\n    // without page visibility support or in cases where we are never visible\n    // (e.g. chrome extension), we act as if we are visible, i.e. don't delay\n    // reconnects\n    this.visible_ = true;\n\n    if (visibilityChange) {\n      document.addEventListener(\n        visibilityChange,\n        () => {\n          const visible = !document[hidden];\n          if (visible !== this.visible_) {\n            this.visible_ = visible;\n            this.trigger('visible', visible);\n          }\n        },\n        false\n      );\n    }\n  }\n\n  getInitialEvent(eventType: string): boolean[] {\n    assert(eventType === 'visible', 'Unknown event type: ' + eventType);\n    return [this.visible_];\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  contains,\n  Deferred,\n  isEmpty,\n  isMobileCordova,\n  isNodeSdk,\n  isReactNative,\n  isValidFormat,\n  safeGet,\n  stringify,\n  isAdmin\n} from '@firebase/util';\n\nimport { Connection } from '../realtime/Connection';\n\nimport { AppCheckTokenProvider } from './AppCheckTokenProvider';\nimport { AuthTokenProvider } from './AuthTokenProvider';\nimport { RepoInfo } from './RepoInfo';\nimport { ServerActions } from './ServerActions';\nimport { OnlineMonitor } from './util/OnlineMonitor';\nimport { Path } from './util/Path';\nimport { error, log, logWrapper, warn, ObjectToUniqueKey } from './util/util';\nimport { VisibilityMonitor } from './util/VisibilityMonitor';\nimport { SDK_VERSION } from './version';\nimport { QueryContext } from './view/EventRegistration';\n\nconst RECONNECT_MIN_DELAY = 1000;\nconst RECONNECT_MAX_DELAY_DEFAULT = 60 * 5 * 1000; // 5 minutes in milliseconds (Case: 1858)\nconst GET_CONNECT_TIMEOUT = 3 * 1000;\nconst RECONNECT_MAX_DELAY_FOR_ADMINS = 30 * 1000; // 30 seconds for admin clients (likely to be a backend server)\nconst RECONNECT_DELAY_MULTIPLIER = 1.3;\nconst RECONNECT_DELAY_RESET_TIMEOUT = 30000; // Reset delay back to MIN_DELAY after being connected for 30sec.\nconst SERVER_KILL_INTERRUPT_REASON = 'server_kill';\n\n// If auth fails repeatedly, we'll assume something is wrong and log a warning / back off.\nconst INVALID_TOKEN_THRESHOLD = 3;\n\ninterface ListenSpec {\n  onComplete(s: string, p?: unknown): void;\n\n  hashFn(): string;\n\n  query: QueryContext;\n  tag: number | null;\n}\n\ninterface OnDisconnectRequest {\n  pathString: string;\n  action: string;\n  data: unknown;\n  onComplete?: (a: string, b: string) => void;\n}\n\ninterface OutstandingPut {\n  action: string;\n  request: object;\n  queued?: boolean;\n  onComplete: (a: string, b?: string) => void;\n}\n\ninterface OutstandingGet {\n  request: object;\n  onComplete: (response: { [k: string]: unknown }) => void;\n}\n\n/**\n * Firebase connection.  Abstracts wire protocol and handles reconnecting.\n *\n * NOTE: All JSON objects sent to the realtime connection must have property names enclosed\n * in quotes to make sure the closure compiler does not minify them.\n */\nexport class PersistentConnection extends ServerActions {\n  // Used for diagnostic logging.\n  id = PersistentConnection.nextPersistentConnectionId_++;\n  private log_ = logWrapper('p:' + this.id + ':');\n\n  private interruptReasons_: { [reason: string]: boolean } = {};\n  private readonly listens: Map<\n    /* path */ string,\n    Map</* queryId */ string, ListenSpec>\n  > = new Map();\n  private outstandingPuts_: OutstandingPut[] = [];\n  private outstandingGets_: OutstandingGet[] = [];\n  private outstandingPutCount_ = 0;\n  private outstandingGetCount_ = 0;\n  private onDisconnectRequestQueue_: OnDisconnectRequest[] = [];\n  private connected_ = false;\n  private reconnectDelay_ = RECONNECT_MIN_DELAY;\n  private maxReconnectDelay_ = RECONNECT_MAX_DELAY_DEFAULT;\n  private securityDebugCallback_: ((a: object) => void) | null = null;\n  lastSessionId: string | null = null;\n\n  private establishConnectionTimer_: number | null = null;\n\n  private visible_: boolean = false;\n\n  // Before we get connected, we keep a queue of pending messages to send.\n  private requestCBHash_: { [k: number]: (a: unknown) => void } = {};\n  private requestNumber_ = 0;\n\n  private realtime_: {\n    sendRequest(a: object): void;\n    close(): void;\n  } | null = null;\n\n  private authToken_: string | null = null;\n  private appCheckToken_: string | null = null;\n  private forceTokenRefresh_ = false;\n  private invalidAuthTokenCount_ = 0;\n  private invalidAppCheckTokenCount_ = 0;\n\n  private firstConnection_ = true;\n  private lastConnectionAttemptTime_: number | null = null;\n  private lastConnectionEstablishedTime_: number | null = null;\n\n  private static nextPersistentConnectionId_ = 0;\n\n  /**\n   * Counter for number of connections created. Mainly used for tagging in the logs\n   */\n  private static nextConnectionId_ = 0;\n\n  /**\n   * @param repoInfo_ - Data about the namespace we are connecting to\n   * @param applicationId_ - The Firebase App ID for this project\n   * @param onDataUpdate_ - A callback for new data from the server\n   */\n  constructor(\n    private repoInfo_: RepoInfo,\n    private applicationId_: string,\n    private onDataUpdate_: (\n      a: string,\n      b: unknown,\n      c: boolean,\n      d: number | null\n    ) => void,\n    private onConnectStatus_: (a: boolean) => void,\n    private onServerInfoUpdate_: (a: unknown) => void,\n    private authTokenProvider_: AuthTokenProvider,\n    private appCheckTokenProvider_: AppCheckTokenProvider,\n    private authOverride_?: object | null\n  ) {\n    super();\n\n    if (authOverride_ && !isNodeSdk()) {\n      throw new Error(\n        'Auth override specified in options, but not supported on non Node.js platforms'\n      );\n    }\n\n    VisibilityMonitor.getInstance().on('visible', this.onVisible_, this);\n\n    if (repoInfo_.host.indexOf('fblocal') === -1) {\n      OnlineMonitor.getInstance().on('online', this.onOnline_, this);\n    }\n  }\n\n  protected sendRequest(\n    action: string,\n    body: unknown,\n    onResponse?: (a: unknown) => void\n  ) {\n    const curReqNum = ++this.requestNumber_;\n\n    const msg = { r: curReqNum, a: action, b: body };\n    this.log_(stringify(msg));\n    assert(\n      this.connected_,\n      \"sendRequest call when we're not connected not allowed.\"\n    );\n    this.realtime_.sendRequest(msg);\n    if (onResponse) {\n      this.requestCBHash_[curReqNum] = onResponse;\n    }\n  }\n\n  get(query: QueryContext): Promise<string> {\n    this.initConnection_();\n\n    const deferred = new Deferred<string>();\n    const request = {\n      p: query._path.toString(),\n      q: query._queryObject\n    };\n    const outstandingGet = {\n      action: 'g',\n      request,\n      onComplete: (message: { [k: string]: unknown }) => {\n        const payload = message['d'] as string;\n        if (message['s'] === 'ok') {\n          this.onDataUpdate_(\n            request['p'],\n            payload,\n            /*isMerge*/ false,\n            /*tag*/ null\n          );\n          deferred.resolve(payload);\n        } else {\n          deferred.reject(payload);\n        }\n      }\n    };\n    this.outstandingGets_.push(outstandingGet);\n    this.outstandingGetCount_++;\n    const index = this.outstandingGets_.length - 1;\n\n    if (!this.connected_) {\n      setTimeout(() => {\n        const get = this.outstandingGets_[index];\n        if (get === undefined || outstandingGet !== get) {\n          return;\n        }\n        delete this.outstandingGets_[index];\n        this.outstandingGetCount_--;\n        if (this.outstandingGetCount_ === 0) {\n          this.outstandingGets_ = [];\n        }\n        this.log_('get ' + index + ' timed out on connection');\n        deferred.reject(new Error('Client is offline.'));\n      }, GET_CONNECT_TIMEOUT);\n    }\n\n    if (this.connected_) {\n      this.sendGet_(index);\n    }\n\n    return deferred.promise;\n  }\n\n  listen(\n    query: QueryContext,\n    currentHashFn: () => string,\n    tag: number | null,\n    onComplete: (a: string, b: unknown) => void\n  ) {\n    this.initConnection_();\n\n    const queryId = query._queryIdentifier;\n    const pathString = query._path.toString();\n    this.log_('Listen called for ' + pathString + ' ' + queryId);\n    if (!this.listens.has(pathString)) {\n      this.listens.set(pathString, new Map());\n    }\n    assert(\n      query._queryParams.isDefault() || !query._queryParams.loadsAllData(),\n      'listen() called for non-default but complete query'\n    );\n    assert(\n      !this.listens.get(pathString)!.has(queryId),\n      'listen() called twice for same path/queryId.'\n    );\n    const listenSpec: ListenSpec = {\n      onComplete,\n      hashFn: currentHashFn,\n      query,\n      tag\n    };\n    this.listens.get(pathString)!.set(queryId, listenSpec);\n\n    if (this.connected_) {\n      this.sendListen_(listenSpec);\n    }\n  }\n\n  private sendGet_(index: number) {\n    const get = this.outstandingGets_[index];\n    this.sendRequest('g', get.request, (message: { [k: string]: unknown }) => {\n      delete this.outstandingGets_[index];\n      this.outstandingGetCount_--;\n      if (this.outstandingGetCount_ === 0) {\n        this.outstandingGets_ = [];\n      }\n      if (get.onComplete) {\n        get.onComplete(message);\n      }\n    });\n  }\n\n  private sendListen_(listenSpec: ListenSpec) {\n    const query = listenSpec.query;\n    const pathString = query._path.toString();\n    const queryId = query._queryIdentifier;\n    this.log_('Listen on ' + pathString + ' for ' + queryId);\n    const req: { [k: string]: unknown } = { /*path*/ p: pathString };\n\n    const action = 'q';\n\n    // Only bother to send query if it's non-default.\n    if (listenSpec.tag) {\n      req['q'] = query._queryObject;\n      req['t'] = listenSpec.tag;\n    }\n\n    req[/*hash*/ 'h'] = listenSpec.hashFn();\n\n    this.sendRequest(action, req, (message: { [k: string]: unknown }) => {\n      const payload: unknown = message[/*data*/ 'd'];\n      const status = message[/*status*/ 's'] as string;\n\n      // print warnings in any case...\n      PersistentConnection.warnOnListenWarnings_(payload, query);\n\n      const currentListenSpec =\n        this.listens.get(pathString) &&\n        this.listens.get(pathString)!.get(queryId);\n      // only trigger actions if the listen hasn't been removed and readded\n      if (currentListenSpec === listenSpec) {\n        this.log_('listen response', message);\n\n        if (status !== 'ok') {\n          this.removeListen_(pathString, queryId);\n        }\n\n        if (listenSpec.onComplete) {\n          listenSpec.onComplete(status, payload);\n        }\n      }\n    });\n  }\n\n  private static warnOnListenWarnings_(payload: unknown, query: QueryContext) {\n    if (payload && typeof payload === 'object' && contains(payload, 'w')) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const warnings = safeGet(payload as any, 'w');\n      if (Array.isArray(warnings) && ~warnings.indexOf('no_index')) {\n        const indexSpec =\n          '\".indexOn\": \"' + query._queryParams.getIndex().toString() + '\"';\n        const indexPath = query._path.toString();\n        warn(\n          `Using an unspecified index. Your data will be downloaded and ` +\n            `filtered on the client. Consider adding ${indexSpec} at ` +\n            `${indexPath} to your security rules for better performance.`\n        );\n      }\n    }\n  }\n\n  refreshAuthToken(token: string) {\n    this.authToken_ = token;\n    this.log_('Auth token refreshed');\n    if (this.authToken_) {\n      this.tryAuth();\n    } else {\n      //If we're connected we want to let the server know to unauthenticate us. If we're not connected, simply delete\n      //the credential so we dont become authenticated next time we connect.\n      if (this.connected_) {\n        this.sendRequest('unauth', {}, () => {});\n      }\n    }\n\n    this.reduceReconnectDelayIfAdminCredential_(token);\n  }\n\n  private reduceReconnectDelayIfAdminCredential_(credential: string) {\n    // NOTE: This isn't intended to be bulletproof (a malicious developer can always just modify the client).\n    // Additionally, we don't bother resetting the max delay back to the default if auth fails / expires.\n    const isFirebaseSecret = credential && credential.length === 40;\n    if (isFirebaseSecret || isAdmin(credential)) {\n      this.log_(\n        'Admin auth credential detected.  Reducing max reconnect time.'\n      );\n      this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\n    }\n  }\n\n  refreshAppCheckToken(token: string | null) {\n    this.appCheckToken_ = token;\n    this.log_('App check token refreshed');\n    if (this.appCheckToken_) {\n      this.tryAppCheck();\n    } else {\n      //If we're connected we want to let the server know to unauthenticate us.\n      //If we're not connected, simply delete the credential so we dont become\n      // authenticated next time we connect.\n      if (this.connected_) {\n        this.sendRequest('unappeck', {}, () => {});\n      }\n    }\n  }\n\n  /**\n   * Attempts to authenticate with the given credentials. If the authentication attempt fails, it's triggered like\n   * a auth revoked (the connection is closed).\n   */\n  tryAuth() {\n    if (this.connected_ && this.authToken_) {\n      const token = this.authToken_;\n      const authMethod = isValidFormat(token) ? 'auth' : 'gauth';\n      const requestData: { [k: string]: unknown } = { cred: token };\n      if (this.authOverride_ === null) {\n        requestData['noauth'] = true;\n      } else if (typeof this.authOverride_ === 'object') {\n        requestData['authvar'] = this.authOverride_;\n      }\n      this.sendRequest(\n        authMethod,\n        requestData,\n        (res: { [k: string]: unknown }) => {\n          const status = res[/*status*/ 's'] as string;\n          const data = (res[/*data*/ 'd'] as string) || 'error';\n\n          if (this.authToken_ === token) {\n            if (status === 'ok') {\n              this.invalidAuthTokenCount_ = 0;\n            } else {\n              // Triggers reconnect and force refresh for auth token\n              this.onAuthRevoked_(status, data);\n            }\n          }\n        }\n      );\n    }\n  }\n\n  /**\n   * Attempts to authenticate with the given token. If the authentication\n   * attempt fails, it's triggered like the token was revoked (the connection is\n   * closed).\n   */\n  tryAppCheck() {\n    if (this.connected_ && this.appCheckToken_) {\n      this.sendRequest(\n        'appcheck',\n        { 'token': this.appCheckToken_ },\n        (res: { [k: string]: unknown }) => {\n          const status = res[/*status*/ 's'] as string;\n          const data = (res[/*data*/ 'd'] as string) || 'error';\n          if (status === 'ok') {\n            this.invalidAppCheckTokenCount_ = 0;\n          } else {\n            this.onAppCheckRevoked_(status, data);\n          }\n        }\n      );\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  unlisten(query: QueryContext, tag: number | null) {\n    const pathString = query._path.toString();\n    const queryId = query._queryIdentifier;\n\n    this.log_('Unlisten called for ' + pathString + ' ' + queryId);\n\n    assert(\n      query._queryParams.isDefault() || !query._queryParams.loadsAllData(),\n      'unlisten() called for non-default but complete query'\n    );\n    const listen = this.removeListen_(pathString, queryId);\n    if (listen && this.connected_) {\n      this.sendUnlisten_(pathString, queryId, query._queryObject, tag);\n    }\n  }\n\n  private sendUnlisten_(\n    pathString: string,\n    queryId: string,\n    queryObj: object,\n    tag: number | null\n  ) {\n    this.log_('Unlisten on ' + pathString + ' for ' + queryId);\n\n    const req: { [k: string]: unknown } = { /*path*/ p: pathString };\n    const action = 'n';\n    // Only bother sending queryId if it's non-default.\n    if (tag) {\n      req['q'] = queryObj;\n      req['t'] = tag;\n    }\n\n    this.sendRequest(action, req);\n  }\n\n  onDisconnectPut(\n    pathString: string,\n    data: unknown,\n    onComplete?: (a: string, b: string) => void\n  ) {\n    this.initConnection_();\n\n    if (this.connected_) {\n      this.sendOnDisconnect_('o', pathString, data, onComplete);\n    } else {\n      this.onDisconnectRequestQueue_.push({\n        pathString,\n        action: 'o',\n        data,\n        onComplete\n      });\n    }\n  }\n\n  onDisconnectMerge(\n    pathString: string,\n    data: unknown,\n    onComplete?: (a: string, b: string) => void\n  ) {\n    this.initConnection_();\n\n    if (this.connected_) {\n      this.sendOnDisconnect_('om', pathString, data, onComplete);\n    } else {\n      this.onDisconnectRequestQueue_.push({\n        pathString,\n        action: 'om',\n        data,\n        onComplete\n      });\n    }\n  }\n\n  onDisconnectCancel(\n    pathString: string,\n    onComplete?: (a: string, b: string) => void\n  ) {\n    this.initConnection_();\n\n    if (this.connected_) {\n      this.sendOnDisconnect_('oc', pathString, null, onComplete);\n    } else {\n      this.onDisconnectRequestQueue_.push({\n        pathString,\n        action: 'oc',\n        data: null,\n        onComplete\n      });\n    }\n  }\n\n  private sendOnDisconnect_(\n    action: string,\n    pathString: string,\n    data: unknown,\n    onComplete: (a: string, b: string) => void\n  ) {\n    const request = { /*path*/ p: pathString, /*data*/ d: data };\n    this.log_('onDisconnect ' + action, request);\n    this.sendRequest(action, request, (response: { [k: string]: unknown }) => {\n      if (onComplete) {\n        setTimeout(() => {\n          onComplete(\n            response[/*status*/ 's'] as string,\n            response[/* data */ 'd'] as string\n          );\n        }, Math.floor(0));\n      }\n    });\n  }\n\n  put(\n    pathString: string,\n    data: unknown,\n    onComplete?: (a: string, b: string) => void,\n    hash?: string\n  ) {\n    this.putInternal('p', pathString, data, onComplete, hash);\n  }\n\n  merge(\n    pathString: string,\n    data: unknown,\n    onComplete: (a: string, b: string | null) => void,\n    hash?: string\n  ) {\n    this.putInternal('m', pathString, data, onComplete, hash);\n  }\n\n  putInternal(\n    action: string,\n    pathString: string,\n    data: unknown,\n    onComplete: (a: string, b: string | null) => void,\n    hash?: string\n  ) {\n    this.initConnection_();\n\n    const request: { [k: string]: unknown } = {\n      /*path*/ p: pathString,\n      /*data*/ d: data\n    };\n\n    if (hash !== undefined) {\n      request[/*hash*/ 'h'] = hash;\n    }\n\n    // TODO: Only keep track of the most recent put for a given path?\n    this.outstandingPuts_.push({\n      action,\n      request,\n      onComplete\n    });\n\n    this.outstandingPutCount_++;\n    const index = this.outstandingPuts_.length - 1;\n\n    if (this.connected_) {\n      this.sendPut_(index);\n    } else {\n      this.log_('Buffering put: ' + pathString);\n    }\n  }\n\n  private sendPut_(index: number) {\n    const action = this.outstandingPuts_[index].action;\n    const request = this.outstandingPuts_[index].request;\n    const onComplete = this.outstandingPuts_[index].onComplete;\n    this.outstandingPuts_[index].queued = this.connected_;\n\n    this.sendRequest(action, request, (message: { [k: string]: unknown }) => {\n      this.log_(action + ' response', message);\n\n      delete this.outstandingPuts_[index];\n      this.outstandingPutCount_--;\n\n      // Clean up array occasionally.\n      if (this.outstandingPutCount_ === 0) {\n        this.outstandingPuts_ = [];\n      }\n\n      if (onComplete) {\n        onComplete(\n          message[/*status*/ 's'] as string,\n          message[/* data */ 'd'] as string\n        );\n      }\n    });\n  }\n\n  reportStats(stats: { [k: string]: unknown }) {\n    // If we're not connected, we just drop the stats.\n    if (this.connected_) {\n      const request = { /*counters*/ c: stats };\n      this.log_('reportStats', request);\n\n      this.sendRequest(/*stats*/ 's', request, result => {\n        const status = result[/*status*/ 's'];\n        if (status !== 'ok') {\n          const errorReason = result[/* data */ 'd'];\n          this.log_('reportStats', 'Error sending stats: ' + errorReason);\n        }\n      });\n    }\n  }\n\n  private onDataMessage_(message: { [k: string]: unknown }) {\n    if ('r' in message) {\n      // this is a response\n      this.log_('from server: ' + stringify(message));\n      const reqNum = message['r'] as string;\n      const onResponse = this.requestCBHash_[reqNum];\n      if (onResponse) {\n        delete this.requestCBHash_[reqNum];\n        onResponse(message[/*body*/ 'b']);\n      }\n    } else if ('error' in message) {\n      throw 'A server-side error has occurred: ' + message['error'];\n    } else if ('a' in message) {\n      // a and b are action and body, respectively\n      this.onDataPush_(message['a'] as string, message['b'] as {});\n    }\n  }\n\n  private onDataPush_(action: string, body: { [k: string]: unknown }) {\n    this.log_('handleServerMessage', action, body);\n    if (action === 'd') {\n      this.onDataUpdate_(\n        body[/*path*/ 'p'] as string,\n        body[/*data*/ 'd'],\n        /*isMerge*/ false,\n        body['t'] as number\n      );\n    } else if (action === 'm') {\n      this.onDataUpdate_(\n        body[/*path*/ 'p'] as string,\n        body[/*data*/ 'd'],\n        /*isMerge=*/ true,\n        body['t'] as number\n      );\n    } else if (action === 'c') {\n      this.onListenRevoked_(\n        body[/*path*/ 'p'] as string,\n        body[/*query*/ 'q'] as unknown[]\n      );\n    } else if (action === 'ac') {\n      this.onAuthRevoked_(\n        body[/*status code*/ 's'] as string,\n        body[/* explanation */ 'd'] as string\n      );\n    } else if (action === 'apc') {\n      this.onAppCheckRevoked_(\n        body[/*status code*/ 's'] as string,\n        body[/* explanation */ 'd'] as string\n      );\n    } else if (action === 'sd') {\n      this.onSecurityDebugPacket_(body);\n    } else {\n      error(\n        'Unrecognized action received from server: ' +\n          stringify(action) +\n          '\\nAre you using the latest client?'\n      );\n    }\n  }\n\n  private onReady_(timestamp: number, sessionId: string) {\n    this.log_('connection ready');\n    this.connected_ = true;\n    this.lastConnectionEstablishedTime_ = new Date().getTime();\n    this.handleTimestamp_(timestamp);\n    this.lastSessionId = sessionId;\n    if (this.firstConnection_) {\n      this.sendConnectStats_();\n    }\n    this.restoreState_();\n    this.firstConnection_ = false;\n    this.onConnectStatus_(true);\n  }\n\n  private scheduleConnect_(timeout: number) {\n    assert(\n      !this.realtime_,\n      \"Scheduling a connect when we're already connected/ing?\"\n    );\n\n    if (this.establishConnectionTimer_) {\n      clearTimeout(this.establishConnectionTimer_);\n    }\n\n    // NOTE: Even when timeout is 0, it's important to do a setTimeout to work around an infuriating \"Security Error\" in\n    // Firefox when trying to write to our long-polling iframe in some scenarios (e.g. Forge or our unit tests).\n\n    this.establishConnectionTimer_ = setTimeout(() => {\n      this.establishConnectionTimer_ = null;\n      this.establishConnection_();\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    }, Math.floor(timeout)) as any;\n  }\n\n  private initConnection_() {\n    if (!this.realtime_ && this.firstConnection_) {\n      this.scheduleConnect_(0);\n    }\n  }\n\n  private onVisible_(visible: boolean) {\n    // NOTE: Tabbing away and back to a window will defeat our reconnect backoff, but I think that's fine.\n    if (\n      visible &&\n      !this.visible_ &&\n      this.reconnectDelay_ === this.maxReconnectDelay_\n    ) {\n      this.log_('Window became visible.  Reducing delay.');\n      this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n\n      if (!this.realtime_) {\n        this.scheduleConnect_(0);\n      }\n    }\n    this.visible_ = visible;\n  }\n\n  private onOnline_(online: boolean) {\n    if (online) {\n      this.log_('Browser went online.');\n      this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n      if (!this.realtime_) {\n        this.scheduleConnect_(0);\n      }\n    } else {\n      this.log_('Browser went offline.  Killing connection.');\n      if (this.realtime_) {\n        this.realtime_.close();\n      }\n    }\n  }\n\n  private onRealtimeDisconnect_() {\n    this.log_('data client disconnected');\n    this.connected_ = false;\n    this.realtime_ = null;\n\n    // Since we don't know if our sent transactions succeeded or not, we need to cancel them.\n    this.cancelSentTransactions_();\n\n    // Clear out the pending requests.\n    this.requestCBHash_ = {};\n\n    if (this.shouldReconnect_()) {\n      if (!this.visible_) {\n        this.log_(\"Window isn't visible.  Delaying reconnect.\");\n        this.reconnectDelay_ = this.maxReconnectDelay_;\n        this.lastConnectionAttemptTime_ = new Date().getTime();\n      } else if (this.lastConnectionEstablishedTime_) {\n        // If we've been connected long enough, reset reconnect delay to minimum.\n        const timeSinceLastConnectSucceeded =\n          new Date().getTime() - this.lastConnectionEstablishedTime_;\n        if (timeSinceLastConnectSucceeded > RECONNECT_DELAY_RESET_TIMEOUT) {\n          this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n        }\n        this.lastConnectionEstablishedTime_ = null;\n      }\n\n      const timeSinceLastConnectAttempt =\n        new Date().getTime() - this.lastConnectionAttemptTime_;\n      let reconnectDelay = Math.max(\n        0,\n        this.reconnectDelay_ - timeSinceLastConnectAttempt\n      );\n      reconnectDelay = Math.random() * reconnectDelay;\n\n      this.log_('Trying to reconnect in ' + reconnectDelay + 'ms');\n      this.scheduleConnect_(reconnectDelay);\n\n      // Adjust reconnect delay for next time.\n      this.reconnectDelay_ = Math.min(\n        this.maxReconnectDelay_,\n        this.reconnectDelay_ * RECONNECT_DELAY_MULTIPLIER\n      );\n    }\n    this.onConnectStatus_(false);\n  }\n\n  private async establishConnection_() {\n    if (this.shouldReconnect_()) {\n      this.log_('Making a connection attempt');\n      this.lastConnectionAttemptTime_ = new Date().getTime();\n      this.lastConnectionEstablishedTime_ = null;\n      const onDataMessage = this.onDataMessage_.bind(this);\n      const onReady = this.onReady_.bind(this);\n      const onDisconnect = this.onRealtimeDisconnect_.bind(this);\n      const connId = this.id + ':' + PersistentConnection.nextConnectionId_++;\n      const lastSessionId = this.lastSessionId;\n      let canceled = false;\n      let connection: Connection | null = null;\n      const closeFn = function () {\n        if (connection) {\n          connection.close();\n        } else {\n          canceled = true;\n          onDisconnect();\n        }\n      };\n      const sendRequestFn = function (msg: object) {\n        assert(\n          connection,\n          \"sendRequest call when we're not connected not allowed.\"\n        );\n        connection.sendRequest(msg);\n      };\n\n      this.realtime_ = {\n        close: closeFn,\n        sendRequest: sendRequestFn\n      };\n\n      const forceRefresh = this.forceTokenRefresh_;\n      this.forceTokenRefresh_ = false;\n\n      try {\n        // First fetch auth and app check token, and establish connection after\n        // fetching the token was successful\n        const [authToken, appCheckToken] = await Promise.all([\n          this.authTokenProvider_.getToken(forceRefresh),\n          this.appCheckTokenProvider_.getToken(forceRefresh)\n        ]);\n\n        if (!canceled) {\n          log('getToken() completed. Creating connection.');\n          this.authToken_ = authToken && authToken.accessToken;\n          this.appCheckToken_ = appCheckToken && appCheckToken.token;\n          connection = new Connection(\n            connId,\n            this.repoInfo_,\n            this.applicationId_,\n            this.appCheckToken_,\n            this.authToken_,\n            onDataMessage,\n            onReady,\n            onDisconnect,\n            /* onKill= */ reason => {\n              warn(reason + ' (' + this.repoInfo_.toString() + ')');\n              this.interrupt(SERVER_KILL_INTERRUPT_REASON);\n            },\n            lastSessionId\n          );\n        } else {\n          log('getToken() completed but was canceled');\n        }\n      } catch (error) {\n        this.log_('Failed to get token: ' + error);\n        if (!canceled) {\n          if (this.repoInfo_.nodeAdmin) {\n            // This may be a critical error for the Admin Node.js SDK, so log a warning.\n            // But getToken() may also just have temporarily failed, so we still want to\n            // continue retrying.\n            warn(error);\n          }\n          closeFn();\n        }\n      }\n    }\n  }\n\n  interrupt(reason: string) {\n    log('Interrupting connection for reason: ' + reason);\n    this.interruptReasons_[reason] = true;\n    if (this.realtime_) {\n      this.realtime_.close();\n    } else {\n      if (this.establishConnectionTimer_) {\n        clearTimeout(this.establishConnectionTimer_);\n        this.establishConnectionTimer_ = null;\n      }\n      if (this.connected_) {\n        this.onRealtimeDisconnect_();\n      }\n    }\n  }\n\n  resume(reason: string) {\n    log('Resuming connection for reason: ' + reason);\n    delete this.interruptReasons_[reason];\n    if (isEmpty(this.interruptReasons_)) {\n      this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n      if (!this.realtime_) {\n        this.scheduleConnect_(0);\n      }\n    }\n  }\n\n  private handleTimestamp_(timestamp: number) {\n    const delta = timestamp - new Date().getTime();\n    this.onServerInfoUpdate_({ serverTimeOffset: delta });\n  }\n\n  private cancelSentTransactions_() {\n    for (let i = 0; i < this.outstandingPuts_.length; i++) {\n      const put = this.outstandingPuts_[i];\n      if (put && /*hash*/ 'h' in put.request && put.queued) {\n        if (put.onComplete) {\n          put.onComplete('disconnect');\n        }\n\n        delete this.outstandingPuts_[i];\n        this.outstandingPutCount_--;\n      }\n    }\n\n    // Clean up array occasionally.\n    if (this.outstandingPutCount_ === 0) {\n      this.outstandingPuts_ = [];\n    }\n  }\n\n  private onListenRevoked_(pathString: string, query?: unknown[]) {\n    // Remove the listen and manufacture a \"permission_denied\" error for the failed listen.\n    let queryId;\n    if (!query) {\n      queryId = 'default';\n    } else {\n      queryId = query.map(q => ObjectToUniqueKey(q)).join('$');\n    }\n    const listen = this.removeListen_(pathString, queryId);\n    if (listen && listen.onComplete) {\n      listen.onComplete('permission_denied');\n    }\n  }\n\n  private removeListen_(pathString: string, queryId: string): ListenSpec {\n    const normalizedPathString = new Path(pathString).toString(); // normalize path.\n    let listen;\n    if (this.listens.has(normalizedPathString)) {\n      const map = this.listens.get(normalizedPathString)!;\n      listen = map.get(queryId);\n      map.delete(queryId);\n      if (map.size === 0) {\n        this.listens.delete(normalizedPathString);\n      }\n    } else {\n      // all listens for this path has already been removed\n      listen = undefined;\n    }\n    return listen;\n  }\n\n  private onAuthRevoked_(statusCode: string, explanation: string) {\n    log('Auth token revoked: ' + statusCode + '/' + explanation);\n    this.authToken_ = null;\n    this.forceTokenRefresh_ = true;\n    this.realtime_.close();\n    if (statusCode === 'invalid_token' || statusCode === 'permission_denied') {\n      // We'll wait a couple times before logging the warning / increasing the\n      // retry period since oauth tokens will report as \"invalid\" if they're\n      // just expired. Plus there may be transient issues that resolve themselves.\n      this.invalidAuthTokenCount_++;\n      if (this.invalidAuthTokenCount_ >= INVALID_TOKEN_THRESHOLD) {\n        // Set a long reconnect delay because recovery is unlikely\n        this.reconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\n\n        // Notify the auth token provider that the token is invalid, which will log\n        // a warning\n        this.authTokenProvider_.notifyForInvalidToken();\n      }\n    }\n  }\n\n  private onAppCheckRevoked_(statusCode: string, explanation: string) {\n    log('App check token revoked: ' + statusCode + '/' + explanation);\n    this.appCheckToken_ = null;\n    this.forceTokenRefresh_ = true;\n    // Note: We don't close the connection as the developer may not have\n    // enforcement enabled. The backend closes connections with enforcements.\n    if (statusCode === 'invalid_token' || statusCode === 'permission_denied') {\n      // We'll wait a couple times before logging the warning / increasing the\n      // retry period since oauth tokens will report as \"invalid\" if they're\n      // just expired. Plus there may be transient issues that resolve themselves.\n      this.invalidAppCheckTokenCount_++;\n      if (this.invalidAppCheckTokenCount_ >= INVALID_TOKEN_THRESHOLD) {\n        this.appCheckTokenProvider_.notifyForInvalidToken();\n      }\n    }\n  }\n\n  private onSecurityDebugPacket_(body: { [k: string]: unknown }) {\n    if (this.securityDebugCallback_) {\n      this.securityDebugCallback_(body);\n    } else {\n      if ('msg' in body) {\n        console.log(\n          'FIREBASE: ' + (body['msg'] as string).replace('\\n', '\\nFIREBASE: ')\n        );\n      }\n    }\n  }\n\n  private restoreState_() {\n    //Re-authenticate ourselves if we have a credential stored.\n    this.tryAuth();\n    this.tryAppCheck();\n\n    // Puts depend on having received the corresponding data update from the server before they complete, so we must\n    // make sure to send listens before puts.\n    for (const queries of this.listens.values()) {\n      for (const listenSpec of queries.values()) {\n        this.sendListen_(listenSpec);\n      }\n    }\n\n    for (let i = 0; i < this.outstandingPuts_.length; i++) {\n      if (this.outstandingPuts_[i]) {\n        this.sendPut_(i);\n      }\n    }\n\n    while (this.onDisconnectRequestQueue_.length) {\n      const request = this.onDisconnectRequestQueue_.shift();\n      this.sendOnDisconnect_(\n        request.action,\n        request.pathString,\n        request.data,\n        request.onComplete\n      );\n    }\n\n    for (let i = 0; i < this.outstandingGets_.length; i++) {\n      if (this.outstandingGets_[i]) {\n        this.sendGet_(i);\n      }\n    }\n  }\n\n  /**\n   * Sends client stats for first connection\n   */\n  private sendConnectStats_() {\n    const stats: { [k: string]: number } = {};\n\n    let clientName = 'js';\n    if (isNodeSdk()) {\n      if (this.repoInfo_.nodeAdmin) {\n        clientName = 'admin_node';\n      } else {\n        clientName = 'node';\n      }\n    }\n\n    stats['sdk.' + clientName + '.' + SDK_VERSION.replace(/\\./g, '-')] = 1;\n\n    if (isMobileCordova()) {\n      stats['framework.cordova'] = 1;\n    } else if (isReactNative()) {\n      stats['framework.reactnative'] = 1;\n    }\n    this.reportStats(stats);\n  }\n\n  private shouldReconnect_(): boolean {\n    const online = OnlineMonitor.getInstance().currentlyOnline();\n    return isEmpty(this.interruptReasons_) && online;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Path } from '../util/Path';\n\nimport { Index } from './indexes/Index';\n\n/**\n * Node is an interface defining the common functionality for nodes in\n * a DataSnapshot.\n *\n * @interface\n */\nexport interface Node {\n  /**\n   * Whether this node is a leaf node.\n   * @returns Whether this is a leaf node.\n   */\n  isLeafNode(): boolean;\n\n  /**\n   * Gets the priority of the node.\n   * @returns The priority of the node.\n   */\n  getPriority(): Node;\n\n  /**\n   * Returns a duplicate node with the new priority.\n   * @param newPriorityNode - New priority to set for the node.\n   * @returns Node with new priority.\n   */\n  updatePriority(newPriorityNode: Node): Node;\n\n  /**\n   * Returns the specified immediate child, or null if it doesn't exist.\n   * @param childName - The name of the child to retrieve.\n   * @returns The retrieved child, or an empty node.\n   */\n  getImmediateChild(childName: string): Node;\n\n  /**\n   * Returns a child by path, or null if it doesn't exist.\n   * @param path - The path of the child to retrieve.\n   * @returns The retrieved child or an empty node.\n   */\n  getChild(path: Path): Node;\n\n  /**\n   * Returns the name of the child immediately prior to the specified childNode, or null.\n   * @param childName - The name of the child to find the predecessor of.\n   * @param childNode - The node to find the predecessor of.\n   * @param index - The index to use to determine the predecessor\n   * @returns The name of the predecessor child, or null if childNode is the first child.\n   */\n  getPredecessorChildName(\n    childName: string,\n    childNode: Node,\n    index: Index\n  ): string | null;\n\n  /**\n   * Returns a duplicate node, with the specified immediate child updated.\n   * Any value in the node will be removed.\n   * @param childName - The name of the child to update.\n   * @param newChildNode - The new child node\n   * @returns The updated node.\n   */\n  updateImmediateChild(childName: string, newChildNode: Node): Node;\n\n  /**\n   * Returns a duplicate node, with the specified child updated.  Any value will\n   * be removed.\n   * @param path - The path of the child to update.\n   * @param newChildNode - The new child node, which may be an empty node\n   * @returns The updated node.\n   */\n  updateChild(path: Path, newChildNode: Node): Node;\n\n  /**\n   * True if the immediate child specified exists\n   */\n  hasChild(childName: string): boolean;\n\n  /**\n   * @returns True if this node has no value or children.\n   */\n  isEmpty(): boolean;\n\n  /**\n   * @returns The number of children of this node.\n   */\n  numChildren(): number;\n\n  /**\n   * Calls action for each child.\n   * @param action - Action to be called for\n   * each child.  It's passed the child name and the child node.\n   * @returns The first truthy value return by action, or the last falsey one\n   */\n  forEachChild(index: Index, action: (a: string, b: Node) => void): unknown;\n\n  /**\n   * @param exportFormat - True for export format (also wire protocol format).\n   * @returns Value of this node as JSON.\n   */\n  val(exportFormat?: boolean): unknown;\n\n  /**\n   * @returns hash representing the node contents.\n   */\n  hash(): string;\n\n  /**\n   * @param other - Another node\n   * @returns -1 for less than, 0 for equal, 1 for greater than other\n   */\n  compareTo(other: Node): number;\n\n  /**\n   * @returns Whether or not this snapshot equals other\n   */\n  equals(other: Node): boolean;\n\n  /**\n   * @returns This node, with the specified index now available\n   */\n  withIndex(indexDefinition: Index): Node;\n\n  isIndexed(indexDefinition: Index): boolean;\n}\n\nexport class NamedNode {\n  constructor(public name: string, public node: Node) {}\n\n  static Wrap(name: string, node: Node) {\n    return new NamedNode(name, node);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Comparator } from '../../util/SortedMap';\nimport { MIN_NAME } from '../../util/util';\nimport { Node, NamedNode } from '../Node';\n\nexport abstract class Index {\n  abstract compare(a: NamedNode, b: NamedNode): number;\n\n  abstract isDefinedOn(node: Node): boolean;\n\n  /**\n   * @returns A standalone comparison function for\n   * this index\n   */\n  getCompare(): Comparator<NamedNode> {\n    return this.compare.bind(this);\n  }\n\n  /**\n   * Given a before and after value for a node, determine if the indexed value has changed. Even if they are different,\n   * it's possible that the changes are isolated to parts of the snapshot that are not indexed.\n   *\n   *\n   * @returns True if the portion of the snapshot being indexed changed between oldNode and newNode\n   */\n  indexedValueChanged(oldNode: Node, newNode: Node): boolean {\n    const oldWrapped = new NamedNode(MIN_NAME, oldNode);\n    const newWrapped = new NamedNode(MIN_NAME, newNode);\n    return this.compare(oldWrapped, newWrapped) !== 0;\n  }\n\n  /**\n   * @returns a node wrapper that will sort equal to or less than\n   * any other node wrapper, using this index\n   */\n  minPost(): NamedNode {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (NamedNode as any).MIN;\n  }\n\n  /**\n   * @returns a node wrapper that will sort greater than or equal to\n   * any other node wrapper, using this index\n   */\n  abstract maxPost(): NamedNode;\n\n  abstract makePost(indexValue: unknown, name: string): NamedNode;\n\n  /**\n   * @returns String representation for inclusion in a query spec\n   */\n  abstract toString(): string;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, assertionError } from '@firebase/util';\n\nimport { nameCompare, MAX_NAME } from '../../util/util';\nimport { ChildrenNode } from '../ChildrenNode';\nimport { Node, NamedNode } from '../Node';\n\nimport { Index } from './Index';\n\nlet __EMPTY_NODE: ChildrenNode;\n\nexport class KeyIndex extends Index {\n  static get __EMPTY_NODE() {\n    return __EMPTY_NODE;\n  }\n\n  static set __EMPTY_NODE(val) {\n    __EMPTY_NODE = val;\n  }\n  compare(a: NamedNode, b: NamedNode): number {\n    return nameCompare(a.name, b.name);\n  }\n  isDefinedOn(node: Node): boolean {\n    // We could probably return true here (since every node has a key), but it's never called\n    // so just leaving unimplemented for now.\n    throw assertionError('KeyIndex.isDefinedOn not expected to be called.');\n  }\n  indexedValueChanged(oldNode: Node, newNode: Node): boolean {\n    return false; // The key for a node never changes.\n  }\n  minPost() {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (NamedNode as any).MIN;\n  }\n  maxPost(): NamedNode {\n    // TODO: This should really be created once and cached in a static property, but\n    // NamedNode isn't defined yet, so I can't use it in a static.  Bleh.\n    return new NamedNode(MAX_NAME, __EMPTY_NODE);\n  }\n\n  makePost(indexValue: string, name: string): NamedNode {\n    assert(\n      typeof indexValue === 'string',\n      'KeyIndex indexValue must always be a string.'\n    );\n    // We just use empty node, but it'll never be compared, since our comparator only looks at name.\n    return new NamedNode(indexValue, __EMPTY_NODE);\n  }\n\n  /**\n   * @returns String representation for inclusion in a query spec\n   */\n  toString(): string {\n    return '.key';\n  }\n}\n\nexport const KEY_INDEX = new KeyIndex();\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Implementation of an immutable SortedMap using a Left-leaning\n * Red-Black Tree, adapted from the implementation in Mugs\n * (http://mads379.github.com/mugs/) by Mads Hartmann Jensen\n * (mads379\\@gmail.com).\n *\n * Original paper on Left-leaning Red-Black Trees:\n *   http://www.cs.princeton.edu/~rs/talks/LLRB/LLRB.pdf\n *\n * Invariant 1: No red node has a red child\n * Invariant 2: Every leaf path has the same number of black nodes\n * Invariant 3: Only the left child can be red (left leaning)\n */\n\n// TODO: There are some improvements I'd like to make to improve memory / perf:\n//  * Create two prototypes, LLRedNode and LLBlackNode, instead of storing a\n//    color property in every node.\n// TODO: It would also be good (and possibly necessary) to create a base\n// interface for LLRBNode and LLRBEmptyNode.\n\nexport type Comparator<K> = (key1: K, key2: K) => number;\n\n/**\n * An iterator over an LLRBNode.\n */\nexport class SortedMapIterator<K, V, T> {\n  private nodeStack_: Array<LLRBNode<K, V> | LLRBEmptyNode<K, V>> = [];\n\n  /**\n   * @param node - Node to iterate.\n   * @param isReverse_ - Whether or not to iterate in reverse\n   */\n  constructor(\n    node: LLRBNode<K, V> | LLRBEmptyNode<K, V>,\n    startKey: K | null,\n    comparator: Comparator<K>,\n    private isReverse_: boolean,\n    private resultGenerator_: ((k: K, v: V) => T) | null = null\n  ) {\n    let cmp = 1;\n    while (!node.isEmpty()) {\n      node = node as LLRBNode<K, V>;\n      cmp = startKey ? comparator(node.key, startKey) : 1;\n      // flip the comparison if we're going in reverse\n      if (isReverse_) {\n        cmp *= -1;\n      }\n\n      if (cmp < 0) {\n        // This node is less than our start key. ignore it\n        if (this.isReverse_) {\n          node = node.left;\n        } else {\n          node = node.right;\n        }\n      } else if (cmp === 0) {\n        // This node is exactly equal to our start key. Push it on the stack, but stop iterating;\n        this.nodeStack_.push(node);\n        break;\n      } else {\n        // This node is greater than our start key, add it to the stack and move to the next one\n        this.nodeStack_.push(node);\n        if (this.isReverse_) {\n          node = node.right;\n        } else {\n          node = node.left;\n        }\n      }\n    }\n  }\n\n  getNext(): T {\n    if (this.nodeStack_.length === 0) {\n      return null;\n    }\n\n    let node = this.nodeStack_.pop();\n    let result: T;\n    if (this.resultGenerator_) {\n      result = this.resultGenerator_(node.key, node.value);\n    } else {\n      result = { key: node.key, value: node.value } as unknown as T;\n    }\n\n    if (this.isReverse_) {\n      node = node.left;\n      while (!node.isEmpty()) {\n        this.nodeStack_.push(node);\n        node = node.right;\n      }\n    } else {\n      node = node.right;\n      while (!node.isEmpty()) {\n        this.nodeStack_.push(node);\n        node = node.left;\n      }\n    }\n\n    return result;\n  }\n\n  hasNext(): boolean {\n    return this.nodeStack_.length > 0;\n  }\n\n  peek(): T {\n    if (this.nodeStack_.length === 0) {\n      return null;\n    }\n\n    const node = this.nodeStack_[this.nodeStack_.length - 1];\n    if (this.resultGenerator_) {\n      return this.resultGenerator_(node.key, node.value);\n    } else {\n      return { key: node.key, value: node.value } as unknown as T;\n    }\n  }\n}\n\n/**\n * Represents a node in a Left-leaning Red-Black tree.\n */\nexport class LLRBNode<K, V> {\n  color: boolean;\n  left: LLRBNode<K, V> | LLRBEmptyNode<K, V>;\n  right: LLRBNode<K, V> | LLRBEmptyNode<K, V>;\n\n  /**\n   * @param key - Key associated with this node.\n   * @param value - Value associated with this node.\n   * @param color - Whether this node is red.\n   * @param left - Left child.\n   * @param right - Right child.\n   */\n  constructor(\n    public key: K,\n    public value: V,\n    color: boolean | null,\n    left?: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null,\n    right?: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null\n  ) {\n    this.color = color != null ? color : LLRBNode.RED;\n    this.left =\n      left != null ? left : (SortedMap.EMPTY_NODE as LLRBEmptyNode<K, V>);\n    this.right =\n      right != null ? right : (SortedMap.EMPTY_NODE as LLRBEmptyNode<K, V>);\n  }\n\n  static RED = true;\n  static BLACK = false;\n\n  /**\n   * Returns a copy of the current node, optionally replacing pieces of it.\n   *\n   * @param key - New key for the node, or null.\n   * @param value - New value for the node, or null.\n   * @param color - New color for the node, or null.\n   * @param left - New left child for the node, or null.\n   * @param right - New right child for the node, or null.\n   * @returns The node copy.\n   */\n  copy(\n    key: K | null,\n    value: V | null,\n    color: boolean | null,\n    left: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null,\n    right: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null\n  ): LLRBNode<K, V> {\n    return new LLRBNode(\n      key != null ? key : this.key,\n      value != null ? value : this.value,\n      color != null ? color : this.color,\n      left != null ? left : this.left,\n      right != null ? right : this.right\n    );\n  }\n\n  /**\n   * @returns The total number of nodes in the tree.\n   */\n  count(): number {\n    return this.left.count() + 1 + this.right.count();\n  }\n\n  /**\n   * @returns True if the tree is empty.\n   */\n  isEmpty(): boolean {\n    return false;\n  }\n\n  /**\n   * Traverses the tree in key order and calls the specified action function\n   * for each node.\n   *\n   * @param action - Callback function to be called for each\n   *   node.  If it returns true, traversal is aborted.\n   * @returns The first truthy value returned by action, or the last falsey\n   *   value returned by action\n   */\n  inorderTraversal(action: (k: K, v: V) => unknown): boolean {\n    return (\n      this.left.inorderTraversal(action) ||\n      !!action(this.key, this.value) ||\n      this.right.inorderTraversal(action)\n    );\n  }\n\n  /**\n   * Traverses the tree in reverse key order and calls the specified action function\n   * for each node.\n   *\n   * @param action - Callback function to be called for each\n   * node.  If it returns true, traversal is aborted.\n   * @returns True if traversal was aborted.\n   */\n  reverseTraversal(action: (k: K, v: V) => void): boolean {\n    return (\n      this.right.reverseTraversal(action) ||\n      action(this.key, this.value) ||\n      this.left.reverseTraversal(action)\n    );\n  }\n\n  /**\n   * @returns The minimum node in the tree.\n   */\n  private min_(): LLRBNode<K, V> {\n    if (this.left.isEmpty()) {\n      return this;\n    } else {\n      return (this.left as LLRBNode<K, V>).min_();\n    }\n  }\n\n  /**\n   * @returns The maximum key in the tree.\n   */\n  minKey(): K {\n    return this.min_().key;\n  }\n\n  /**\n   * @returns The maximum key in the tree.\n   */\n  maxKey(): K {\n    if (this.right.isEmpty()) {\n      return this.key;\n    } else {\n      return this.right.maxKey();\n    }\n  }\n\n  /**\n   * @param key - Key to insert.\n   * @param value - Value to insert.\n   * @param comparator - Comparator.\n   * @returns New tree, with the key/value added.\n   */\n  insert(key: K, value: V, comparator: Comparator<K>): LLRBNode<K, V> {\n    let n: LLRBNode<K, V> = this;\n    const cmp = comparator(key, n.key);\n    if (cmp < 0) {\n      n = n.copy(null, null, null, n.left.insert(key, value, comparator), null);\n    } else if (cmp === 0) {\n      n = n.copy(null, value, null, null, null);\n    } else {\n      n = n.copy(\n        null,\n        null,\n        null,\n        null,\n        n.right.insert(key, value, comparator)\n      );\n    }\n    return n.fixUp_();\n  }\n\n  /**\n   * @returns New tree, with the minimum key removed.\n   */\n  private removeMin_(): LLRBNode<K, V> | LLRBEmptyNode<K, V> {\n    if (this.left.isEmpty()) {\n      return SortedMap.EMPTY_NODE as LLRBEmptyNode<K, V>;\n    }\n    let n: LLRBNode<K, V> = this;\n    if (!n.left.isRed_() && !n.left.left.isRed_()) {\n      n = n.moveRedLeft_();\n    }\n    n = n.copy(null, null, null, (n.left as LLRBNode<K, V>).removeMin_(), null);\n    return n.fixUp_();\n  }\n\n  /**\n   * @param key - The key of the item to remove.\n   * @param comparator - Comparator.\n   * @returns New tree, with the specified item removed.\n   */\n  remove(\n    key: K,\n    comparator: Comparator<K>\n  ): LLRBNode<K, V> | LLRBEmptyNode<K, V> {\n    let n, smallest;\n    n = this;\n    if (comparator(key, n.key) < 0) {\n      if (!n.left.isEmpty() && !n.left.isRed_() && !n.left.left.isRed_()) {\n        n = n.moveRedLeft_();\n      }\n      n = n.copy(null, null, null, n.left.remove(key, comparator), null);\n    } else {\n      if (n.left.isRed_()) {\n        n = n.rotateRight_();\n      }\n      if (!n.right.isEmpty() && !n.right.isRed_() && !n.right.left.isRed_()) {\n        n = n.moveRedRight_();\n      }\n      if (comparator(key, n.key) === 0) {\n        if (n.right.isEmpty()) {\n          return SortedMap.EMPTY_NODE as LLRBEmptyNode<K, V>;\n        } else {\n          smallest = (n.right as LLRBNode<K, V>).min_();\n          n = n.copy(\n            smallest.key,\n            smallest.value,\n            null,\n            null,\n            (n.right as LLRBNode<K, V>).removeMin_()\n          );\n        }\n      }\n      n = n.copy(null, null, null, null, n.right.remove(key, comparator));\n    }\n    return n.fixUp_();\n  }\n\n  /**\n   * @returns Whether this is a RED node.\n   */\n  isRed_(): boolean {\n    return this.color;\n  }\n\n  /**\n   * @returns New tree after performing any needed rotations.\n   */\n  private fixUp_(): LLRBNode<K, V> {\n    let n: LLRBNode<K, V> = this;\n    if (n.right.isRed_() && !n.left.isRed_()) {\n      n = n.rotateLeft_();\n    }\n    if (n.left.isRed_() && n.left.left.isRed_()) {\n      n = n.rotateRight_();\n    }\n    if (n.left.isRed_() && n.right.isRed_()) {\n      n = n.colorFlip_();\n    }\n    return n;\n  }\n\n  /**\n   * @returns New tree, after moveRedLeft.\n   */\n  private moveRedLeft_(): LLRBNode<K, V> {\n    let n = this.colorFlip_();\n    if (n.right.left.isRed_()) {\n      n = n.copy(\n        null,\n        null,\n        null,\n        null,\n        (n.right as LLRBNode<K, V>).rotateRight_()\n      );\n      n = n.rotateLeft_();\n      n = n.colorFlip_();\n    }\n    return n;\n  }\n\n  /**\n   * @returns New tree, after moveRedRight.\n   */\n  private moveRedRight_(): LLRBNode<K, V> {\n    let n = this.colorFlip_();\n    if (n.left.left.isRed_()) {\n      n = n.rotateRight_();\n      n = n.colorFlip_();\n    }\n    return n;\n  }\n\n  /**\n   * @returns New tree, after rotateLeft.\n   */\n  private rotateLeft_(): LLRBNode<K, V> {\n    const nl = this.copy(null, null, LLRBNode.RED, null, this.right.left);\n    return this.right.copy(null, null, this.color, nl, null) as LLRBNode<K, V>;\n  }\n\n  /**\n   * @returns New tree, after rotateRight.\n   */\n  private rotateRight_(): LLRBNode<K, V> {\n    const nr = this.copy(null, null, LLRBNode.RED, this.left.right, null);\n    return this.left.copy(null, null, this.color, null, nr) as LLRBNode<K, V>;\n  }\n\n  /**\n   * @returns Newt ree, after colorFlip.\n   */\n  private colorFlip_(): LLRBNode<K, V> {\n    const left = this.left.copy(null, null, !this.left.color, null, null);\n    const right = this.right.copy(null, null, !this.right.color, null, null);\n    return this.copy(null, null, !this.color, left, right);\n  }\n\n  /**\n   * For testing.\n   *\n   * @returns True if all is well.\n   */\n  private checkMaxDepth_(): boolean {\n    const blackDepth = this.check_();\n    return Math.pow(2.0, blackDepth) <= this.count() + 1;\n  }\n\n  check_(): number {\n    if (this.isRed_() && this.left.isRed_()) {\n      throw new Error(\n        'Red node has red child(' + this.key + ',' + this.value + ')'\n      );\n    }\n    if (this.right.isRed_()) {\n      throw new Error(\n        'Right child of (' + this.key + ',' + this.value + ') is red'\n      );\n    }\n    const blackDepth = this.left.check_();\n    if (blackDepth !== this.right.check_()) {\n      throw new Error('Black depths differ');\n    } else {\n      return blackDepth + (this.isRed_() ? 0 : 1);\n    }\n  }\n}\n\n/**\n * Represents an empty node (a leaf node in the Red-Black Tree).\n */\nexport class LLRBEmptyNode<K, V> {\n  key: K;\n  value: V;\n  left: LLRBNode<K, V> | LLRBEmptyNode<K, V>;\n  right: LLRBNode<K, V> | LLRBEmptyNode<K, V>;\n  color: boolean;\n\n  /**\n   * Returns a copy of the current node.\n   *\n   * @returns The node copy.\n   */\n  copy(\n    key: K | null,\n    value: V | null,\n    color: boolean | null,\n    left: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null,\n    right: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null\n  ): LLRBEmptyNode<K, V> {\n    return this;\n  }\n\n  /**\n   * Returns a copy of the tree, with the specified key/value added.\n   *\n   * @param key - Key to be added.\n   * @param value - Value to be added.\n   * @param comparator - Comparator.\n   * @returns New tree, with item added.\n   */\n  insert(key: K, value: V, comparator: Comparator<K>): LLRBNode<K, V> {\n    return new LLRBNode(key, value, null);\n  }\n\n  /**\n   * Returns a copy of the tree, with the specified key removed.\n   *\n   * @param key - The key to remove.\n   * @param comparator - Comparator.\n   * @returns New tree, with item removed.\n   */\n  remove(key: K, comparator: Comparator<K>): LLRBEmptyNode<K, V> {\n    return this;\n  }\n\n  /**\n   * @returns The total number of nodes in the tree.\n   */\n  count(): number {\n    return 0;\n  }\n\n  /**\n   * @returns True if the tree is empty.\n   */\n  isEmpty(): boolean {\n    return true;\n  }\n\n  /**\n   * Traverses the tree in key order and calls the specified action function\n   * for each node.\n   *\n   * @param action - Callback function to be called for each\n   * node.  If it returns true, traversal is aborted.\n   * @returns True if traversal was aborted.\n   */\n  inorderTraversal(action: (k: K, v: V) => unknown): boolean {\n    return false;\n  }\n\n  /**\n   * Traverses the tree in reverse key order and calls the specified action function\n   * for each node.\n   *\n   * @param action - Callback function to be called for each\n   * node.  If it returns true, traversal is aborted.\n   * @returns True if traversal was aborted.\n   */\n  reverseTraversal(action: (k: K, v: V) => void): boolean {\n    return false;\n  }\n\n  minKey(): null {\n    return null;\n  }\n\n  maxKey(): null {\n    return null;\n  }\n\n  check_(): number {\n    return 0;\n  }\n\n  /**\n   * @returns Whether this node is red.\n   */\n  isRed_() {\n    return false;\n  }\n}\n\n/**\n * An immutable sorted map implementation, based on a Left-leaning Red-Black\n * tree.\n */\nexport class SortedMap<K, V> {\n  /**\n   * Always use the same empty node, to reduce memory.\n   */\n  static EMPTY_NODE = new LLRBEmptyNode();\n\n  /**\n   * @param comparator_ - Key comparator.\n   * @param root_ - Optional root node for the map.\n   */\n  constructor(\n    private comparator_: Comparator<K>,\n    private root_:\n      | LLRBNode<K, V>\n      | LLRBEmptyNode<K, V> = SortedMap.EMPTY_NODE as LLRBEmptyNode<K, V>\n  ) {}\n\n  /**\n   * Returns a copy of the map, with the specified key/value added or replaced.\n   * (TODO: We should perhaps rename this method to 'put')\n   *\n   * @param key - Key to be added.\n   * @param value - Value to be added.\n   * @returns New map, with item added.\n   */\n  insert(key: K, value: V): SortedMap<K, V> {\n    return new SortedMap(\n      this.comparator_,\n      this.root_\n        .insert(key, value, this.comparator_)\n        .copy(null, null, LLRBNode.BLACK, null, null)\n    );\n  }\n\n  /**\n   * Returns a copy of the map, with the specified key removed.\n   *\n   * @param key - The key to remove.\n   * @returns New map, with item removed.\n   */\n  remove(key: K): SortedMap<K, V> {\n    return new SortedMap(\n      this.comparator_,\n      this.root_\n        .remove(key, this.comparator_)\n        .copy(null, null, LLRBNode.BLACK, null, null)\n    );\n  }\n\n  /**\n   * Returns the value of the node with the given key, or null.\n   *\n   * @param key - The key to look up.\n   * @returns The value of the node with the given key, or null if the\n   * key doesn't exist.\n   */\n  get(key: K): V | null {\n    let cmp;\n    let node = this.root_;\n    while (!node.isEmpty()) {\n      cmp = this.comparator_(key, node.key);\n      if (cmp === 0) {\n        return node.value;\n      } else if (cmp < 0) {\n        node = node.left;\n      } else if (cmp > 0) {\n        node = node.right;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * Returns the key of the item *before* the specified key, or null if key is the first item.\n   * @param key - The key to find the predecessor of\n   * @returns The predecessor key.\n   */\n  getPredecessorKey(key: K): K | null {\n    let cmp,\n      node = this.root_,\n      rightParent = null;\n    while (!node.isEmpty()) {\n      cmp = this.comparator_(key, node.key);\n      if (cmp === 0) {\n        if (!node.left.isEmpty()) {\n          node = node.left;\n          while (!node.right.isEmpty()) {\n            node = node.right;\n          }\n          return node.key;\n        } else if (rightParent) {\n          return rightParent.key;\n        } else {\n          return null; // first item.\n        }\n      } else if (cmp < 0) {\n        node = node.left;\n      } else if (cmp > 0) {\n        rightParent = node;\n        node = node.right;\n      }\n    }\n\n    throw new Error(\n      'Attempted to find predecessor key for a nonexistent key.  What gives?'\n    );\n  }\n\n  /**\n   * @returns True if the map is empty.\n   */\n  isEmpty(): boolean {\n    return this.root_.isEmpty();\n  }\n\n  /**\n   * @returns The total number of nodes in the map.\n   */\n  count(): number {\n    return this.root_.count();\n  }\n\n  /**\n   * @returns The minimum key in the map.\n   */\n  minKey(): K | null {\n    return this.root_.minKey();\n  }\n\n  /**\n   * @returns The maximum key in the map.\n   */\n  maxKey(): K | null {\n    return this.root_.maxKey();\n  }\n\n  /**\n   * Traverses the map in key order and calls the specified action function\n   * for each key/value pair.\n   *\n   * @param action - Callback function to be called\n   * for each key/value pair.  If action returns true, traversal is aborted.\n   * @returns The first truthy value returned by action, or the last falsey\n   *   value returned by action\n   */\n  inorderTraversal(action: (k: K, v: V) => unknown): boolean {\n    return this.root_.inorderTraversal(action);\n  }\n\n  /**\n   * Traverses the map in reverse key order and calls the specified action function\n   * for each key/value pair.\n   *\n   * @param action - Callback function to be called\n   * for each key/value pair.  If action returns true, traversal is aborted.\n   * @returns True if the traversal was aborted.\n   */\n  reverseTraversal(action: (k: K, v: V) => void): boolean {\n    return this.root_.reverseTraversal(action);\n  }\n\n  /**\n   * Returns an iterator over the SortedMap.\n   * @returns The iterator.\n   */\n  getIterator<T>(\n    resultGenerator?: (k: K, v: V) => T\n  ): SortedMapIterator<K, V, T> {\n    return new SortedMapIterator(\n      this.root_,\n      null,\n      this.comparator_,\n      false,\n      resultGenerator\n    );\n  }\n\n  getIteratorFrom<T>(\n    key: K,\n    resultGenerator?: (k: K, v: V) => T\n  ): SortedMapIterator<K, V, T> {\n    return new SortedMapIterator(\n      this.root_,\n      key,\n      this.comparator_,\n      false,\n      resultGenerator\n    );\n  }\n\n  getReverseIteratorFrom<T>(\n    key: K,\n    resultGenerator?: (k: K, v: V) => T\n  ): SortedMapIterator<K, V, T> {\n    return new SortedMapIterator(\n      this.root_,\n      key,\n      this.comparator_,\n      true,\n      resultGenerator\n    );\n  }\n\n  getReverseIterator<T>(\n    resultGenerator?: (k: K, v: V) => T\n  ): SortedMapIterator<K, V, T> {\n    return new SortedMapIterator(\n      this.root_,\n      null,\n      this.comparator_,\n      true,\n      resultGenerator\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { nameCompare } from '../util/util';\n\nimport { NamedNode } from './Node';\n\nexport function NAME_ONLY_COMPARATOR(left: NamedNode, right: NamedNode) {\n  return nameCompare(left.name, right.name);\n}\n\nexport function NAME_COMPARATOR(left: string, right: string) {\n  return nameCompare(left, right);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, contains } from '@firebase/util';\n\nimport { Indexable } from '../util/misc';\nimport { doubleToIEEE754String } from '../util/util';\n\nimport { Node } from './Node';\n\nlet MAX_NODE: Node;\n\nexport function setMaxNode(val: Node) {\n  MAX_NODE = val;\n}\n\nexport const priorityHashText = function (priority: string | number): string {\n  if (typeof priority === 'number') {\n    return 'number:' + doubleToIEEE754String(priority);\n  } else {\n    return 'string:' + priority;\n  }\n};\n\n/**\n * Validates that a priority snapshot Node is valid.\n */\nexport const validatePriorityNode = function (priorityNode: Node) {\n  if (priorityNode.isLeafNode()) {\n    const val = priorityNode.val();\n    assert(\n      typeof val === 'string' ||\n        typeof val === 'number' ||\n        (typeof val === 'object' && contains(val as Indexable, '.sv')),\n      'Priority must be a string or number.'\n    );\n  } else {\n    assert(\n      priorityNode === MAX_NODE || priorityNode.isEmpty(),\n      'priority of unexpected type.'\n    );\n  }\n  // Don't call getPriority() on MAX_NODE to avoid hitting assertion.\n  assert(\n    priorityNode === MAX_NODE || priorityNode.getPriority().isEmpty(),\n    \"Priority nodes can't have a priority of their own.\"\n  );\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { Indexable } from '../util/misc';\nimport {\n  Path,\n  pathGetFront,\n  pathGetLength,\n  pathIsEmpty,\n  pathPopFront\n} from '../util/Path';\nimport { doubleToIEEE754String, sha1 } from '../util/util';\n\nimport { ChildrenNodeConstructor } from './ChildrenNode';\nimport { Index } from './indexes/Index';\nimport { Node } from './Node';\nimport { priorityHashText, validatePriorityNode } from './snap';\n\nlet __childrenNodeConstructor: ChildrenNodeConstructor;\n\n/**\n * LeafNode is a class for storing leaf nodes in a DataSnapshot.  It\n * implements Node and stores the value of the node (a string,\n * number, or boolean) accessible via getValue().\n */\nexport class LeafNode implements Node {\n  static set __childrenNodeConstructor(val: ChildrenNodeConstructor) {\n    __childrenNodeConstructor = val;\n  }\n\n  static get __childrenNodeConstructor() {\n    return __childrenNodeConstructor;\n  }\n\n  /**\n   * The sort order for comparing leaf nodes of different types. If two leaf nodes have\n   * the same type, the comparison falls back to their value\n   */\n  static VALUE_TYPE_ORDER = ['object', 'boolean', 'number', 'string'];\n\n  private lazyHash_: string | null = null;\n\n  /**\n   * @param value_ - The value to store in this leaf node. The object type is\n   * possible in the event of a deferred value\n   * @param priorityNode_ - The priority of this node.\n   */\n  constructor(\n    private readonly value_: string | number | boolean | Indexable,\n    private priorityNode_: Node = LeafNode.__childrenNodeConstructor.EMPTY_NODE\n  ) {\n    assert(\n      this.value_ !== undefined && this.value_ !== null,\n      \"LeafNode shouldn't be created with null/undefined value.\"\n    );\n\n    validatePriorityNode(this.priorityNode_);\n  }\n\n  /** @inheritDoc */\n  isLeafNode(): boolean {\n    return true;\n  }\n\n  /** @inheritDoc */\n  getPriority(): Node {\n    return this.priorityNode_;\n  }\n\n  /** @inheritDoc */\n  updatePriority(newPriorityNode: Node): Node {\n    return new LeafNode(this.value_, newPriorityNode);\n  }\n\n  /** @inheritDoc */\n  getImmediateChild(childName: string): Node {\n    // Hack to treat priority as a regular child\n    if (childName === '.priority') {\n      return this.priorityNode_;\n    } else {\n      return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\n    }\n  }\n\n  /** @inheritDoc */\n  getChild(path: Path): Node {\n    if (pathIsEmpty(path)) {\n      return this;\n    } else if (pathGetFront(path) === '.priority') {\n      return this.priorityNode_;\n    } else {\n      return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\n    }\n  }\n  hasChild(): boolean {\n    return false;\n  }\n\n  /** @inheritDoc */\n  getPredecessorChildName(childName: string, childNode: Node): null {\n    return null;\n  }\n\n  /** @inheritDoc */\n  updateImmediateChild(childName: string, newChildNode: Node): Node {\n    if (childName === '.priority') {\n      return this.updatePriority(newChildNode);\n    } else if (newChildNode.isEmpty() && childName !== '.priority') {\n      return this;\n    } else {\n      return LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateImmediateChild(\n        childName,\n        newChildNode\n      ).updatePriority(this.priorityNode_);\n    }\n  }\n\n  /** @inheritDoc */\n  updateChild(path: Path, newChildNode: Node): Node {\n    const front = pathGetFront(path);\n    if (front === null) {\n      return newChildNode;\n    } else if (newChildNode.isEmpty() && front !== '.priority') {\n      return this;\n    } else {\n      assert(\n        front !== '.priority' || pathGetLength(path) === 1,\n        '.priority must be the last token in a path'\n      );\n\n      return this.updateImmediateChild(\n        front,\n        LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateChild(\n          pathPopFront(path),\n          newChildNode\n        )\n      );\n    }\n  }\n\n  /** @inheritDoc */\n  isEmpty(): boolean {\n    return false;\n  }\n\n  /** @inheritDoc */\n  numChildren(): number {\n    return 0;\n  }\n\n  /** @inheritDoc */\n  forEachChild(index: Index, action: (s: string, n: Node) => void): boolean {\n    return false;\n  }\n  val(exportFormat?: boolean): {} {\n    if (exportFormat && !this.getPriority().isEmpty()) {\n      return {\n        '.value': this.getValue(),\n        '.priority': this.getPriority().val()\n      };\n    } else {\n      return this.getValue();\n    }\n  }\n\n  /** @inheritDoc */\n  hash(): string {\n    if (this.lazyHash_ === null) {\n      let toHash = '';\n      if (!this.priorityNode_.isEmpty()) {\n        toHash +=\n          'priority:' +\n          priorityHashText(this.priorityNode_.val() as number | string) +\n          ':';\n      }\n\n      const type = typeof this.value_;\n      toHash += type + ':';\n      if (type === 'number') {\n        toHash += doubleToIEEE754String(this.value_ as number);\n      } else {\n        toHash += this.value_;\n      }\n      this.lazyHash_ = sha1(toHash);\n    }\n    return this.lazyHash_;\n  }\n\n  /**\n   * Returns the value of the leaf node.\n   * @returns The value of the node.\n   */\n  getValue(): Indexable | string | number | boolean {\n    return this.value_;\n  }\n  compareTo(other: Node): number {\n    if (other === LeafNode.__childrenNodeConstructor.EMPTY_NODE) {\n      return 1;\n    } else if (other instanceof LeafNode.__childrenNodeConstructor) {\n      return -1;\n    } else {\n      assert(other.isLeafNode(), 'Unknown node type');\n      return this.compareToLeafNode_(other as LeafNode);\n    }\n  }\n\n  /**\n   * Comparison specifically for two leaf nodes\n   */\n  private compareToLeafNode_(otherLeaf: LeafNode): number {\n    const otherLeafType = typeof otherLeaf.value_;\n    const thisLeafType = typeof this.value_;\n    const otherIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(otherLeafType);\n    const thisIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(thisLeafType);\n    assert(otherIndex >= 0, 'Unknown leaf type: ' + otherLeafType);\n    assert(thisIndex >= 0, 'Unknown leaf type: ' + thisLeafType);\n    if (otherIndex === thisIndex) {\n      // Same type, compare values\n      if (thisLeafType === 'object') {\n        // Deferred value nodes are all equal, but we should also never get to this point...\n        return 0;\n      } else {\n        // Note that this works because true > false, all others are number or string comparisons\n        if (this.value_ < otherLeaf.value_) {\n          return -1;\n        } else if (this.value_ === otherLeaf.value_) {\n          return 0;\n        } else {\n          return 1;\n        }\n      }\n    } else {\n      return thisIndex - otherIndex;\n    }\n  }\n  withIndex(): Node {\n    return this;\n  }\n  isIndexed(): boolean {\n    return true;\n  }\n  equals(other: Node): boolean {\n    if (other === this) {\n      return true;\n    } else if (other.isLeafNode()) {\n      const otherLeaf = other as LeafNode;\n      return (\n        this.value_ === otherLeaf.value_ &&\n        this.priorityNode_.equals(otherLeaf.priorityNode_)\n      );\n    } else {\n      return false;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { nameCompare, MAX_NAME } from '../../util/util';\nimport { LeafNode } from '../LeafNode';\nimport { NamedNode, Node } from '../Node';\n\nimport { Index } from './Index';\n\nlet nodeFromJSON: (a: unknown) => Node;\nlet MAX_NODE: Node;\n\nexport function setNodeFromJSON(val: (a: unknown) => Node) {\n  nodeFromJSON = val;\n}\n\nexport function setMaxNode(val: Node) {\n  MAX_NODE = val;\n}\n\nexport class PriorityIndex extends Index {\n  compare(a: NamedNode, b: NamedNode): number {\n    const aPriority = a.node.getPriority();\n    const bPriority = b.node.getPriority();\n    const indexCmp = aPriority.compareTo(bPriority);\n    if (indexCmp === 0) {\n      return nameCompare(a.name, b.name);\n    } else {\n      return indexCmp;\n    }\n  }\n  isDefinedOn(node: Node): boolean {\n    return !node.getPriority().isEmpty();\n  }\n  indexedValueChanged(oldNode: Node, newNode: Node): boolean {\n    return !oldNode.getPriority().equals(newNode.getPriority());\n  }\n  minPost(): NamedNode {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (NamedNode as any).MIN;\n  }\n  maxPost(): NamedNode {\n    return new NamedNode(MAX_NAME, new LeafNode('[PRIORITY-POST]', MAX_NODE));\n  }\n\n  makePost(indexValue: unknown, name: string): NamedNode {\n    const priorityNode = nodeFromJSON(indexValue);\n    return new NamedNode(name, new LeafNode('[PRIORITY-POST]', priorityNode));\n  }\n\n  /**\n   * @returns String representation for inclusion in a query spec\n   */\n  toString(): string {\n    return '.priority';\n  }\n}\n\nexport const PRIORITY_INDEX = new PriorityIndex();\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { LLRBNode, SortedMap } from '../util/SortedMap';\n\nimport { NamedNode } from './Node';\n\nconst LOG_2 = Math.log(2);\n\nclass Base12Num {\n  count: number;\n  private current_: number;\n  private bits_: number;\n\n  constructor(length: number) {\n    const logBase2 = (num: number) =>\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      parseInt((Math.log(num) / LOG_2) as any, 10);\n    const bitMask = (bits: number) => parseInt(Array(bits + 1).join('1'), 2);\n    this.count = logBase2(length + 1);\n    this.current_ = this.count - 1;\n    const mask = bitMask(this.count);\n    this.bits_ = (length + 1) & mask;\n  }\n\n  nextBitIsOne(): boolean {\n    //noinspection JSBitwiseOperatorUsage\n    const result = !(this.bits_ & (0x1 << this.current_));\n    this.current_--;\n    return result;\n  }\n}\n\n/**\n * Takes a list of child nodes and constructs a SortedSet using the given comparison\n * function\n *\n * Uses the algorithm described in the paper linked here:\n * http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.46.1458\n *\n * @param childList - Unsorted list of children\n * @param cmp - The comparison method to be used\n * @param keyFn - An optional function to extract K from a node wrapper, if K's\n * type is not NamedNode\n * @param mapSortFn - An optional override for comparator used by the generated sorted map\n */\nexport const buildChildSet = function <K, V>(\n  childList: NamedNode[],\n  cmp: (a: NamedNode, b: NamedNode) => number,\n  keyFn?: (a: NamedNode) => K,\n  mapSortFn?: (a: K, b: K) => number\n): SortedMap<K, V> {\n  childList.sort(cmp);\n\n  const buildBalancedTree = function (\n    low: number,\n    high: number\n  ): LLRBNode<K, V> | null {\n    const length = high - low;\n    let namedNode: NamedNode;\n    let key: K;\n    if (length === 0) {\n      return null;\n    } else if (length === 1) {\n      namedNode = childList[low];\n      key = keyFn ? keyFn(namedNode) : (namedNode as unknown as K);\n      return new LLRBNode(\n        key,\n        namedNode.node as unknown as V,\n        LLRBNode.BLACK,\n        null,\n        null\n      );\n    } else {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const middle = parseInt((length / 2) as any, 10) + low;\n      const left = buildBalancedTree(low, middle);\n      const right = buildBalancedTree(middle + 1, high);\n      namedNode = childList[middle];\n      key = keyFn ? keyFn(namedNode) : (namedNode as unknown as K);\n      return new LLRBNode(\n        key,\n        namedNode.node as unknown as V,\n        LLRBNode.BLACK,\n        left,\n        right\n      );\n    }\n  };\n\n  const buildFrom12Array = function (base12: Base12Num): LLRBNode<K, V> {\n    let node: LLRBNode<K, V> = null;\n    let root = null;\n    let index = childList.length;\n\n    const buildPennant = function (chunkSize: number, color: boolean) {\n      const low = index - chunkSize;\n      const high = index;\n      index -= chunkSize;\n      const childTree = buildBalancedTree(low + 1, high);\n      const namedNode = childList[low];\n      const key: K = keyFn ? keyFn(namedNode) : (namedNode as unknown as K);\n      attachPennant(\n        new LLRBNode(\n          key,\n          namedNode.node as unknown as V,\n          color,\n          null,\n          childTree\n        )\n      );\n    };\n\n    const attachPennant = function (pennant: LLRBNode<K, V>) {\n      if (node) {\n        node.left = pennant;\n        node = pennant;\n      } else {\n        root = pennant;\n        node = pennant;\n      }\n    };\n\n    for (let i = 0; i < base12.count; ++i) {\n      const isOne = base12.nextBitIsOne();\n      // The number of nodes taken in each slice is 2^(arr.length - (i + 1))\n      const chunkSize = Math.pow(2, base12.count - (i + 1));\n      if (isOne) {\n        buildPennant(chunkSize, LLRBNode.BLACK);\n      } else {\n        // current == 2\n        buildPennant(chunkSize, LLRBNode.BLACK);\n        buildPennant(chunkSize, LLRBNode.RED);\n      }\n    }\n    return root;\n  };\n\n  const base12 = new Base12Num(childList.length);\n  const root = buildFrom12Array(base12);\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return new SortedMap<K, V>(mapSortFn || (cmp as any), root);\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, contains, map, safeGet } from '@firebase/util';\n\nimport { SortedMap } from '../util/SortedMap';\n\nimport { buildChildSet } from './childSet';\nimport { Index } from './indexes/Index';\nimport { KEY_INDEX } from './indexes/KeyIndex';\nimport { PRIORITY_INDEX } from './indexes/PriorityIndex';\nimport { NamedNode, Node } from './Node';\n\nlet _defaultIndexMap: IndexMap;\n\nconst fallbackObject = {};\n\nexport class IndexMap {\n  /**\n   * The default IndexMap for nodes without a priority\n   */\n  static get Default(): IndexMap {\n    assert(\n      fallbackObject && PRIORITY_INDEX,\n      'ChildrenNode.ts has not been loaded'\n    );\n    _defaultIndexMap =\n      _defaultIndexMap ||\n      new IndexMap(\n        { '.priority': fallbackObject },\n        { '.priority': PRIORITY_INDEX }\n      );\n    return _defaultIndexMap;\n  }\n\n  constructor(\n    private indexes_: {\n      [k: string]: SortedMap<NamedNode, Node> | /*FallbackType*/ object;\n    },\n    private indexSet_: { [k: string]: Index }\n  ) {}\n\n  get(indexKey: string): SortedMap<NamedNode, Node> | null {\n    const sortedMap = safeGet(this.indexes_, indexKey);\n    if (!sortedMap) {\n      throw new Error('No index defined for ' + indexKey);\n    }\n\n    if (sortedMap instanceof SortedMap) {\n      return sortedMap;\n    } else {\n      // The index exists, but it falls back to just name comparison. Return null so that the calling code uses the\n      // regular child map\n      return null;\n    }\n  }\n\n  hasIndex(indexDefinition: Index): boolean {\n    return contains(this.indexSet_, indexDefinition.toString());\n  }\n\n  addIndex(\n    indexDefinition: Index,\n    existingChildren: SortedMap<string, Node>\n  ): IndexMap {\n    assert(\n      indexDefinition !== KEY_INDEX,\n      \"KeyIndex always exists and isn't meant to be added to the IndexMap.\"\n    );\n    const childList = [];\n    let sawIndexedValue = false;\n    const iter = existingChildren.getIterator(NamedNode.Wrap);\n    let next = iter.getNext();\n    while (next) {\n      sawIndexedValue =\n        sawIndexedValue || indexDefinition.isDefinedOn(next.node);\n      childList.push(next);\n      next = iter.getNext();\n    }\n    let newIndex;\n    if (sawIndexedValue) {\n      newIndex = buildChildSet(childList, indexDefinition.getCompare());\n    } else {\n      newIndex = fallbackObject;\n    }\n    const indexName = indexDefinition.toString();\n    const newIndexSet = { ...this.indexSet_ };\n    newIndexSet[indexName] = indexDefinition;\n    const newIndexes = { ...this.indexes_ };\n    newIndexes[indexName] = newIndex;\n    return new IndexMap(newIndexes, newIndexSet);\n  }\n\n  /**\n   * Ensure that this node is properly tracked in any indexes that we're maintaining\n   */\n  addToIndexes(\n    namedNode: NamedNode,\n    existingChildren: SortedMap<string, Node>\n  ): IndexMap {\n    const newIndexes = map(\n      this.indexes_,\n      (indexedChildren: SortedMap<NamedNode, Node>, indexName: string) => {\n        const index = safeGet(this.indexSet_, indexName);\n        assert(index, 'Missing index implementation for ' + indexName);\n        if (indexedChildren === fallbackObject) {\n          // Check to see if we need to index everything\n          if (index.isDefinedOn(namedNode.node)) {\n            // We need to build this index\n            const childList = [];\n            const iter = existingChildren.getIterator(NamedNode.Wrap);\n            let next = iter.getNext();\n            while (next) {\n              if (next.name !== namedNode.name) {\n                childList.push(next);\n              }\n              next = iter.getNext();\n            }\n            childList.push(namedNode);\n            return buildChildSet(childList, index.getCompare());\n          } else {\n            // No change, this remains a fallback\n            return fallbackObject;\n          }\n        } else {\n          const existingSnap = existingChildren.get(namedNode.name);\n          let newChildren = indexedChildren;\n          if (existingSnap) {\n            newChildren = newChildren.remove(\n              new NamedNode(namedNode.name, existingSnap)\n            );\n          }\n          return newChildren.insert(namedNode, namedNode.node);\n        }\n      }\n    );\n    return new IndexMap(newIndexes, this.indexSet_);\n  }\n\n  /**\n   * Create a new IndexMap instance with the given value removed\n   */\n  removeFromIndexes(\n    namedNode: NamedNode,\n    existingChildren: SortedMap<string, Node>\n  ): IndexMap {\n    const newIndexes = map(\n      this.indexes_,\n      (indexedChildren: SortedMap<NamedNode, Node>) => {\n        if (indexedChildren === fallbackObject) {\n          // This is the fallback. Just return it, nothing to do in this case\n          return indexedChildren;\n        } else {\n          const existingSnap = existingChildren.get(namedNode.name);\n          if (existingSnap) {\n            return indexedChildren.remove(\n              new NamedNode(namedNode.name, existingSnap)\n            );\n          } else {\n            // No record of this child\n            return indexedChildren;\n          }\n        }\n      }\n    );\n    return new IndexMap(newIndexes, this.indexSet_);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { Path, pathGetFront, pathGetLength, pathPopFront } from '../util/Path';\nimport { SortedMap, SortedMapIterator } from '../util/SortedMap';\nimport { MAX_NAME, MIN_NAME, sha1 } from '../util/util';\n\nimport { NAME_COMPARATOR } from './comparators';\nimport { Index } from './indexes/Index';\nimport { KEY_INDEX, KeyIndex } from './indexes/KeyIndex';\nimport {\n  PRIORITY_INDEX,\n  setMaxNode as setPriorityMaxNode\n} from './indexes/PriorityIndex';\nimport { IndexMap } from './IndexMap';\nimport { LeafNode } from './LeafNode';\nimport { NamedNode, Node } from './Node';\nimport { priorityHashText, setMaxNode, validatePriorityNode } from './snap';\n\nexport interface ChildrenNodeConstructor {\n  new (\n    children_: SortedMap<string, Node>,\n    priorityNode_: Node | null,\n    indexMap_: IndexMap\n  ): ChildrenNode;\n  EMPTY_NODE: ChildrenNode;\n}\n\n// TODO: For memory savings, don't store priorityNode_ if it's empty.\n\nlet EMPTY_NODE: ChildrenNode;\n\n/**\n * ChildrenNode is a class for storing internal nodes in a DataSnapshot\n * (i.e. nodes with children).  It implements Node and stores the\n * list of children in the children property, sorted by child name.\n */\nexport class ChildrenNode implements Node {\n  private lazyHash_: string | null = null;\n\n  static get EMPTY_NODE(): ChildrenNode {\n    return (\n      EMPTY_NODE ||\n      (EMPTY_NODE = new ChildrenNode(\n        new SortedMap<string, Node>(NAME_COMPARATOR),\n        null,\n        IndexMap.Default\n      ))\n    );\n  }\n\n  /**\n   * @param children_ - List of children of this node..\n   * @param priorityNode_ - The priority of this node (as a snapshot node).\n   */\n  constructor(\n    private readonly children_: SortedMap<string, Node>,\n    private readonly priorityNode_: Node | null,\n    private indexMap_: IndexMap\n  ) {\n    /**\n     * Note: The only reason we allow null priority is for EMPTY_NODE, since we can't use\n     * EMPTY_NODE as the priority of EMPTY_NODE.  We might want to consider making EMPTY_NODE its own\n     * class instead of an empty ChildrenNode.\n     */\n    if (this.priorityNode_) {\n      validatePriorityNode(this.priorityNode_);\n    }\n\n    if (this.children_.isEmpty()) {\n      assert(\n        !this.priorityNode_ || this.priorityNode_.isEmpty(),\n        'An empty node cannot have a priority'\n      );\n    }\n  }\n\n  /** @inheritDoc */\n  isLeafNode(): boolean {\n    return false;\n  }\n\n  /** @inheritDoc */\n  getPriority(): Node {\n    return this.priorityNode_ || EMPTY_NODE;\n  }\n\n  /** @inheritDoc */\n  updatePriority(newPriorityNode: Node): Node {\n    if (this.children_.isEmpty()) {\n      // Don't allow priorities on empty nodes\n      return this;\n    } else {\n      return new ChildrenNode(this.children_, newPriorityNode, this.indexMap_);\n    }\n  }\n\n  /** @inheritDoc */\n  getImmediateChild(childName: string): Node {\n    // Hack to treat priority as a regular child\n    if (childName === '.priority') {\n      return this.getPriority();\n    } else {\n      const child = this.children_.get(childName);\n      return child === null ? EMPTY_NODE : child;\n    }\n  }\n\n  /** @inheritDoc */\n  getChild(path: Path): Node {\n    const front = pathGetFront(path);\n    if (front === null) {\n      return this;\n    }\n\n    return this.getImmediateChild(front).getChild(pathPopFront(path));\n  }\n\n  /** @inheritDoc */\n  hasChild(childName: string): boolean {\n    return this.children_.get(childName) !== null;\n  }\n\n  /** @inheritDoc */\n  updateImmediateChild(childName: string, newChildNode: Node): Node {\n    assert(newChildNode, 'We should always be passing snapshot nodes');\n    if (childName === '.priority') {\n      return this.updatePriority(newChildNode);\n    } else {\n      const namedNode = new NamedNode(childName, newChildNode);\n      let newChildren, newIndexMap;\n      if (newChildNode.isEmpty()) {\n        newChildren = this.children_.remove(childName);\n        newIndexMap = this.indexMap_.removeFromIndexes(\n          namedNode,\n          this.children_\n        );\n      } else {\n        newChildren = this.children_.insert(childName, newChildNode);\n        newIndexMap = this.indexMap_.addToIndexes(namedNode, this.children_);\n      }\n\n      const newPriority = newChildren.isEmpty()\n        ? EMPTY_NODE\n        : this.priorityNode_;\n      return new ChildrenNode(newChildren, newPriority, newIndexMap);\n    }\n  }\n\n  /** @inheritDoc */\n  updateChild(path: Path, newChildNode: Node): Node {\n    const front = pathGetFront(path);\n    if (front === null) {\n      return newChildNode;\n    } else {\n      assert(\n        pathGetFront(path) !== '.priority' || pathGetLength(path) === 1,\n        '.priority must be the last token in a path'\n      );\n      const newImmediateChild = this.getImmediateChild(front).updateChild(\n        pathPopFront(path),\n        newChildNode\n      );\n      return this.updateImmediateChild(front, newImmediateChild);\n    }\n  }\n\n  /** @inheritDoc */\n  isEmpty(): boolean {\n    return this.children_.isEmpty();\n  }\n\n  /** @inheritDoc */\n  numChildren(): number {\n    return this.children_.count();\n  }\n\n  private static INTEGER_REGEXP_ = /^(0|[1-9]\\d*)$/;\n\n  /** @inheritDoc */\n  val(exportFormat?: boolean): object {\n    if (this.isEmpty()) {\n      return null;\n    }\n\n    const obj: { [k: string]: unknown } = {};\n    let numKeys = 0,\n      maxKey = 0,\n      allIntegerKeys = true;\n    this.forEachChild(PRIORITY_INDEX, (key: string, childNode: Node) => {\n      obj[key] = childNode.val(exportFormat);\n\n      numKeys++;\n      if (allIntegerKeys && ChildrenNode.INTEGER_REGEXP_.test(key)) {\n        maxKey = Math.max(maxKey, Number(key));\n      } else {\n        allIntegerKeys = false;\n      }\n    });\n\n    if (!exportFormat && allIntegerKeys && maxKey < 2 * numKeys) {\n      // convert to array.\n      const array: unknown[] = [];\n      // eslint-disable-next-line guard-for-in\n      for (const key in obj) {\n        array[key as unknown as number] = obj[key];\n      }\n\n      return array;\n    } else {\n      if (exportFormat && !this.getPriority().isEmpty()) {\n        obj['.priority'] = this.getPriority().val();\n      }\n      return obj;\n    }\n  }\n\n  /** @inheritDoc */\n  hash(): string {\n    if (this.lazyHash_ === null) {\n      let toHash = '';\n      if (!this.getPriority().isEmpty()) {\n        toHash +=\n          'priority:' +\n          priorityHashText(this.getPriority().val() as string | number) +\n          ':';\n      }\n\n      this.forEachChild(PRIORITY_INDEX, (key, childNode) => {\n        const childHash = childNode.hash();\n        if (childHash !== '') {\n          toHash += ':' + key + ':' + childHash;\n        }\n      });\n\n      this.lazyHash_ = toHash === '' ? '' : sha1(toHash);\n    }\n    return this.lazyHash_;\n  }\n\n  /** @inheritDoc */\n  getPredecessorChildName(\n    childName: string,\n    childNode: Node,\n    index: Index\n  ): string {\n    const idx = this.resolveIndex_(index);\n    if (idx) {\n      const predecessor = idx.getPredecessorKey(\n        new NamedNode(childName, childNode)\n      );\n      return predecessor ? predecessor.name : null;\n    } else {\n      return this.children_.getPredecessorKey(childName);\n    }\n  }\n\n  getFirstChildName(indexDefinition: Index): string | null {\n    const idx = this.resolveIndex_(indexDefinition);\n    if (idx) {\n      const minKey = idx.minKey();\n      return minKey && minKey.name;\n    } else {\n      return this.children_.minKey();\n    }\n  }\n\n  getFirstChild(indexDefinition: Index): NamedNode | null {\n    const minKey = this.getFirstChildName(indexDefinition);\n    if (minKey) {\n      return new NamedNode(minKey, this.children_.get(minKey));\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Given an index, return the key name of the largest value we have, according to that index\n   */\n  getLastChildName(indexDefinition: Index): string | null {\n    const idx = this.resolveIndex_(indexDefinition);\n    if (idx) {\n      const maxKey = idx.maxKey();\n      return maxKey && maxKey.name;\n    } else {\n      return this.children_.maxKey();\n    }\n  }\n\n  getLastChild(indexDefinition: Index): NamedNode | null {\n    const maxKey = this.getLastChildName(indexDefinition);\n    if (maxKey) {\n      return new NamedNode(maxKey, this.children_.get(maxKey));\n    } else {\n      return null;\n    }\n  }\n  forEachChild(\n    index: Index,\n    action: (key: string, node: Node) => boolean | void\n  ): boolean {\n    const idx = this.resolveIndex_(index);\n    if (idx) {\n      return idx.inorderTraversal(wrappedNode => {\n        return action(wrappedNode.name, wrappedNode.node);\n      });\n    } else {\n      return this.children_.inorderTraversal(action);\n    }\n  }\n\n  getIterator(\n    indexDefinition: Index\n  ): SortedMapIterator<string | NamedNode, Node, NamedNode> {\n    return this.getIteratorFrom(indexDefinition.minPost(), indexDefinition);\n  }\n\n  getIteratorFrom(\n    startPost: NamedNode,\n    indexDefinition: Index\n  ): SortedMapIterator<string | NamedNode, Node, NamedNode> {\n    const idx = this.resolveIndex_(indexDefinition);\n    if (idx) {\n      return idx.getIteratorFrom(startPost, key => key);\n    } else {\n      const iterator = this.children_.getIteratorFrom(\n        startPost.name,\n        NamedNode.Wrap\n      );\n      let next = iterator.peek();\n      while (next != null && indexDefinition.compare(next, startPost) < 0) {\n        iterator.getNext();\n        next = iterator.peek();\n      }\n      return iterator;\n    }\n  }\n\n  getReverseIterator(\n    indexDefinition: Index\n  ): SortedMapIterator<string | NamedNode, Node, NamedNode> {\n    return this.getReverseIteratorFrom(\n      indexDefinition.maxPost(),\n      indexDefinition\n    );\n  }\n\n  getReverseIteratorFrom(\n    endPost: NamedNode,\n    indexDefinition: Index\n  ): SortedMapIterator<string | NamedNode, Node, NamedNode> {\n    const idx = this.resolveIndex_(indexDefinition);\n    if (idx) {\n      return idx.getReverseIteratorFrom(endPost, key => {\n        return key;\n      });\n    } else {\n      const iterator = this.children_.getReverseIteratorFrom(\n        endPost.name,\n        NamedNode.Wrap\n      );\n      let next = iterator.peek();\n      while (next != null && indexDefinition.compare(next, endPost) > 0) {\n        iterator.getNext();\n        next = iterator.peek();\n      }\n      return iterator;\n    }\n  }\n  compareTo(other: ChildrenNode): number {\n    if (this.isEmpty()) {\n      if (other.isEmpty()) {\n        return 0;\n      } else {\n        return -1;\n      }\n    } else if (other.isLeafNode() || other.isEmpty()) {\n      return 1;\n    } else if (other === MAX_NODE) {\n      return -1;\n    } else {\n      // Must be another node with children.\n      return 0;\n    }\n  }\n  withIndex(indexDefinition: Index): Node {\n    if (\n      indexDefinition === KEY_INDEX ||\n      this.indexMap_.hasIndex(indexDefinition)\n    ) {\n      return this;\n    } else {\n      const newIndexMap = this.indexMap_.addIndex(\n        indexDefinition,\n        this.children_\n      );\n      return new ChildrenNode(this.children_, this.priorityNode_, newIndexMap);\n    }\n  }\n  isIndexed(index: Index): boolean {\n    return index === KEY_INDEX || this.indexMap_.hasIndex(index);\n  }\n  equals(other: Node): boolean {\n    if (other === this) {\n      return true;\n    } else if (other.isLeafNode()) {\n      return false;\n    } else {\n      const otherChildrenNode = other as ChildrenNode;\n      if (!this.getPriority().equals(otherChildrenNode.getPriority())) {\n        return false;\n      } else if (\n        this.children_.count() === otherChildrenNode.children_.count()\n      ) {\n        const thisIter = this.getIterator(PRIORITY_INDEX);\n        const otherIter = otherChildrenNode.getIterator(PRIORITY_INDEX);\n        let thisCurrent = thisIter.getNext();\n        let otherCurrent = otherIter.getNext();\n        while (thisCurrent && otherCurrent) {\n          if (\n            thisCurrent.name !== otherCurrent.name ||\n            !thisCurrent.node.equals(otherCurrent.node)\n          ) {\n            return false;\n          }\n          thisCurrent = thisIter.getNext();\n          otherCurrent = otherIter.getNext();\n        }\n        return thisCurrent === null && otherCurrent === null;\n      } else {\n        return false;\n      }\n    }\n  }\n\n  /**\n   * Returns a SortedMap ordered by index, or null if the default (by-key) ordering can be used\n   * instead.\n   *\n   */\n  private resolveIndex_(\n    indexDefinition: Index\n  ): SortedMap<NamedNode, Node> | null {\n    if (indexDefinition === KEY_INDEX) {\n      return null;\n    } else {\n      return this.indexMap_.get(indexDefinition.toString());\n    }\n  }\n}\n\nexport class MaxNode extends ChildrenNode {\n  constructor() {\n    super(\n      new SortedMap<string, Node>(NAME_COMPARATOR),\n      ChildrenNode.EMPTY_NODE,\n      IndexMap.Default\n    );\n  }\n\n  compareTo(other: Node): number {\n    if (other === this) {\n      return 0;\n    } else {\n      return 1;\n    }\n  }\n\n  equals(other: Node): boolean {\n    // Not that we every compare it, but MAX_NODE is only ever equal to itself\n    return other === this;\n  }\n\n  getPriority(): MaxNode {\n    return this;\n  }\n\n  getImmediateChild(childName: string): ChildrenNode {\n    return ChildrenNode.EMPTY_NODE;\n  }\n\n  isEmpty(): boolean {\n    return false;\n  }\n}\n\n/**\n * Marker that will sort higher than any other snapshot.\n */\nexport const MAX_NODE = new MaxNode();\n\n/**\n * Document NamedNode extensions\n */\ndeclare module './Node' {\n  interface NamedNode {\n    MIN: NamedNode;\n    MAX: NamedNode;\n  }\n}\n\nObject.defineProperties(NamedNode, {\n  MIN: {\n    value: new NamedNode(MIN_NAME, ChildrenNode.EMPTY_NODE)\n  },\n  MAX: {\n    value: new NamedNode(MAX_NAME, MAX_NODE)\n  }\n});\n\n/**\n * Reference Extensions\n */\nKeyIndex.__EMPTY_NODE = ChildrenNode.EMPTY_NODE;\nLeafNode.__childrenNodeConstructor = ChildrenNode;\nsetMaxNode(MAX_NODE);\nsetPriorityMaxNode(MAX_NODE);\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { contains, assert } from '@firebase/util';\n\nimport { Indexable } from '../util/misc';\nimport { SortedMap } from '../util/SortedMap';\nimport { each } from '../util/util';\n\nimport { ChildrenNode } from './ChildrenNode';\nimport { buildChildSet } from './childSet';\nimport { NAME_COMPARATOR, NAME_ONLY_COMPARATOR } from './comparators';\nimport { PRIORITY_INDEX, setNodeFromJSON } from './indexes/PriorityIndex';\nimport { IndexMap } from './IndexMap';\nimport { LeafNode } from './LeafNode';\nimport { NamedNode, Node } from './Node';\n\nconst USE_HINZE = true;\n\n/**\n * Constructs a snapshot node representing the passed JSON and returns it.\n * @param json - JSON to create a node for.\n * @param priority - Optional priority to use.  This will be ignored if the\n * passed JSON contains a .priority property.\n */\nexport function nodeFromJSON(\n  json: unknown | null,\n  priority: unknown = null\n): Node {\n  if (json === null) {\n    return ChildrenNode.EMPTY_NODE;\n  }\n\n  if (typeof json === 'object' && '.priority' in json) {\n    priority = json['.priority'];\n  }\n\n  assert(\n    priority === null ||\n      typeof priority === 'string' ||\n      typeof priority === 'number' ||\n      (typeof priority === 'object' && '.sv' in (priority as object)),\n    'Invalid priority type found: ' + typeof priority\n  );\n\n  if (typeof json === 'object' && '.value' in json && json['.value'] !== null) {\n    json = json['.value'];\n  }\n\n  // Valid leaf nodes include non-objects or server-value wrapper objects\n  if (typeof json !== 'object' || '.sv' in json) {\n    const jsonLeaf = json as string | number | boolean | Indexable;\n    return new LeafNode(jsonLeaf, nodeFromJSON(priority));\n  }\n\n  if (!(json instanceof Array) && USE_HINZE) {\n    const children: NamedNode[] = [];\n    let childrenHavePriority = false;\n    const hinzeJsonObj = json;\n    each(hinzeJsonObj, (key, child) => {\n      if (key.substring(0, 1) !== '.') {\n        // Ignore metadata nodes\n        const childNode = nodeFromJSON(child);\n        if (!childNode.isEmpty()) {\n          childrenHavePriority =\n            childrenHavePriority || !childNode.getPriority().isEmpty();\n          children.push(new NamedNode(key, childNode));\n        }\n      }\n    });\n\n    if (children.length === 0) {\n      return ChildrenNode.EMPTY_NODE;\n    }\n\n    const childSet = buildChildSet(\n      children,\n      NAME_ONLY_COMPARATOR,\n      namedNode => namedNode.name,\n      NAME_COMPARATOR\n    ) as SortedMap<string, Node>;\n    if (childrenHavePriority) {\n      const sortedChildSet = buildChildSet(\n        children,\n        PRIORITY_INDEX.getCompare()\n      );\n      return new ChildrenNode(\n        childSet,\n        nodeFromJSON(priority),\n        new IndexMap(\n          { '.priority': sortedChildSet },\n          { '.priority': PRIORITY_INDEX }\n        )\n      );\n    } else {\n      return new ChildrenNode(\n        childSet,\n        nodeFromJSON(priority),\n        IndexMap.Default\n      );\n    }\n  } else {\n    let node: Node = ChildrenNode.EMPTY_NODE;\n    each(json, (key: string, childData: unknown) => {\n      if (contains(json as object, key)) {\n        if (key.substring(0, 1) !== '.') {\n          // ignore metadata nodes.\n          const childNode = nodeFromJSON(childData);\n          if (childNode.isLeafNode() || !childNode.isEmpty()) {\n            node = node.updateImmediateChild(key, childNode);\n          }\n        }\n      }\n    });\n\n    return node.updatePriority(nodeFromJSON(priority));\n  }\n}\n\nsetNodeFromJSON(nodeFromJSON);\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { Path, pathGetFront, pathIsEmpty, pathSlice } from '../../util/Path';\nimport { MAX_NAME, nameCompare } from '../../util/util';\nimport { ChildrenNode, MAX_NODE } from '../ChildrenNode';\nimport { NamedNode, Node } from '../Node';\nimport { nodeFromJSON } from '../nodeFromJSON';\n\nimport { Index } from './Index';\n\nexport class PathIndex extends Index {\n  constructor(private indexPath_: Path) {\n    super();\n\n    assert(\n      !pathIsEmpty(indexPath_) && pathGetFront(indexPath_) !== '.priority',\n      \"Can't create PathIndex with empty path or .priority key\"\n    );\n  }\n\n  protected extractChild(snap: Node): Node {\n    return snap.getChild(this.indexPath_);\n  }\n  isDefinedOn(node: Node): boolean {\n    return !node.getChild(this.indexPath_).isEmpty();\n  }\n  compare(a: NamedNode, b: NamedNode): number {\n    const aChild = this.extractChild(a.node);\n    const bChild = this.extractChild(b.node);\n    const indexCmp = aChild.compareTo(bChild);\n    if (indexCmp === 0) {\n      return nameCompare(a.name, b.name);\n    } else {\n      return indexCmp;\n    }\n  }\n  makePost(indexValue: object, name: string): NamedNode {\n    const valueNode = nodeFromJSON(indexValue);\n    const node = ChildrenNode.EMPTY_NODE.updateChild(\n      this.indexPath_,\n      valueNode\n    );\n    return new NamedNode(name, node);\n  }\n  maxPost(): NamedNode {\n    const node = ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, MAX_NODE);\n    return new NamedNode(MAX_NAME, node);\n  }\n  toString(): string {\n    return pathSlice(this.indexPath_, 0).join('/');\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { nameCompare } from '../../util/util';\nimport { NamedNode, Node } from '../Node';\nimport { nodeFromJSON } from '../nodeFromJSON';\n\nimport { Index } from './Index';\n\nexport class ValueIndex extends Index {\n  compare(a: NamedNode, b: NamedNode): number {\n    const indexCmp = a.node.compareTo(b.node);\n    if (indexCmp === 0) {\n      return nameCompare(a.name, b.name);\n    } else {\n      return indexCmp;\n    }\n  }\n  isDefinedOn(node: Node): boolean {\n    return true;\n  }\n  indexedValueChanged(oldNode: Node, newNode: Node): boolean {\n    return !oldNode.equals(newNode);\n  }\n  minPost(): NamedNode {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (NamedNode as any).MIN;\n  }\n  maxPost(): NamedNode {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (NamedNode as any).MAX;\n  }\n\n  makePost(indexValue: object, name: string): NamedNode {\n    const valueNode = nodeFromJSON(indexValue);\n    return new NamedNode(name, valueNode);\n  }\n\n  /**\n   * @returns String representation for inclusion in a query spec\n   */\n  toString(): string {\n    return '.value';\n  }\n}\n\nexport const VALUE_INDEX = new ValueIndex();\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport {\n  tryParseInt,\n  MAX_NAME,\n  MIN_NAME,\n  INTEGER_32_MIN,\n  INTEGER_32_MAX\n} from '../util/util';\n\n// Modeled after base64 web-safe chars, but ordered by ASCII.\nconst PUSH_CHARS =\n  '-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz';\n\nconst MIN_PUSH_CHAR = '-';\n\nconst MAX_PUSH_CHAR = 'z';\n\nconst MAX_KEY_LEN = 786;\n\n/**\n * Fancy ID generator that creates 20-character string identifiers with the\n * following properties:\n *\n * 1. They're based on timestamp so that they sort *after* any existing ids.\n * 2. They contain 72-bits of random data after the timestamp so that IDs won't\n *    collide with other clients' IDs.\n * 3. They sort *lexicographically* (so the timestamp is converted to characters\n *    that will sort properly).\n * 4. They're monotonically increasing. Even if you generate more than one in\n *    the same timestamp, the latter ones will sort after the former ones. We do\n *    this by using the previous random bits but \"incrementing\" them by 1 (only\n *    in the case of a timestamp collision).\n */\nexport const nextPushId = (function () {\n  // Timestamp of last push, used to prevent local collisions if you push twice\n  // in one ms.\n  let lastPushTime = 0;\n\n  // We generate 72-bits of randomness which get turned into 12 characters and\n  // appended to the timestamp to prevent collisions with other clients. We\n  // store the last characters we generated because in the event of a collision,\n  // we'll use those same characters except \"incremented\" by one.\n  const lastRandChars: number[] = [];\n\n  return function (now: number) {\n    const duplicateTime = now === lastPushTime;\n    lastPushTime = now;\n\n    let i;\n    const timeStampChars = new Array(8);\n    for (i = 7; i >= 0; i--) {\n      timeStampChars[i] = PUSH_CHARS.charAt(now % 64);\n      // NOTE: Can't use << here because javascript will convert to int and lose\n      // the upper bits.\n      now = Math.floor(now / 64);\n    }\n    assert(now === 0, 'Cannot push at time == 0');\n\n    let id = timeStampChars.join('');\n\n    if (!duplicateTime) {\n      for (i = 0; i < 12; i++) {\n        lastRandChars[i] = Math.floor(Math.random() * 64);\n      }\n    } else {\n      // If the timestamp hasn't changed since last push, use the same random\n      // number, except incremented by 1.\n      for (i = 11; i >= 0 && lastRandChars[i] === 63; i--) {\n        lastRandChars[i] = 0;\n      }\n      lastRandChars[i]++;\n    }\n    for (i = 0; i < 12; i++) {\n      id += PUSH_CHARS.charAt(lastRandChars[i]);\n    }\n    assert(id.length === 20, 'nextPushId: Length should be 20.');\n\n    return id;\n  };\n})();\n\nexport const successor = function (key: string) {\n  if (key === '' + INTEGER_32_MAX) {\n    // See https://firebase.google.com/docs/database/web/lists-of-data#data-order\n    return MIN_PUSH_CHAR;\n  }\n  const keyAsInt: number = tryParseInt(key);\n  if (keyAsInt != null) {\n    return '' + (keyAsInt + 1);\n  }\n  const next = new Array(key.length);\n\n  for (let i = 0; i < next.length; i++) {\n    next[i] = key.charAt(i);\n  }\n\n  if (next.length < MAX_KEY_LEN) {\n    next.push(MIN_PUSH_CHAR);\n    return next.join('');\n  }\n\n  let i = next.length - 1;\n\n  while (i >= 0 && next[i] === MAX_PUSH_CHAR) {\n    i--;\n  }\n\n  // `successor` was called on the largest possible key, so return the\n  // MAX_NAME, which sorts larger than all keys.\n  if (i === -1) {\n    return MAX_NAME;\n  }\n\n  const source = next[i];\n  const sourcePlusOne = PUSH_CHARS.charAt(PUSH_CHARS.indexOf(source) + 1);\n  next[i] = sourcePlusOne;\n\n  return next.slice(0, i + 1).join('');\n};\n\n// `key` is assumed to be non-empty.\nexport const predecessor = function (key: string) {\n  if (key === '' + INTEGER_32_MIN) {\n    return MIN_NAME;\n  }\n  const keyAsInt: number = tryParseInt(key);\n  if (keyAsInt != null) {\n    return '' + (keyAsInt - 1);\n  }\n  const next = new Array(key.length);\n  for (let i = 0; i < next.length; i++) {\n    next[i] = key.charAt(i);\n  }\n  // If `key` ends in `MIN_PUSH_CHAR`, the largest key lexicographically\n  // smaller than `key`, is `key[0:key.length - 1]`. The next key smaller\n  // than that, `predecessor(predecessor(key))`, is\n  //\n  // `key[0:key.length - 2] + (key[key.length - 1] - 1) + \\\n  //   { MAX_PUSH_CHAR repeated MAX_KEY_LEN - (key.length - 1) times }\n  //\n  // analogous to increment/decrement for base-10 integers.\n  //\n  // This works because lexigographic comparison works character-by-character,\n  // using length as a tie-breaker if one key is a prefix of the other.\n  if (next[next.length - 1] === MIN_PUSH_CHAR) {\n    if (next.length === 1) {\n      // See https://firebase.google.com/docs/database/web/lists-of-data#orderbykey\n      return '' + INTEGER_32_MAX;\n    }\n    delete next[next.length - 1];\n    return next.join('');\n  }\n  // Replace the last character with it's immediate predecessor, and\n  // fill the suffix of the key with MAX_PUSH_CHAR. This is the\n  // lexicographically largest possible key smaller than `key`.\n  next[next.length - 1] = PUSH_CHARS.charAt(\n    PUSH_CHARS.indexOf(next[next.length - 1]) - 1\n  );\n  return next.join('') + MAX_PUSH_CHAR.repeat(MAX_KEY_LEN - next.length);\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Node } from '../snap/Node';\n\nexport const enum ChangeType {\n  /** Event type for a child added */\n  CHILD_ADDED = 'child_added',\n  /** Event type for a child removed */\n  CHILD_REMOVED = 'child_removed',\n  /** Event type for a child changed */\n  CHILD_CHANGED = 'child_changed',\n  /** Event type for a child moved */\n  CHILD_MOVED = 'child_moved',\n  /** Event type for a value change */\n  VALUE = 'value'\n}\n\nexport interface Change {\n  /** @param type - The event type */\n  type: ChangeType;\n  /** @param snapshotNode - The data */\n  snapshotNode: Node;\n  /** @param childName - The name for this child, if it's a child even */\n  childName?: string;\n  /** @param oldSnap - Used for intermediate processing of child changed events */\n  oldSnap?: Node;\n  /**  * @param prevName - The name for the previous child, if applicable */\n  prevName?: string | null;\n}\n\nexport function changeValue(snapshotNode: Node): Change {\n  return { type: ChangeType.VALUE, snapshotNode };\n}\n\nexport function changeChildAdded(\n  childName: string,\n  snapshotNode: Node\n): Change {\n  return { type: ChangeType.CHILD_ADDED, snapshotNode, childName };\n}\n\nexport function changeChildRemoved(\n  childName: string,\n  snapshotNode: Node\n): Change {\n  return { type: ChangeType.CHILD_REMOVED, snapshotNode, childName };\n}\n\nexport function changeChildChanged(\n  childName: string,\n  snapshotNode: Node,\n  oldSnap: Node\n): Change {\n  return {\n    type: ChangeType.CHILD_CHANGED,\n    snapshotNode,\n    childName,\n    oldSnap\n  };\n}\n\nexport function changeChildMoved(\n  childName: string,\n  snapshotNode: Node\n): Change {\n  return { type: ChangeType.CHILD_MOVED, snapshotNode, childName };\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { ChildrenNode } from '../../snap/ChildrenNode';\nimport { Index } from '../../snap/indexes/Index';\nimport { PRIORITY_INDEX } from '../../snap/indexes/PriorityIndex';\nimport { Node } from '../../snap/Node';\nimport { Path } from '../../util/Path';\nimport {\n  changeChildAdded,\n  changeChildChanged,\n  changeChildRemoved\n} from '../Change';\nimport { ChildChangeAccumulator } from '../ChildChangeAccumulator';\nimport { CompleteChildSource } from '../CompleteChildSource';\n\nimport { NodeFilter } from './NodeFilter';\n\n/**\n * Doesn't really filter nodes but applies an index to the node and keeps track of any changes\n */\nexport class IndexedFilter implements NodeFilter {\n  constructor(private readonly index_: Index) {}\n\n  updateChild(\n    snap: Node,\n    key: string,\n    newChild: Node,\n    affectedPath: Path,\n    source: CompleteChildSource,\n    optChangeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    assert(\n      snap.isIndexed(this.index_),\n      'A node must be indexed if only a child is updated'\n    );\n    const oldChild = snap.getImmediateChild(key);\n    // Check if anything actually changed.\n    if (\n      oldChild.getChild(affectedPath).equals(newChild.getChild(affectedPath))\n    ) {\n      // There's an edge case where a child can enter or leave the view because affectedPath was set to null.\n      // In this case, affectedPath will appear null in both the old and new snapshots.  So we need\n      // to avoid treating these cases as \"nothing changed.\"\n      if (oldChild.isEmpty() === newChild.isEmpty()) {\n        // Nothing changed.\n\n        // This assert should be valid, but it's expensive (can dominate perf testing) so don't actually do it.\n        //assert(oldChild.equals(newChild), 'Old and new snapshots should be equal.');\n        return snap;\n      }\n    }\n\n    if (optChangeAccumulator != null) {\n      if (newChild.isEmpty()) {\n        if (snap.hasChild(key)) {\n          optChangeAccumulator.trackChildChange(\n            changeChildRemoved(key, oldChild)\n          );\n        } else {\n          assert(\n            snap.isLeafNode(),\n            'A child remove without an old child only makes sense on a leaf node'\n          );\n        }\n      } else if (oldChild.isEmpty()) {\n        optChangeAccumulator.trackChildChange(changeChildAdded(key, newChild));\n      } else {\n        optChangeAccumulator.trackChildChange(\n          changeChildChanged(key, newChild, oldChild)\n        );\n      }\n    }\n    if (snap.isLeafNode() && newChild.isEmpty()) {\n      return snap;\n    } else {\n      // Make sure the node is indexed\n      return snap.updateImmediateChild(key, newChild).withIndex(this.index_);\n    }\n  }\n  updateFullNode(\n    oldSnap: Node,\n    newSnap: Node,\n    optChangeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    if (optChangeAccumulator != null) {\n      if (!oldSnap.isLeafNode()) {\n        oldSnap.forEachChild(PRIORITY_INDEX, (key, childNode) => {\n          if (!newSnap.hasChild(key)) {\n            optChangeAccumulator.trackChildChange(\n              changeChildRemoved(key, childNode)\n            );\n          }\n        });\n      }\n      if (!newSnap.isLeafNode()) {\n        newSnap.forEachChild(PRIORITY_INDEX, (key, childNode) => {\n          if (oldSnap.hasChild(key)) {\n            const oldChild = oldSnap.getImmediateChild(key);\n            if (!oldChild.equals(childNode)) {\n              optChangeAccumulator.trackChildChange(\n                changeChildChanged(key, childNode, oldChild)\n              );\n            }\n          } else {\n            optChangeAccumulator.trackChildChange(\n              changeChildAdded(key, childNode)\n            );\n          }\n        });\n      }\n    }\n    return newSnap.withIndex(this.index_);\n  }\n  updatePriority(oldSnap: Node, newPriority: Node): Node {\n    if (oldSnap.isEmpty()) {\n      return ChildrenNode.EMPTY_NODE;\n    } else {\n      return oldSnap.updatePriority(newPriority);\n    }\n  }\n  filtersNodes(): boolean {\n    return false;\n  }\n  getIndexedFilter(): IndexedFilter {\n    return this;\n  }\n  getIndex(): Index {\n    return this.index_;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NamedNode, Node } from '../../../core/snap/Node';\nimport { ChildrenNode } from '../../snap/ChildrenNode';\nimport { Index } from '../../snap/indexes/Index';\nimport { PRIORITY_INDEX } from '../../snap/indexes/PriorityIndex';\nimport { Path } from '../../util/Path';\nimport { ChildChangeAccumulator } from '../ChildChangeAccumulator';\nimport { CompleteChildSource } from '../CompleteChildSource';\nimport { QueryParams } from '../QueryParams';\n\nimport { IndexedFilter } from './IndexedFilter';\nimport { NodeFilter } from './NodeFilter';\n\n/**\n * Filters nodes by range and uses an IndexFilter to track any changes after filtering the node\n */\nexport class RangedFilter implements NodeFilter {\n  private indexedFilter_: IndexedFilter;\n\n  private index_: Index;\n\n  private startPost_: NamedNode;\n\n  private endPost_: NamedNode;\n\n  constructor(params: QueryParams) {\n    this.indexedFilter_ = new IndexedFilter(params.getIndex());\n    this.index_ = params.getIndex();\n    this.startPost_ = RangedFilter.getStartPost_(params);\n    this.endPost_ = RangedFilter.getEndPost_(params);\n  }\n\n  getStartPost(): NamedNode {\n    return this.startPost_;\n  }\n\n  getEndPost(): NamedNode {\n    return this.endPost_;\n  }\n\n  matches(node: NamedNode): boolean {\n    return (\n      this.index_.compare(this.getStartPost(), node) <= 0 &&\n      this.index_.compare(node, this.getEndPost()) <= 0\n    );\n  }\n  updateChild(\n    snap: Node,\n    key: string,\n    newChild: Node,\n    affectedPath: Path,\n    source: CompleteChildSource,\n    optChangeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    if (!this.matches(new NamedNode(key, newChild))) {\n      newChild = ChildrenNode.EMPTY_NODE;\n    }\n    return this.indexedFilter_.updateChild(\n      snap,\n      key,\n      newChild,\n      affectedPath,\n      source,\n      optChangeAccumulator\n    );\n  }\n  updateFullNode(\n    oldSnap: Node,\n    newSnap: Node,\n    optChangeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    if (newSnap.isLeafNode()) {\n      // Make sure we have a children node with the correct index, not a leaf node;\n      newSnap = ChildrenNode.EMPTY_NODE;\n    }\n    let filtered = newSnap.withIndex(this.index_);\n    // Don't support priorities on queries\n    filtered = filtered.updatePriority(ChildrenNode.EMPTY_NODE);\n    const self = this;\n    newSnap.forEachChild(PRIORITY_INDEX, (key, childNode) => {\n      if (!self.matches(new NamedNode(key, childNode))) {\n        filtered = filtered.updateImmediateChild(key, ChildrenNode.EMPTY_NODE);\n      }\n    });\n    return this.indexedFilter_.updateFullNode(\n      oldSnap,\n      filtered,\n      optChangeAccumulator\n    );\n  }\n  updatePriority(oldSnap: Node, newPriority: Node): Node {\n    // Don't support priorities on queries\n    return oldSnap;\n  }\n  filtersNodes(): boolean {\n    return true;\n  }\n  getIndexedFilter(): IndexedFilter {\n    return this.indexedFilter_;\n  }\n  getIndex(): Index {\n    return this.index_;\n  }\n\n  private static getStartPost_(params: QueryParams): NamedNode {\n    if (params.hasStart()) {\n      const startName = params.getIndexStartName();\n      return params.getIndex().makePost(params.getIndexStartValue(), startName);\n    } else {\n      return params.getIndex().minPost();\n    }\n  }\n\n  private static getEndPost_(params: QueryParams): NamedNode {\n    if (params.hasEnd()) {\n      const endName = params.getIndexEndName();\n      return params.getIndex().makePost(params.getIndexEndValue(), endName);\n    } else {\n      return params.getIndex().maxPost();\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { ChildrenNode } from '../../snap/ChildrenNode';\nimport { Index } from '../../snap/indexes/Index';\nimport { NamedNode, Node } from '../../snap/Node';\nimport { Path } from '../../util/Path';\nimport {\n  changeChildAdded,\n  changeChildChanged,\n  changeChildRemoved\n} from '../Change';\nimport { ChildChangeAccumulator } from '../ChildChangeAccumulator';\nimport { CompleteChildSource } from '../CompleteChildSource';\nimport { QueryParams } from '../QueryParams';\n\nimport { IndexedFilter } from './IndexedFilter';\nimport { NodeFilter } from './NodeFilter';\nimport { RangedFilter } from './RangedFilter';\n\n/**\n * Applies a limit and a range to a node and uses RangedFilter to do the heavy lifting where possible\n */\nexport class LimitedFilter implements NodeFilter {\n  private readonly rangedFilter_: RangedFilter;\n\n  private readonly index_: Index;\n\n  private readonly limit_: number;\n\n  private readonly reverse_: boolean;\n\n  constructor(params: QueryParams) {\n    this.rangedFilter_ = new RangedFilter(params);\n    this.index_ = params.getIndex();\n    this.limit_ = params.getLimit();\n    this.reverse_ = !params.isViewFromLeft();\n  }\n  updateChild(\n    snap: Node,\n    key: string,\n    newChild: Node,\n    affectedPath: Path,\n    source: CompleteChildSource,\n    optChangeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    if (!this.rangedFilter_.matches(new NamedNode(key, newChild))) {\n      newChild = ChildrenNode.EMPTY_NODE;\n    }\n    if (snap.getImmediateChild(key).equals(newChild)) {\n      // No change\n      return snap;\n    } else if (snap.numChildren() < this.limit_) {\n      return this.rangedFilter_\n        .getIndexedFilter()\n        .updateChild(\n          snap,\n          key,\n          newChild,\n          affectedPath,\n          source,\n          optChangeAccumulator\n        );\n    } else {\n      return this.fullLimitUpdateChild_(\n        snap,\n        key,\n        newChild,\n        source,\n        optChangeAccumulator\n      );\n    }\n  }\n  updateFullNode(\n    oldSnap: Node,\n    newSnap: Node,\n    optChangeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    let filtered;\n    if (newSnap.isLeafNode() || newSnap.isEmpty()) {\n      // Make sure we have a children node with the correct index, not a leaf node;\n      filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_);\n    } else {\n      if (\n        this.limit_ * 2 < newSnap.numChildren() &&\n        newSnap.isIndexed(this.index_)\n      ) {\n        // Easier to build up a snapshot, since what we're given has more than twice the elements we want\n        filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_);\n        // anchor to the startPost, endPost, or last element as appropriate\n        let iterator;\n        if (this.reverse_) {\n          iterator = (newSnap as ChildrenNode).getReverseIteratorFrom(\n            this.rangedFilter_.getEndPost(),\n            this.index_\n          );\n        } else {\n          iterator = (newSnap as ChildrenNode).getIteratorFrom(\n            this.rangedFilter_.getStartPost(),\n            this.index_\n          );\n        }\n        let count = 0;\n        while (iterator.hasNext() && count < this.limit_) {\n          const next = iterator.getNext();\n          let inRange;\n          if (this.reverse_) {\n            inRange =\n              this.index_.compare(this.rangedFilter_.getStartPost(), next) <= 0;\n          } else {\n            inRange =\n              this.index_.compare(next, this.rangedFilter_.getEndPost()) <= 0;\n          }\n          if (inRange) {\n            filtered = filtered.updateImmediateChild(next.name, next.node);\n            count++;\n          } else {\n            // if we have reached the end post, we cannot keep adding elemments\n            break;\n          }\n        }\n      } else {\n        // The snap contains less than twice the limit. Faster to delete from the snap than build up a new one\n        filtered = newSnap.withIndex(this.index_);\n        // Don't support priorities on queries\n        filtered = filtered.updatePriority(\n          ChildrenNode.EMPTY_NODE\n        ) as ChildrenNode;\n        let startPost;\n        let endPost;\n        let cmp;\n        let iterator;\n        if (this.reverse_) {\n          iterator = filtered.getReverseIterator(this.index_);\n          startPost = this.rangedFilter_.getEndPost();\n          endPost = this.rangedFilter_.getStartPost();\n          const indexCompare = this.index_.getCompare();\n          cmp = (a: NamedNode, b: NamedNode) => indexCompare(b, a);\n        } else {\n          iterator = filtered.getIterator(this.index_);\n          startPost = this.rangedFilter_.getStartPost();\n          endPost = this.rangedFilter_.getEndPost();\n          cmp = this.index_.getCompare();\n        }\n\n        let count = 0;\n        let foundStartPost = false;\n        while (iterator.hasNext()) {\n          const next = iterator.getNext();\n          if (!foundStartPost && cmp(startPost, next) <= 0) {\n            // start adding\n            foundStartPost = true;\n          }\n          const inRange =\n            foundStartPost && count < this.limit_ && cmp(next, endPost) <= 0;\n          if (inRange) {\n            count++;\n          } else {\n            filtered = filtered.updateImmediateChild(\n              next.name,\n              ChildrenNode.EMPTY_NODE\n            );\n          }\n        }\n      }\n    }\n    return this.rangedFilter_\n      .getIndexedFilter()\n      .updateFullNode(oldSnap, filtered, optChangeAccumulator);\n  }\n  updatePriority(oldSnap: Node, newPriority: Node): Node {\n    // Don't support priorities on queries\n    return oldSnap;\n  }\n  filtersNodes(): boolean {\n    return true;\n  }\n  getIndexedFilter(): IndexedFilter {\n    return this.rangedFilter_.getIndexedFilter();\n  }\n  getIndex(): Index {\n    return this.index_;\n  }\n\n  private fullLimitUpdateChild_(\n    snap: Node,\n    childKey: string,\n    childSnap: Node,\n    source: CompleteChildSource,\n    changeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    // TODO: rename all cache stuff etc to general snap terminology\n    let cmp;\n    if (this.reverse_) {\n      const indexCmp = this.index_.getCompare();\n      cmp = (a: NamedNode, b: NamedNode) => indexCmp(b, a);\n    } else {\n      cmp = this.index_.getCompare();\n    }\n    const oldEventCache = snap as ChildrenNode;\n    assert(oldEventCache.numChildren() === this.limit_, '');\n    const newChildNamedNode = new NamedNode(childKey, childSnap);\n    const windowBoundary = this.reverse_\n      ? oldEventCache.getFirstChild(this.index_)\n      : (oldEventCache.getLastChild(this.index_) as NamedNode);\n    const inRange = this.rangedFilter_.matches(newChildNamedNode);\n    if (oldEventCache.hasChild(childKey)) {\n      const oldChildSnap = oldEventCache.getImmediateChild(childKey);\n      let nextChild = source.getChildAfterChild(\n        this.index_,\n        windowBoundary,\n        this.reverse_\n      );\n      while (\n        nextChild != null &&\n        (nextChild.name === childKey || oldEventCache.hasChild(nextChild.name))\n      ) {\n        // There is a weird edge case where a node is updated as part of a merge in the write tree, but hasn't\n        // been applied to the limited filter yet. Ignore this next child which will be updated later in\n        // the limited filter...\n        nextChild = source.getChildAfterChild(\n          this.index_,\n          nextChild,\n          this.reverse_\n        );\n      }\n      const compareNext =\n        nextChild == null ? 1 : cmp(nextChild, newChildNamedNode);\n      const remainsInWindow =\n        inRange && !childSnap.isEmpty() && compareNext >= 0;\n      if (remainsInWindow) {\n        if (changeAccumulator != null) {\n          changeAccumulator.trackChildChange(\n            changeChildChanged(childKey, childSnap, oldChildSnap)\n          );\n        }\n        return oldEventCache.updateImmediateChild(childKey, childSnap);\n      } else {\n        if (changeAccumulator != null) {\n          changeAccumulator.trackChildChange(\n            changeChildRemoved(childKey, oldChildSnap)\n          );\n        }\n        const newEventCache = oldEventCache.updateImmediateChild(\n          childKey,\n          ChildrenNode.EMPTY_NODE\n        );\n        const nextChildInRange =\n          nextChild != null && this.rangedFilter_.matches(nextChild);\n        if (nextChildInRange) {\n          if (changeAccumulator != null) {\n            changeAccumulator.trackChildChange(\n              changeChildAdded(nextChild.name, nextChild.node)\n            );\n          }\n          return newEventCache.updateImmediateChild(\n            nextChild.name,\n            nextChild.node\n          );\n        } else {\n          return newEventCache;\n        }\n      }\n    } else if (childSnap.isEmpty()) {\n      // we're deleting a node, but it was not in the window, so ignore it\n      return snap;\n    } else if (inRange) {\n      if (cmp(windowBoundary, newChildNamedNode) >= 0) {\n        if (changeAccumulator != null) {\n          changeAccumulator.trackChildChange(\n            changeChildRemoved(windowBoundary.name, windowBoundary.node)\n          );\n          changeAccumulator.trackChildChange(\n            changeChildAdded(childKey, childSnap)\n          );\n        }\n        return oldEventCache\n          .updateImmediateChild(childKey, childSnap)\n          .updateImmediateChild(windowBoundary.name, ChildrenNode.EMPTY_NODE);\n      } else {\n        return snap;\n      }\n    } else {\n      return snap;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, stringify } from '@firebase/util';\n\nimport { Index } from '../snap/indexes/Index';\nimport { KEY_INDEX } from '../snap/indexes/KeyIndex';\nimport { PathIndex } from '../snap/indexes/PathIndex';\nimport { PRIORITY_INDEX, PriorityIndex } from '../snap/indexes/PriorityIndex';\nimport { VALUE_INDEX } from '../snap/indexes/ValueIndex';\nimport { predecessor, successor } from '../util/NextPushId';\nimport { MAX_NAME, MIN_NAME } from '../util/util';\n\nimport { IndexedFilter } from './filter/IndexedFilter';\nimport { LimitedFilter } from './filter/LimitedFilter';\nimport { NodeFilter } from './filter/NodeFilter';\nimport { RangedFilter } from './filter/RangedFilter';\n\n/**\n * Wire Protocol Constants\n */\nconst enum WIRE_PROTOCOL_CONSTANTS {\n  INDEX_START_VALUE = 'sp',\n  INDEX_START_NAME = 'sn',\n  INDEX_END_VALUE = 'ep',\n  INDEX_END_NAME = 'en',\n  LIMIT = 'l',\n  VIEW_FROM = 'vf',\n  VIEW_FROM_LEFT = 'l',\n  VIEW_FROM_RIGHT = 'r',\n  INDEX = 'i'\n}\n\n/**\n * REST Query Constants\n */\nconst enum REST_QUERY_CONSTANTS {\n  ORDER_BY = 'orderBy',\n  PRIORITY_INDEX = '$priority',\n  VALUE_INDEX = '$value',\n  KEY_INDEX = '$key',\n  START_AT = 'startAt',\n  END_AT = 'endAt',\n  LIMIT_TO_FIRST = 'limitToFirst',\n  LIMIT_TO_LAST = 'limitToLast'\n}\n\n/**\n * This class is an immutable-from-the-public-api struct containing a set of query parameters defining a\n * range to be returned for a particular location. It is assumed that validation of parameters is done at the\n * user-facing API level, so it is not done here.\n *\n * @internal\n */\nexport class QueryParams {\n  limitSet_ = false;\n  startSet_ = false;\n  startNameSet_ = false;\n  startAfterSet_ = false;\n  endSet_ = false;\n  endNameSet_ = false;\n  endBeforeSet_ = false;\n  limit_ = 0;\n  viewFrom_ = '';\n  indexStartValue_: unknown | null = null;\n  indexStartName_ = '';\n  indexEndValue_: unknown | null = null;\n  indexEndName_ = '';\n  index_: PriorityIndex = PRIORITY_INDEX;\n\n  hasStart(): boolean {\n    return this.startSet_;\n  }\n\n  hasStartAfter(): boolean {\n    return this.startAfterSet_;\n  }\n\n  hasEndBefore(): boolean {\n    return this.endBeforeSet_;\n  }\n\n  /**\n   * @returns True if it would return from left.\n   */\n  isViewFromLeft(): boolean {\n    if (this.viewFrom_ === '') {\n      // limit(), rather than limitToFirst or limitToLast was called.\n      // This means that only one of startSet_ and endSet_ is true. Use them\n      // to calculate which side of the view to anchor to. If neither is set,\n      // anchor to the end.\n      return this.startSet_;\n    } else {\n      return this.viewFrom_ === WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_LEFT;\n    }\n  }\n\n  /**\n   * Only valid to call if hasStart() returns true\n   */\n  getIndexStartValue(): unknown {\n    assert(this.startSet_, 'Only valid if start has been set');\n    return this.indexStartValue_;\n  }\n\n  /**\n   * Only valid to call if hasStart() returns true.\n   * Returns the starting key name for the range defined by these query parameters\n   */\n  getIndexStartName(): string {\n    assert(this.startSet_, 'Only valid if start has been set');\n    if (this.startNameSet_) {\n      return this.indexStartName_;\n    } else {\n      return MIN_NAME;\n    }\n  }\n\n  hasEnd(): boolean {\n    return this.endSet_;\n  }\n\n  /**\n   * Only valid to call if hasEnd() returns true.\n   */\n  getIndexEndValue(): unknown {\n    assert(this.endSet_, 'Only valid if end has been set');\n    return this.indexEndValue_;\n  }\n\n  /**\n   * Only valid to call if hasEnd() returns true.\n   * Returns the end key name for the range defined by these query parameters\n   */\n  getIndexEndName(): string {\n    assert(this.endSet_, 'Only valid if end has been set');\n    if (this.endNameSet_) {\n      return this.indexEndName_;\n    } else {\n      return MAX_NAME;\n    }\n  }\n\n  hasLimit(): boolean {\n    return this.limitSet_;\n  }\n\n  /**\n   * @returns True if a limit has been set and it has been explicitly anchored\n   */\n  hasAnchoredLimit(): boolean {\n    return this.limitSet_ && this.viewFrom_ !== '';\n  }\n\n  /**\n   * Only valid to call if hasLimit() returns true\n   */\n  getLimit(): number {\n    assert(this.limitSet_, 'Only valid if limit has been set');\n    return this.limit_;\n  }\n\n  getIndex(): Index {\n    return this.index_;\n  }\n\n  loadsAllData(): boolean {\n    return !(this.startSet_ || this.endSet_ || this.limitSet_);\n  }\n\n  isDefault(): boolean {\n    return this.loadsAllData() && this.index_ === PRIORITY_INDEX;\n  }\n\n  copy(): QueryParams {\n    const copy = new QueryParams();\n    copy.limitSet_ = this.limitSet_;\n    copy.limit_ = this.limit_;\n    copy.startSet_ = this.startSet_;\n    copy.indexStartValue_ = this.indexStartValue_;\n    copy.startNameSet_ = this.startNameSet_;\n    copy.indexStartName_ = this.indexStartName_;\n    copy.endSet_ = this.endSet_;\n    copy.indexEndValue_ = this.indexEndValue_;\n    copy.endNameSet_ = this.endNameSet_;\n    copy.indexEndName_ = this.indexEndName_;\n    copy.index_ = this.index_;\n    copy.viewFrom_ = this.viewFrom_;\n    return copy;\n  }\n}\n\nexport function queryParamsGetNodeFilter(queryParams: QueryParams): NodeFilter {\n  if (queryParams.loadsAllData()) {\n    return new IndexedFilter(queryParams.getIndex());\n  } else if (queryParams.hasLimit()) {\n    return new LimitedFilter(queryParams);\n  } else {\n    return new RangedFilter(queryParams);\n  }\n}\n\nexport function queryParamsLimit(\n  queryParams: QueryParams,\n  newLimit: number\n): QueryParams {\n  const newParams = queryParams.copy();\n  newParams.limitSet_ = true;\n  newParams.limit_ = newLimit;\n  newParams.viewFrom_ = '';\n  return newParams;\n}\n\nexport function queryParamsLimitToFirst(\n  queryParams: QueryParams,\n  newLimit: number\n): QueryParams {\n  const newParams = queryParams.copy();\n  newParams.limitSet_ = true;\n  newParams.limit_ = newLimit;\n  newParams.viewFrom_ = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_LEFT;\n  return newParams;\n}\n\nexport function queryParamsLimitToLast(\n  queryParams: QueryParams,\n  newLimit: number\n): QueryParams {\n  const newParams = queryParams.copy();\n  newParams.limitSet_ = true;\n  newParams.limit_ = newLimit;\n  newParams.viewFrom_ = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_RIGHT;\n  return newParams;\n}\n\nexport function queryParamsStartAt(\n  queryParams: QueryParams,\n  indexValue: unknown,\n  key?: string | null\n): QueryParams {\n  const newParams = queryParams.copy();\n  newParams.startSet_ = true;\n  if (indexValue === undefined) {\n    indexValue = null;\n  }\n  newParams.indexStartValue_ = indexValue;\n  if (key != null) {\n    newParams.startNameSet_ = true;\n    newParams.indexStartName_ = key;\n  } else {\n    newParams.startNameSet_ = false;\n    newParams.indexStartName_ = '';\n  }\n  return newParams;\n}\n\nexport function queryParamsStartAfter(\n  queryParams: QueryParams,\n  indexValue: unknown,\n  key?: string | null\n): QueryParams {\n  let params: QueryParams;\n  if (queryParams.index_ === KEY_INDEX) {\n    if (typeof indexValue === 'string') {\n      indexValue = successor(indexValue as string);\n    }\n    params = queryParamsStartAt(queryParams, indexValue, key);\n  } else {\n    let childKey: string;\n    if (key == null) {\n      childKey = MAX_NAME;\n    } else {\n      childKey = successor(key);\n    }\n    params = queryParamsStartAt(queryParams, indexValue, childKey);\n  }\n  params.startAfterSet_ = true;\n  return params;\n}\n\nexport function queryParamsEndAt(\n  queryParams: QueryParams,\n  indexValue: unknown,\n  key?: string | null\n): QueryParams {\n  const newParams = queryParams.copy();\n  newParams.endSet_ = true;\n  if (indexValue === undefined) {\n    indexValue = null;\n  }\n  newParams.indexEndValue_ = indexValue;\n  if (key !== undefined) {\n    newParams.endNameSet_ = true;\n    newParams.indexEndName_ = key;\n  } else {\n    newParams.endNameSet_ = false;\n    newParams.indexEndName_ = '';\n  }\n  return newParams;\n}\n\nexport function queryParamsEndBefore(\n  queryParams: QueryParams,\n  indexValue: unknown,\n  key?: string | null\n): QueryParams {\n  let childKey: string;\n  let params: QueryParams;\n  if (queryParams.index_ === KEY_INDEX) {\n    if (typeof indexValue === 'string') {\n      indexValue = predecessor(indexValue as string);\n    }\n    params = queryParamsEndAt(queryParams, indexValue, key);\n  } else {\n    if (key == null) {\n      childKey = MIN_NAME;\n    } else {\n      childKey = predecessor(key);\n    }\n    params = queryParamsEndAt(queryParams, indexValue, childKey);\n  }\n  params.endBeforeSet_ = true;\n  return params;\n}\n\nexport function queryParamsOrderBy(\n  queryParams: QueryParams,\n  index: Index\n): QueryParams {\n  const newParams = queryParams.copy();\n  newParams.index_ = index;\n  return newParams;\n}\n\n/**\n * Returns a set of REST query string parameters representing this query.\n *\n * @returns query string parameters\n */\nexport function queryParamsToRestQueryStringParameters(\n  queryParams: QueryParams\n): Record<string, string | number> {\n  const qs: Record<string, string | number> = {};\n\n  if (queryParams.isDefault()) {\n    return qs;\n  }\n\n  let orderBy;\n  if (queryParams.index_ === PRIORITY_INDEX) {\n    orderBy = REST_QUERY_CONSTANTS.PRIORITY_INDEX;\n  } else if (queryParams.index_ === VALUE_INDEX) {\n    orderBy = REST_QUERY_CONSTANTS.VALUE_INDEX;\n  } else if (queryParams.index_ === KEY_INDEX) {\n    orderBy = REST_QUERY_CONSTANTS.KEY_INDEX;\n  } else {\n    assert(queryParams.index_ instanceof PathIndex, 'Unrecognized index type!');\n    orderBy = queryParams.index_.toString();\n  }\n  qs[REST_QUERY_CONSTANTS.ORDER_BY] = stringify(orderBy);\n\n  if (queryParams.startSet_) {\n    qs[REST_QUERY_CONSTANTS.START_AT] = stringify(queryParams.indexStartValue_);\n    if (queryParams.startNameSet_) {\n      qs[REST_QUERY_CONSTANTS.START_AT] +=\n        ',' + stringify(queryParams.indexStartName_);\n    }\n  }\n\n  if (queryParams.endSet_) {\n    qs[REST_QUERY_CONSTANTS.END_AT] = stringify(queryParams.indexEndValue_);\n    if (queryParams.endNameSet_) {\n      qs[REST_QUERY_CONSTANTS.END_AT] +=\n        ',' + stringify(queryParams.indexEndName_);\n    }\n  }\n\n  if (queryParams.limitSet_) {\n    if (queryParams.isViewFromLeft()) {\n      qs[REST_QUERY_CONSTANTS.LIMIT_TO_FIRST] = queryParams.limit_;\n    } else {\n      qs[REST_QUERY_CONSTANTS.LIMIT_TO_LAST] = queryParams.limit_;\n    }\n  }\n\n  return qs;\n}\n\nexport function queryParamsGetQueryObject(\n  queryParams: QueryParams\n): Record<string, unknown> {\n  const obj: Record<string, unknown> = {};\n  if (queryParams.startSet_) {\n    obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_VALUE] =\n      queryParams.indexStartValue_;\n    if (queryParams.startNameSet_) {\n      obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_NAME] =\n        queryParams.indexStartName_;\n    }\n  }\n  if (queryParams.endSet_) {\n    obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_VALUE] = queryParams.indexEndValue_;\n    if (queryParams.endNameSet_) {\n      obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_NAME] = queryParams.indexEndName_;\n    }\n  }\n  if (queryParams.limitSet_) {\n    obj[WIRE_PROTOCOL_CONSTANTS.LIMIT] = queryParams.limit_;\n    let viewFrom = queryParams.viewFrom_;\n    if (viewFrom === '') {\n      if (queryParams.isViewFromLeft()) {\n        viewFrom = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_LEFT;\n      } else {\n        viewFrom = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_RIGHT;\n      }\n    }\n    obj[WIRE_PROTOCOL_CONSTANTS.VIEW_FROM] = viewFrom;\n  }\n  // For now, priority index is the default, so we only specify if it's some other index\n  if (queryParams.index_ !== PRIORITY_INDEX) {\n    obj[WIRE_PROTOCOL_CONSTANTS.INDEX] = queryParams.index_.toString();\n  }\n  return obj;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  jsonEval,\n  safeGet,\n  querystring,\n  Deferred\n} from '@firebase/util';\n\nimport { AppCheckTokenProvider } from './AppCheckTokenProvider';\nimport { AuthTokenProvider } from './AuthTokenProvider';\nimport { RepoInfo } from './RepoInfo';\nimport { ServerActions } from './ServerActions';\nimport { logWrapper, warn } from './util/util';\nimport { QueryContext } from './view/EventRegistration';\nimport { queryParamsToRestQueryStringParameters } from './view/QueryParams';\n\n/**\n * An implementation of ServerActions that communicates with the server via REST requests.\n * This is mostly useful for compatibility with crawlers, where we don't want to spin up a full\n * persistent connection (using WebSockets or long-polling)\n */\nexport class ReadonlyRestClient extends ServerActions {\n  reportStats(stats: { [k: string]: unknown }): void {\n    throw new Error('Method not implemented.');\n  }\n\n  /** @private {function(...[*])} */\n  private log_: (...args: unknown[]) => void = logWrapper('p:rest:');\n\n  /**\n   * We don't actually need to track listens, except to prevent us calling an onComplete for a listen\n   * that's been removed. :-/\n   */\n  private listens_: { [k: string]: object } = {};\n\n  static getListenId_(query: QueryContext, tag?: number | null): string {\n    if (tag !== undefined) {\n      return 'tag$' + tag;\n    } else {\n      assert(\n        query._queryParams.isDefault(),\n        \"should have a tag if it's not a default query.\"\n      );\n      return query._path.toString();\n    }\n  }\n\n  /**\n   * @param repoInfo_ - Data about the namespace we are connecting to\n   * @param onDataUpdate_ - A callback for new data from the server\n   */\n  constructor(\n    private repoInfo_: RepoInfo,\n    private onDataUpdate_: (\n      a: string,\n      b: unknown,\n      c: boolean,\n      d: number | null\n    ) => void,\n    private authTokenProvider_: AuthTokenProvider,\n    private appCheckTokenProvider_: AppCheckTokenProvider\n  ) {\n    super();\n  }\n\n  /** @inheritDoc */\n  listen(\n    query: QueryContext,\n    currentHashFn: () => string,\n    tag: number | null,\n    onComplete: (a: string, b: unknown) => void\n  ) {\n    const pathString = query._path.toString();\n    this.log_('Listen called for ' + pathString + ' ' + query._queryIdentifier);\n\n    // Mark this listener so we can tell if it's removed.\n    const listenId = ReadonlyRestClient.getListenId_(query, tag);\n    const thisListen = {};\n    this.listens_[listenId] = thisListen;\n\n    const queryStringParameters = queryParamsToRestQueryStringParameters(\n      query._queryParams\n    );\n\n    this.restRequest_(\n      pathString + '.json',\n      queryStringParameters,\n      (error, result) => {\n        let data = result;\n\n        if (error === 404) {\n          data = null;\n          error = null;\n        }\n\n        if (error === null) {\n          this.onDataUpdate_(pathString, data, /*isMerge=*/ false, tag);\n        }\n\n        if (safeGet(this.listens_, listenId) === thisListen) {\n          let status;\n          if (!error) {\n            status = 'ok';\n          } else if (error === 401) {\n            status = 'permission_denied';\n          } else {\n            status = 'rest_error:' + error;\n          }\n\n          onComplete(status, null);\n        }\n      }\n    );\n  }\n\n  /** @inheritDoc */\n  unlisten(query: QueryContext, tag: number | null) {\n    const listenId = ReadonlyRestClient.getListenId_(query, tag);\n    delete this.listens_[listenId];\n  }\n\n  get(query: QueryContext): Promise<string> {\n    const queryStringParameters = queryParamsToRestQueryStringParameters(\n      query._queryParams\n    );\n\n    const pathString = query._path.toString();\n\n    const deferred = new Deferred<string>();\n\n    this.restRequest_(\n      pathString + '.json',\n      queryStringParameters,\n      (error, result) => {\n        let data = result;\n\n        if (error === 404) {\n          data = null;\n          error = null;\n        }\n\n        if (error === null) {\n          this.onDataUpdate_(\n            pathString,\n            data,\n            /*isMerge=*/ false,\n            /*tag=*/ null\n          );\n          deferred.resolve(data as string);\n        } else {\n          deferred.reject(new Error(data as string));\n        }\n      }\n    );\n    return deferred.promise;\n  }\n\n  /** @inheritDoc */\n  refreshAuthToken(token: string) {\n    // no-op since we just always call getToken.\n  }\n\n  /**\n   * Performs a REST request to the given path, with the provided query string parameters,\n   * and any auth credentials we have.\n   */\n  private restRequest_(\n    pathString: string,\n    queryStringParameters: { [k: string]: string | number } = {},\n    callback: ((a: number | null, b?: unknown) => void) | null\n  ) {\n    queryStringParameters['format'] = 'export';\n\n    return Promise.all([\n      this.authTokenProvider_.getToken(/*forceRefresh=*/ false),\n      this.appCheckTokenProvider_.getToken(/*forceRefresh=*/ false)\n    ]).then(([authToken, appCheckToken]) => {\n      if (authToken && authToken.accessToken) {\n        queryStringParameters['auth'] = authToken.accessToken;\n      }\n      if (appCheckToken && appCheckToken.token) {\n        queryStringParameters['ac'] = appCheckToken.token;\n      }\n\n      const url =\n        (this.repoInfo_.secure ? 'https://' : 'http://') +\n        this.repoInfo_.host +\n        pathString +\n        '?' +\n        'ns=' +\n        this.repoInfo_.namespace +\n        querystring(queryStringParameters);\n\n      this.log_('Sending REST request for ' + url);\n      const xhr = new XMLHttpRequest();\n      xhr.onreadystatechange = () => {\n        if (callback && xhr.readyState === 4) {\n          this.log_(\n            'REST Response for ' + url + ' received. status:',\n            xhr.status,\n            'response:',\n            xhr.responseText\n          );\n          let res = null;\n          if (xhr.status >= 200 && xhr.status < 300) {\n            try {\n              res = jsonEval(xhr.responseText);\n            } catch (e) {\n              warn(\n                'Failed to parse JSON response for ' +\n                  url +\n                  ': ' +\n                  xhr.responseText\n              );\n            }\n            callback(null, res);\n          } else {\n            // 401 and 404 are expected.\n            if (xhr.status !== 401 && xhr.status !== 404) {\n              warn(\n                'Got unsuccessful REST response for ' +\n                  url +\n                  ' Status: ' +\n                  xhr.status\n              );\n            }\n            callback(xhr.status);\n          }\n          callback = null;\n        }\n      };\n\n      xhr.open('GET', url, /*asynchronous=*/ true);\n      xhr.send();\n    });\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { Node } from './snap/Node';\nimport { Path } from './util/Path';\n\n/**\n * Mutable object which basically just stores a reference to the \"latest\" immutable snapshot.\n */\nexport class SnapshotHolder {\n  private rootNode_: Node = ChildrenNode.EMPTY_NODE;\n\n  getNode(path: Path): Node {\n    return this.rootNode_.getChild(path);\n  }\n\n  updateSnapshot(path: Path, newSnapshotNode: Node) {\n    this.rootNode_ = this.rootNode_.updateChild(path, newSnapshotNode);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { PRIORITY_INDEX } from './snap/indexes/PriorityIndex';\nimport { Node } from './snap/Node';\nimport { Path, pathGetFront, pathIsEmpty, pathPopFront } from './util/Path';\n\n/**\n * Helper class to store a sparse set of snapshots.\n */\nexport interface SparseSnapshotTree {\n  value: Node | null;\n  readonly children: Map<string, SparseSnapshotTree>;\n}\n\nexport function newSparseSnapshotTree(): SparseSnapshotTree {\n  return {\n    value: null,\n    children: new Map()\n  };\n}\n\n/**\n * Gets the node stored at the given path if one exists.\n * Only seems to be used in tests.\n *\n * @param path - Path to look up snapshot for.\n * @returns The retrieved node, or null.\n */\nexport function sparseSnapshotTreeFind(\n  sparseSnapshotTree: SparseSnapshotTree,\n  path: Path\n): Node | null {\n  if (sparseSnapshotTree.value != null) {\n    return sparseSnapshotTree.value.getChild(path);\n  } else if (!pathIsEmpty(path) && sparseSnapshotTree.children.size > 0) {\n    const childKey = pathGetFront(path);\n    path = pathPopFront(path);\n    if (sparseSnapshotTree.children.has(childKey)) {\n      const childTree = sparseSnapshotTree.children.get(childKey);\n      return sparseSnapshotTreeFind(childTree, path);\n    } else {\n      return null;\n    }\n  } else {\n    return null;\n  }\n}\n\n/**\n * Stores the given node at the specified path. If there is already a node\n * at a shallower path, it merges the new data into that snapshot node.\n *\n * @param path - Path to look up snapshot for.\n * @param data - The new data, or null.\n */\nexport function sparseSnapshotTreeRemember(\n  sparseSnapshotTree: SparseSnapshotTree,\n  path: Path,\n  data: Node\n): void {\n  if (pathIsEmpty(path)) {\n    sparseSnapshotTree.value = data;\n    sparseSnapshotTree.children.clear();\n  } else if (sparseSnapshotTree.value !== null) {\n    sparseSnapshotTree.value = sparseSnapshotTree.value.updateChild(path, data);\n  } else {\n    const childKey = pathGetFront(path);\n    if (!sparseSnapshotTree.children.has(childKey)) {\n      sparseSnapshotTree.children.set(childKey, newSparseSnapshotTree());\n    }\n\n    const child = sparseSnapshotTree.children.get(childKey);\n    path = pathPopFront(path);\n    sparseSnapshotTreeRemember(child, path, data);\n  }\n}\n\n/**\n * Purge the data at path from the cache.\n *\n * @param path - Path to look up snapshot for.\n * @returns True if this node should now be removed.\n */\nexport function sparseSnapshotTreeForget(\n  sparseSnapshotTree: SparseSnapshotTree,\n  path: Path\n): boolean {\n  if (pathIsEmpty(path)) {\n    sparseSnapshotTree.value = null;\n    sparseSnapshotTree.children.clear();\n    return true;\n  } else {\n    if (sparseSnapshotTree.value !== null) {\n      if (sparseSnapshotTree.value.isLeafNode()) {\n        // We're trying to forget a node that doesn't exist\n        return false;\n      } else {\n        const value = sparseSnapshotTree.value;\n        sparseSnapshotTree.value = null;\n\n        value.forEachChild(PRIORITY_INDEX, (key, tree) => {\n          sparseSnapshotTreeRemember(sparseSnapshotTree, new Path(key), tree);\n        });\n\n        return sparseSnapshotTreeForget(sparseSnapshotTree, path);\n      }\n    } else if (sparseSnapshotTree.children.size > 0) {\n      const childKey = pathGetFront(path);\n      path = pathPopFront(path);\n      if (sparseSnapshotTree.children.has(childKey)) {\n        const safeToRemove = sparseSnapshotTreeForget(\n          sparseSnapshotTree.children.get(childKey),\n          path\n        );\n        if (safeToRemove) {\n          sparseSnapshotTree.children.delete(childKey);\n        }\n      }\n\n      return sparseSnapshotTree.children.size === 0;\n    } else {\n      return true;\n    }\n  }\n}\n\n/**\n * Recursively iterates through all of the stored tree and calls the\n * callback on each one.\n *\n * @param prefixPath - Path to look up node for.\n * @param func - The function to invoke for each tree.\n */\nexport function sparseSnapshotTreeForEachTree(\n  sparseSnapshotTree: SparseSnapshotTree,\n  prefixPath: Path,\n  func: (a: Path, b: Node) => unknown\n): void {\n  if (sparseSnapshotTree.value !== null) {\n    func(prefixPath, sparseSnapshotTree.value);\n  } else {\n    sparseSnapshotTreeForEachChild(sparseSnapshotTree, (key, tree) => {\n      const path = new Path(prefixPath.toString() + '/' + key);\n      sparseSnapshotTreeForEachTree(tree, path, func);\n    });\n  }\n}\n\n/**\n * Iterates through each immediate child and triggers the callback.\n * Only seems to be used in tests.\n *\n * @param func - The function to invoke for each child.\n */\nexport function sparseSnapshotTreeForEachChild(\n  sparseSnapshotTree: SparseSnapshotTree,\n  func: (a: string, b: SparseSnapshotTree) => void\n): void {\n  sparseSnapshotTree.children.forEach((tree, key) => {\n    func(key, tree);\n  });\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { each } from '../util/util';\n\nimport { StatsCollection } from './StatsCollection';\n\n/**\n * Returns the delta from the previous call to get stats.\n *\n * @param collection_ - The collection to \"listen\" to.\n */\nexport class StatsListener {\n  private last_: { [k: string]: number } | null = null;\n\n  constructor(private collection_: StatsCollection) {}\n\n  get(): { [k: string]: number } {\n    const newStats = this.collection_.get();\n\n    const delta = { ...newStats };\n    if (this.last_) {\n      each(this.last_, (stat: string, value: number) => {\n        delta[stat] = delta[stat] - value;\n      });\n    }\n    this.last_ = newStats;\n\n    return delta;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { contains } from '@firebase/util';\n\nimport { ServerActions } from '../ServerActions';\nimport { setTimeoutNonBlocking, each } from '../util/util';\n\nimport { StatsCollection } from './StatsCollection';\nimport { StatsListener } from './StatsListener';\n\n// Assuming some apps may have a short amount of time on page, and a bulk of firebase operations probably\n// happen on page load, we try to report our first set of stats pretty quickly, but we wait at least 10\n// seconds to try to ensure the Firebase connection is established / settled.\nconst FIRST_STATS_MIN_TIME = 10 * 1000;\nconst FIRST_STATS_MAX_TIME = 30 * 1000;\n\n// We'll continue to report stats on average every 5 minutes.\nconst REPORT_STATS_INTERVAL = 5 * 60 * 1000;\n\nexport class StatsReporter {\n  private statsListener_: StatsListener;\n  statsToReport_: { [k: string]: boolean } = {};\n\n  constructor(collection: StatsCollection, private server_: ServerActions) {\n    this.statsListener_ = new StatsListener(collection);\n\n    const timeout =\n      FIRST_STATS_MIN_TIME +\n      (FIRST_STATS_MAX_TIME - FIRST_STATS_MIN_TIME) * Math.random();\n    setTimeoutNonBlocking(this.reportStats_.bind(this), Math.floor(timeout));\n  }\n\n  private reportStats_() {\n    const stats = this.statsListener_.get();\n    const reportedStats: typeof stats = {};\n    let haveStatsToReport = false;\n\n    each(stats, (stat: string, value: number) => {\n      if (value > 0 && contains(this.statsToReport_, stat)) {\n        reportedStats[stat] = value;\n        haveStatsToReport = true;\n      }\n    });\n\n    if (haveStatsToReport) {\n      this.server_.reportStats(reportedStats);\n    }\n\n    // queue our next run.\n    setTimeoutNonBlocking(\n      this.reportStats_.bind(this),\n      Math.floor(Math.random() * 2 * REPORT_STATS_INTERVAL)\n    );\n  }\n}\n\nexport function statsReporterIncludeStat(\n  reporter: StatsReporter,\n  stat: string\n) {\n  reporter.statsToReport_[stat] = true;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Path } from '../util/Path';\n\n/**\n *\n * @enum\n */\nexport enum OperationType {\n  OVERWRITE,\n  MERGE,\n  ACK_USER_WRITE,\n  LISTEN_COMPLETE\n}\n\n/**\n * @interface\n */\nexport interface Operation {\n  source: OperationSource;\n\n  type: OperationType;\n\n  path: Path;\n\n  operationForChild(childName: string): Operation | null;\n}\n\nexport interface OperationSource {\n  fromUser: boolean;\n  fromServer: boolean;\n  queryId: string | null;\n  tagged: boolean;\n}\n\nexport function newOperationSourceUser(): OperationSource {\n  return {\n    fromUser: true,\n    fromServer: false,\n    queryId: null,\n    tagged: false\n  };\n}\n\nexport function newOperationSourceServer(): OperationSource {\n  return {\n    fromUser: false,\n    fromServer: true,\n    queryId: null,\n    tagged: false\n  };\n}\n\nexport function newOperationSourceServerTaggedQuery(\n  queryId: string\n): OperationSource {\n  return {\n    fromUser: false,\n    fromServer: true,\n    queryId,\n    tagged: true\n  };\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { ImmutableTree } from '../util/ImmutableTree';\nimport {\n  newEmptyPath,\n  Path,\n  pathGetFront,\n  pathIsEmpty,\n  pathPopFront\n} from '../util/Path';\n\nimport { newOperationSourceUser, Operation, OperationType } from './Operation';\n\nexport class AckUserWrite implements Operation {\n  /** @inheritDoc */\n  type = OperationType.ACK_USER_WRITE;\n\n  /** @inheritDoc */\n  source = newOperationSourceUser();\n\n  /**\n   * @param affectedTree - A tree containing true for each affected path. Affected paths can't overlap.\n   */\n  constructor(\n    /** @inheritDoc */ public path: Path,\n    /** @inheritDoc */ public affectedTree: ImmutableTree<boolean>,\n    /** @inheritDoc */ public revert: boolean\n  ) {}\n  operationForChild(childName: string): AckUserWrite {\n    if (!pathIsEmpty(this.path)) {\n      assert(\n        pathGetFront(this.path) === childName,\n        'operationForChild called for unrelated child.'\n      );\n      return new AckUserWrite(\n        pathPopFront(this.path),\n        this.affectedTree,\n        this.revert\n      );\n    } else if (this.affectedTree.value != null) {\n      assert(\n        this.affectedTree.children.isEmpty(),\n        'affectedTree should not have overlapping affected paths.'\n      );\n      // All child locations are affected as well; just return same operation.\n      return this;\n    } else {\n      const childTree = this.affectedTree.subtree(new Path(childName));\n      return new AckUserWrite(newEmptyPath(), childTree, this.revert);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { newEmptyPath, Path, pathIsEmpty, pathPopFront } from '../util/Path';\n\nimport { Operation, OperationSource, OperationType } from './Operation';\n\nexport class ListenComplete implements Operation {\n  /** @inheritDoc */\n  type = OperationType.LISTEN_COMPLETE;\n\n  constructor(public source: OperationSource, public path: Path) {}\n\n  operationForChild(childName: string): ListenComplete {\n    if (pathIsEmpty(this.path)) {\n      return new ListenComplete(this.source, newEmptyPath());\n    } else {\n      return new ListenComplete(this.source, pathPopFront(this.path));\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Node } from '../snap/Node';\nimport { newEmptyPath, Path, pathIsEmpty, pathPopFront } from '../util/Path';\n\nimport { Operation, OperationSource, OperationType } from './Operation';\n\nexport class Overwrite implements Operation {\n  /** @inheritDoc */\n  type = OperationType.OVERWRITE;\n\n  constructor(\n    public source: OperationSource,\n    public path: Path,\n    public snap: Node\n  ) {}\n\n  operationForChild(childName: string): Overwrite {\n    if (pathIsEmpty(this.path)) {\n      return new Overwrite(\n        this.source,\n        newEmptyPath(),\n        this.snap.getImmediateChild(childName)\n      );\n    } else {\n      return new Overwrite(this.source, pathPopFront(this.path), this.snap);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { Node } from '../snap/Node';\nimport { ImmutableTree } from '../util/ImmutableTree';\nimport {\n  newEmptyPath,\n  Path,\n  pathGetFront,\n  pathIsEmpty,\n  pathPopFront\n} from '../util/Path';\n\nimport { Operation, OperationSource, OperationType } from './Operation';\nimport { Overwrite } from './Overwrite';\n\nexport class Merge implements Operation {\n  /** @inheritDoc */\n  type = OperationType.MERGE;\n\n  constructor(\n    /** @inheritDoc */ public source: OperationSource,\n    /** @inheritDoc */ public path: Path,\n    /** @inheritDoc */ public children: ImmutableTree<Node>\n  ) {}\n  operationForChild(childName: string): Operation {\n    if (pathIsEmpty(this.path)) {\n      const childTree = this.children.subtree(new Path(childName));\n      if (childTree.isEmpty()) {\n        // This child is unaffected\n        return null;\n      } else if (childTree.value) {\n        // We have a snapshot for the child in question.  This becomes an overwrite of the child.\n        return new Overwrite(this.source, newEmptyPath(), childTree.value);\n      } else {\n        // This is a merge at a deeper level\n        return new Merge(this.source, newEmptyPath(), childTree);\n      }\n    } else {\n      assert(\n        pathGetFront(this.path) === childName,\n        \"Can't get a merge for a child not on the path of the operation\"\n      );\n      return new Merge(this.source, pathPopFront(this.path), this.children);\n    }\n  }\n  toString(): string {\n    return (\n      'Operation(' +\n      this.path +\n      ': ' +\n      this.source.toString() +\n      ' merge: ' +\n      this.children.toString() +\n      ')'\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Node } from '../snap/Node';\nimport { Path, pathGetFront, pathIsEmpty } from '../util/Path';\n\n/**\n * A cache node only stores complete children. Additionally it holds a flag whether the node can be considered fully\n * initialized in the sense that we know at one point in time this represented a valid state of the world, e.g.\n * initialized with data from the server, or a complete overwrite by the client. The filtered flag also tracks\n * whether a node potentially had children removed due to a filter.\n */\nexport class CacheNode {\n  constructor(\n    private node_: Node,\n    private fullyInitialized_: boolean,\n    private filtered_: boolean\n  ) {}\n\n  /**\n   * Returns whether this node was fully initialized with either server data or a complete overwrite by the client\n   */\n  isFullyInitialized(): boolean {\n    return this.fullyInitialized_;\n  }\n\n  /**\n   * Returns whether this node is potentially missing children due to a filter applied to the node\n   */\n  isFiltered(): boolean {\n    return this.filtered_;\n  }\n\n  isCompleteForPath(path: Path): boolean {\n    if (pathIsEmpty(path)) {\n      return this.isFullyInitialized() && !this.filtered_;\n    }\n\n    const childKey = pathGetFront(path);\n    return this.isCompleteForChild(childKey);\n  }\n\n  isCompleteForChild(key: string): boolean {\n    return (\n      (this.isFullyInitialized() && !this.filtered_) || this.node_.hasChild(key)\n    );\n  }\n\n  getNode(): Node {\n    return this.node_;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assertionError } from '@firebase/util';\n\nimport { Index } from '../snap/indexes/Index';\nimport { NamedNode, Node } from '../snap/Node';\n\nimport { Change, ChangeType, changeChildMoved } from './Change';\nimport { Event } from './Event';\nimport { EventRegistration, QueryContext } from './EventRegistration';\n\n/**\n * An EventGenerator is used to convert \"raw\" changes (Change) as computed by the\n * CacheDiffer into actual events (Event) that can be raised.  See generateEventsForChanges()\n * for details.\n *\n */\nexport class EventGenerator {\n  index_: Index;\n\n  constructor(public query_: QueryContext) {\n    this.index_ = this.query_._queryParams.getIndex();\n  }\n}\n\n/**\n * Given a set of raw changes (no moved events and prevName not specified yet), and a set of\n * EventRegistrations that should be notified of these changes, generate the actual events to be raised.\n *\n * Notes:\n *  - child_moved events will be synthesized at this time for any child_changed events that affect\n *    our index.\n *  - prevName will be calculated based on the index ordering.\n */\nexport function eventGeneratorGenerateEventsForChanges(\n  eventGenerator: EventGenerator,\n  changes: Change[],\n  eventCache: Node,\n  eventRegistrations: EventRegistration[]\n): Event[] {\n  const events: Event[] = [];\n  const moves: Change[] = [];\n\n  changes.forEach(change => {\n    if (\n      change.type === ChangeType.CHILD_CHANGED &&\n      eventGenerator.index_.indexedValueChanged(\n        change.oldSnap as Node,\n        change.snapshotNode\n      )\n    ) {\n      moves.push(changeChildMoved(change.childName, change.snapshotNode));\n    }\n  });\n\n  eventGeneratorGenerateEventsForType(\n    eventGenerator,\n    events,\n    ChangeType.CHILD_REMOVED,\n    changes,\n    eventRegistrations,\n    eventCache\n  );\n  eventGeneratorGenerateEventsForType(\n    eventGenerator,\n    events,\n    ChangeType.CHILD_ADDED,\n    changes,\n    eventRegistrations,\n    eventCache\n  );\n  eventGeneratorGenerateEventsForType(\n    eventGenerator,\n    events,\n    ChangeType.CHILD_MOVED,\n    moves,\n    eventRegistrations,\n    eventCache\n  );\n  eventGeneratorGenerateEventsForType(\n    eventGenerator,\n    events,\n    ChangeType.CHILD_CHANGED,\n    changes,\n    eventRegistrations,\n    eventCache\n  );\n  eventGeneratorGenerateEventsForType(\n    eventGenerator,\n    events,\n    ChangeType.VALUE,\n    changes,\n    eventRegistrations,\n    eventCache\n  );\n\n  return events;\n}\n\n/**\n * Given changes of a single change type, generate the corresponding events.\n */\nfunction eventGeneratorGenerateEventsForType(\n  eventGenerator: EventGenerator,\n  events: Event[],\n  eventType: string,\n  changes: Change[],\n  registrations: EventRegistration[],\n  eventCache: Node\n) {\n  const filteredChanges = changes.filter(change => change.type === eventType);\n\n  filteredChanges.sort((a, b) =>\n    eventGeneratorCompareChanges(eventGenerator, a, b)\n  );\n  filteredChanges.forEach(change => {\n    const materializedChange = eventGeneratorMaterializeSingleChange(\n      eventGenerator,\n      change,\n      eventCache\n    );\n    registrations.forEach(registration => {\n      if (registration.respondsTo(change.type)) {\n        events.push(\n          registration.createEvent(materializedChange, eventGenerator.query_)\n        );\n      }\n    });\n  });\n}\n\nfunction eventGeneratorMaterializeSingleChange(\n  eventGenerator: EventGenerator,\n  change: Change,\n  eventCache: Node\n): Change {\n  if (change.type === 'value' || change.type === 'child_removed') {\n    return change;\n  } else {\n    change.prevName = eventCache.getPredecessorChildName(\n      change.childName,\n      change.snapshotNode,\n      eventGenerator.index_\n    );\n    return change;\n  }\n}\n\nfunction eventGeneratorCompareChanges(\n  eventGenerator: EventGenerator,\n  a: Change,\n  b: Change\n) {\n  if (a.childName == null || b.childName == null) {\n    throw assertionError('Should only compare child_ events.');\n  }\n  const aWrapped = new NamedNode(a.childName, a.snapshotNode);\n  const bWrapped = new NamedNode(b.childName, b.snapshotNode);\n  return eventGenerator.index_.compare(aWrapped, bWrapped);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Node } from '../snap/Node';\n\nimport { CacheNode } from './CacheNode';\n\n/**\n * Stores the data we have cached for a view.\n *\n * serverSnap is the cached server data, eventSnap is the cached event data (server data plus any local writes).\n */\nexport interface ViewCache {\n  readonly eventCache: CacheNode;\n  readonly serverCache: CacheNode;\n}\n\nexport function newViewCache(\n  eventCache: CacheNode,\n  serverCache: CacheNode\n): ViewCache {\n  return { eventCache, serverCache };\n}\n\nexport function viewCacheUpdateEventSnap(\n  viewCache: ViewCache,\n  eventSnap: Node,\n  complete: boolean,\n  filtered: boolean\n): ViewCache {\n  return newViewCache(\n    new CacheNode(eventSnap, complete, filtered),\n    viewCache.serverCache\n  );\n}\n\nexport function viewCacheUpdateServerSnap(\n  viewCache: ViewCache,\n  serverSnap: Node,\n  complete: boolean,\n  filtered: boolean\n): ViewCache {\n  return newViewCache(\n    viewCache.eventCache,\n    new CacheNode(serverSnap, complete, filtered)\n  );\n}\n\nexport function viewCacheGetCompleteEventSnap(\n  viewCache: ViewCache\n): Node | null {\n  return viewCache.eventCache.isFullyInitialized()\n    ? viewCache.eventCache.getNode()\n    : null;\n}\n\nexport function viewCacheGetCompleteServerSnap(\n  viewCache: ViewCache\n): Node | null {\n  return viewCache.serverCache.isFullyInitialized()\n    ? viewCache.serverCache.getNode()\n    : null;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  newEmptyPath,\n  Path,\n  pathChild,\n  pathGetFront,\n  pathIsEmpty,\n  pathPopFront\n} from './Path';\nimport { SortedMap } from './SortedMap';\nimport { each, stringCompare } from './util';\n\nlet emptyChildrenSingleton: SortedMap<string, ImmutableTree<null>>;\n\n/**\n * Singleton empty children collection.\n *\n */\nconst EmptyChildren = (): SortedMap<string, ImmutableTree<null>> => {\n  if (!emptyChildrenSingleton) {\n    emptyChildrenSingleton = new SortedMap<string, ImmutableTree<null>>(\n      stringCompare\n    );\n  }\n  return emptyChildrenSingleton;\n};\n\n/**\n * A tree with immutable elements.\n */\nexport class ImmutableTree<T> {\n  static fromObject<T>(obj: { [k: string]: T }): ImmutableTree<T> {\n    let tree: ImmutableTree<T> = new ImmutableTree<T>(null);\n    each(obj, (childPath: string, childSnap: T) => {\n      tree = tree.set(new Path(childPath), childSnap);\n    });\n    return tree;\n  }\n\n  constructor(\n    public readonly value: T | null,\n    public readonly children: SortedMap<\n      string,\n      ImmutableTree<T>\n    > = EmptyChildren()\n  ) {}\n\n  /**\n   * True if the value is empty and there are no children\n   */\n  isEmpty(): boolean {\n    return this.value === null && this.children.isEmpty();\n  }\n\n  /**\n   * Given a path and predicate, return the first node and the path to that node\n   * where the predicate returns true.\n   *\n   * TODO Do a perf test -- If we're creating a bunch of `{path: value:}`\n   * objects on the way back out, it may be better to pass down a pathSoFar obj.\n   *\n   * @param relativePath - The remainder of the path\n   * @param predicate - The predicate to satisfy to return a node\n   */\n  findRootMostMatchingPathAndValue(\n    relativePath: Path,\n    predicate: (a: T) => boolean\n  ): { path: Path; value: T } | null {\n    if (this.value != null && predicate(this.value)) {\n      return { path: newEmptyPath(), value: this.value };\n    } else {\n      if (pathIsEmpty(relativePath)) {\n        return null;\n      } else {\n        const front = pathGetFront(relativePath);\n        const child = this.children.get(front);\n        if (child !== null) {\n          const childExistingPathAndValue =\n            child.findRootMostMatchingPathAndValue(\n              pathPopFront(relativePath),\n              predicate\n            );\n          if (childExistingPathAndValue != null) {\n            const fullPath = pathChild(\n              new Path(front),\n              childExistingPathAndValue.path\n            );\n            return { path: fullPath, value: childExistingPathAndValue.value };\n          } else {\n            return null;\n          }\n        } else {\n          return null;\n        }\n      }\n    }\n  }\n\n  /**\n   * Find, if it exists, the shortest subpath of the given path that points a defined\n   * value in the tree\n   */\n  findRootMostValueAndPath(\n    relativePath: Path\n  ): { path: Path; value: T } | null {\n    return this.findRootMostMatchingPathAndValue(relativePath, () => true);\n  }\n\n  /**\n   * @returns The subtree at the given path\n   */\n  subtree(relativePath: Path): ImmutableTree<T> {\n    if (pathIsEmpty(relativePath)) {\n      return this;\n    } else {\n      const front = pathGetFront(relativePath);\n      const childTree = this.children.get(front);\n      if (childTree !== null) {\n        return childTree.subtree(pathPopFront(relativePath));\n      } else {\n        return new ImmutableTree<T>(null);\n      }\n    }\n  }\n\n  /**\n   * Sets a value at the specified path.\n   *\n   * @param relativePath - Path to set value at.\n   * @param toSet - Value to set.\n   * @returns Resulting tree.\n   */\n  set(relativePath: Path, toSet: T | null): ImmutableTree<T> {\n    if (pathIsEmpty(relativePath)) {\n      return new ImmutableTree(toSet, this.children);\n    } else {\n      const front = pathGetFront(relativePath);\n      const child = this.children.get(front) || new ImmutableTree<T>(null);\n      const newChild = child.set(pathPopFront(relativePath), toSet);\n      const newChildren = this.children.insert(front, newChild);\n      return new ImmutableTree(this.value, newChildren);\n    }\n  }\n\n  /**\n   * Removes the value at the specified path.\n   *\n   * @param relativePath - Path to value to remove.\n   * @returns Resulting tree.\n   */\n  remove(relativePath: Path): ImmutableTree<T> {\n    if (pathIsEmpty(relativePath)) {\n      if (this.children.isEmpty()) {\n        return new ImmutableTree<T>(null);\n      } else {\n        return new ImmutableTree(null, this.children);\n      }\n    } else {\n      const front = pathGetFront(relativePath);\n      const child = this.children.get(front);\n      if (child) {\n        const newChild = child.remove(pathPopFront(relativePath));\n        let newChildren;\n        if (newChild.isEmpty()) {\n          newChildren = this.children.remove(front);\n        } else {\n          newChildren = this.children.insert(front, newChild);\n        }\n        if (this.value === null && newChildren.isEmpty()) {\n          return new ImmutableTree<T>(null);\n        } else {\n          return new ImmutableTree(this.value, newChildren);\n        }\n      } else {\n        return this;\n      }\n    }\n  }\n\n  /**\n   * Gets a value from the tree.\n   *\n   * @param relativePath - Path to get value for.\n   * @returns Value at path, or null.\n   */\n  get(relativePath: Path): T | null {\n    if (pathIsEmpty(relativePath)) {\n      return this.value;\n    } else {\n      const front = pathGetFront(relativePath);\n      const child = this.children.get(front);\n      if (child) {\n        return child.get(pathPopFront(relativePath));\n      } else {\n        return null;\n      }\n    }\n  }\n\n  /**\n   * Replace the subtree at the specified path with the given new tree.\n   *\n   * @param relativePath - Path to replace subtree for.\n   * @param newTree - New tree.\n   * @returns Resulting tree.\n   */\n  setTree(relativePath: Path, newTree: ImmutableTree<T>): ImmutableTree<T> {\n    if (pathIsEmpty(relativePath)) {\n      return newTree;\n    } else {\n      const front = pathGetFront(relativePath);\n      const child = this.children.get(front) || new ImmutableTree<T>(null);\n      const newChild = child.setTree(pathPopFront(relativePath), newTree);\n      let newChildren;\n      if (newChild.isEmpty()) {\n        newChildren = this.children.remove(front);\n      } else {\n        newChildren = this.children.insert(front, newChild);\n      }\n      return new ImmutableTree(this.value, newChildren);\n    }\n  }\n\n  /**\n   * Performs a depth first fold on this tree. Transforms a tree into a single\n   * value, given a function that operates on the path to a node, an optional\n   * current value, and a map of child names to folded subtrees\n   */\n  fold<V>(fn: (path: Path, value: T, children: { [k: string]: V }) => V): V {\n    return this.fold_(newEmptyPath(), fn);\n  }\n\n  /**\n   * Recursive helper for public-facing fold() method\n   */\n  private fold_<V>(\n    pathSoFar: Path,\n    fn: (path: Path, value: T | null, children: { [k: string]: V }) => V\n  ): V {\n    const accum: { [k: string]: V } = {};\n    this.children.inorderTraversal(\n      (childKey: string, childTree: ImmutableTree<T>) => {\n        accum[childKey] = childTree.fold_(pathChild(pathSoFar, childKey), fn);\n      }\n    );\n    return fn(pathSoFar, this.value, accum);\n  }\n\n  /**\n   * Find the first matching value on the given path. Return the result of applying f to it.\n   */\n  findOnPath<V>(path: Path, f: (path: Path, value: T) => V | null): V | null {\n    return this.findOnPath_(path, newEmptyPath(), f);\n  }\n\n  private findOnPath_<V>(\n    pathToFollow: Path,\n    pathSoFar: Path,\n    f: (path: Path, value: T) => V | null\n  ): V | null {\n    const result = this.value ? f(pathSoFar, this.value) : false;\n    if (result) {\n      return result;\n    } else {\n      if (pathIsEmpty(pathToFollow)) {\n        return null;\n      } else {\n        const front = pathGetFront(pathToFollow)!;\n        const nextChild = this.children.get(front);\n        if (nextChild) {\n          return nextChild.findOnPath_(\n            pathPopFront(pathToFollow),\n            pathChild(pathSoFar, front),\n            f\n          );\n        } else {\n          return null;\n        }\n      }\n    }\n  }\n\n  foreachOnPath(\n    path: Path,\n    f: (path: Path, value: T) => void\n  ): ImmutableTree<T> {\n    return this.foreachOnPath_(path, newEmptyPath(), f);\n  }\n\n  private foreachOnPath_(\n    pathToFollow: Path,\n    currentRelativePath: Path,\n    f: (path: Path, value: T) => void\n  ): ImmutableTree<T> {\n    if (pathIsEmpty(pathToFollow)) {\n      return this;\n    } else {\n      if (this.value) {\n        f(currentRelativePath, this.value);\n      }\n      const front = pathGetFront(pathToFollow);\n      const nextChild = this.children.get(front);\n      if (nextChild) {\n        return nextChild.foreachOnPath_(\n          pathPopFront(pathToFollow),\n          pathChild(currentRelativePath, front),\n          f\n        );\n      } else {\n        return new ImmutableTree<T>(null);\n      }\n    }\n  }\n\n  /**\n   * Calls the given function for each node in the tree that has a value.\n   *\n   * @param f - A function to be called with the path from the root of the tree to\n   * a node, and the value at that node. Called in depth-first order.\n   */\n  foreach(f: (path: Path, value: T) => void) {\n    this.foreach_(newEmptyPath(), f);\n  }\n\n  private foreach_(\n    currentRelativePath: Path,\n    f: (path: Path, value: T) => void\n  ) {\n    this.children.inorderTraversal((childName, childTree) => {\n      childTree.foreach_(pathChild(currentRelativePath, childName), f);\n    });\n    if (this.value) {\n      f(currentRelativePath, this.value);\n    }\n  }\n\n  foreachChild(f: (name: string, value: T) => void) {\n    this.children.inorderTraversal(\n      (childName: string, childTree: ImmutableTree<T>) => {\n        if (childTree.value) {\n          f(childName, childTree.value);\n        }\n      }\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { PRIORITY_INDEX } from './snap/indexes/PriorityIndex';\nimport { NamedNode, Node } from './snap/Node';\nimport { ImmutableTree } from './util/ImmutableTree';\nimport {\n  newEmptyPath,\n  newRelativePath,\n  Path,\n  pathChild,\n  pathIsEmpty\n} from './util/Path';\nimport { each } from './util/util';\n\n/**\n * This class holds a collection of writes that can be applied to nodes in unison. It abstracts away the logic with\n * dealing with priority writes and multiple nested writes. At any given path there is only allowed to be one write\n * modifying that path. Any write to an existing path or shadowing an existing path will modify that existing write\n * to reflect the write added.\n */\nexport class CompoundWrite {\n  constructor(public writeTree_: ImmutableTree<Node>) {}\n\n  static empty(): CompoundWrite {\n    return new CompoundWrite(new ImmutableTree(null));\n  }\n}\n\nexport function compoundWriteAddWrite(\n  compoundWrite: CompoundWrite,\n  path: Path,\n  node: Node\n): CompoundWrite {\n  if (pathIsEmpty(path)) {\n    return new CompoundWrite(new ImmutableTree(node));\n  } else {\n    const rootmost = compoundWrite.writeTree_.findRootMostValueAndPath(path);\n    if (rootmost != null) {\n      const rootMostPath = rootmost.path;\n      let value = rootmost.value;\n      const relativePath = newRelativePath(rootMostPath, path);\n      value = value.updateChild(relativePath, node);\n      return new CompoundWrite(\n        compoundWrite.writeTree_.set(rootMostPath, value)\n      );\n    } else {\n      const subtree = new ImmutableTree(node);\n      const newWriteTree = compoundWrite.writeTree_.setTree(path, subtree);\n      return new CompoundWrite(newWriteTree);\n    }\n  }\n}\n\nexport function compoundWriteAddWrites(\n  compoundWrite: CompoundWrite,\n  path: Path,\n  updates: { [name: string]: Node }\n): CompoundWrite {\n  let newWrite = compoundWrite;\n  each(updates, (childKey: string, node: Node) => {\n    newWrite = compoundWriteAddWrite(newWrite, pathChild(path, childKey), node);\n  });\n  return newWrite;\n}\n\n/**\n * Will remove a write at the given path and deeper paths. This will <em>not</em> modify a write at a higher\n * location, which must be removed by calling this method with that path.\n *\n * @param compoundWrite - The CompoundWrite to remove.\n * @param path - The path at which a write and all deeper writes should be removed\n * @returns The new CompoundWrite with the removed path\n */\nexport function compoundWriteRemoveWrite(\n  compoundWrite: CompoundWrite,\n  path: Path\n): CompoundWrite {\n  if (pathIsEmpty(path)) {\n    return CompoundWrite.empty();\n  } else {\n    const newWriteTree = compoundWrite.writeTree_.setTree(\n      path,\n      new ImmutableTree<Node>(null)\n    );\n    return new CompoundWrite(newWriteTree);\n  }\n}\n\n/**\n * Returns whether this CompoundWrite will fully overwrite a node at a given location and can therefore be\n * considered \"complete\".\n *\n * @param compoundWrite - The CompoundWrite to check.\n * @param path - The path to check for\n * @returns Whether there is a complete write at that path\n */\nexport function compoundWriteHasCompleteWrite(\n  compoundWrite: CompoundWrite,\n  path: Path\n): boolean {\n  return compoundWriteGetCompleteNode(compoundWrite, path) != null;\n}\n\n/**\n * Returns a node for a path if and only if the node is a \"complete\" overwrite at that path. This will not aggregate\n * writes from deeper paths, but will return child nodes from a more shallow path.\n *\n * @param compoundWrite - The CompoundWrite to get the node from.\n * @param path - The path to get a complete write\n * @returns The node if complete at that path, or null otherwise.\n */\nexport function compoundWriteGetCompleteNode(\n  compoundWrite: CompoundWrite,\n  path: Path\n): Node | null {\n  const rootmost = compoundWrite.writeTree_.findRootMostValueAndPath(path);\n  if (rootmost != null) {\n    return compoundWrite.writeTree_\n      .get(rootmost.path)\n      .getChild(newRelativePath(rootmost.path, path));\n  } else {\n    return null;\n  }\n}\n\n/**\n * Returns all children that are guaranteed to be a complete overwrite.\n *\n * @param compoundWrite - The CompoundWrite to get children from.\n * @returns A list of all complete children.\n */\nexport function compoundWriteGetCompleteChildren(\n  compoundWrite: CompoundWrite\n): NamedNode[] {\n  const children: NamedNode[] = [];\n  const node = compoundWrite.writeTree_.value;\n  if (node != null) {\n    // If it's a leaf node, it has no children; so nothing to do.\n    if (!node.isLeafNode()) {\n      (node as ChildrenNode).forEachChild(\n        PRIORITY_INDEX,\n        (childName, childNode) => {\n          children.push(new NamedNode(childName, childNode));\n        }\n      );\n    }\n  } else {\n    compoundWrite.writeTree_.children.inorderTraversal(\n      (childName, childTree) => {\n        if (childTree.value != null) {\n          children.push(new NamedNode(childName, childTree.value));\n        }\n      }\n    );\n  }\n  return children;\n}\n\nexport function compoundWriteChildCompoundWrite(\n  compoundWrite: CompoundWrite,\n  path: Path\n): CompoundWrite {\n  if (pathIsEmpty(path)) {\n    return compoundWrite;\n  } else {\n    const shadowingNode = compoundWriteGetCompleteNode(compoundWrite, path);\n    if (shadowingNode != null) {\n      return new CompoundWrite(new ImmutableTree(shadowingNode));\n    } else {\n      return new CompoundWrite(compoundWrite.writeTree_.subtree(path));\n    }\n  }\n}\n\n/**\n * Returns true if this CompoundWrite is empty and therefore does not modify any nodes.\n * @returns Whether this CompoundWrite is empty\n */\nexport function compoundWriteIsEmpty(compoundWrite: CompoundWrite): boolean {\n  return compoundWrite.writeTree_.isEmpty();\n}\n\n/**\n * Applies this CompoundWrite to a node. The node is returned with all writes from this CompoundWrite applied to the\n * node\n * @param node - The node to apply this CompoundWrite to\n * @returns The node with all writes applied\n */\nexport function compoundWriteApply(\n  compoundWrite: CompoundWrite,\n  node: Node\n): Node {\n  return applySubtreeWrite(newEmptyPath(), compoundWrite.writeTree_, node);\n}\n\nfunction applySubtreeWrite(\n  relativePath: Path,\n  writeTree: ImmutableTree<Node>,\n  node: Node\n): Node {\n  if (writeTree.value != null) {\n    // Since there a write is always a leaf, we're done here\n    return node.updateChild(relativePath, writeTree.value);\n  } else {\n    let priorityWrite = null;\n    writeTree.children.inorderTraversal((childKey, childTree) => {\n      if (childKey === '.priority') {\n        // Apply priorities at the end so we don't update priorities for either empty nodes or forget\n        // to apply priorities to empty nodes that are later filled\n        assert(\n          childTree.value !== null,\n          'Priority writes must always be leaf nodes'\n        );\n        priorityWrite = childTree.value;\n      } else {\n        node = applySubtreeWrite(\n          pathChild(relativePath, childKey),\n          childTree,\n          node\n        );\n      }\n    });\n    // If there was a priority write, we only apply it if the node is not empty\n    if (!node.getChild(relativePath).isEmpty() && priorityWrite !== null) {\n      node = node.updateChild(\n        pathChild(relativePath, '.priority'),\n        priorityWrite\n      );\n    }\n    return node;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, assertionError, safeGet } from '@firebase/util';\n\nimport {\n  CompoundWrite,\n  compoundWriteAddWrite,\n  compoundWriteAddWrites,\n  compoundWriteApply,\n  compoundWriteChildCompoundWrite,\n  compoundWriteGetCompleteChildren,\n  compoundWriteGetCompleteNode,\n  compoundWriteHasCompleteWrite,\n  compoundWriteIsEmpty,\n  compoundWriteRemoveWrite\n} from './CompoundWrite';\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { Index } from './snap/indexes/Index';\nimport { PRIORITY_INDEX } from './snap/indexes/PriorityIndex';\nimport { NamedNode, Node } from './snap/Node';\nimport {\n  newEmptyPath,\n  newRelativePath,\n  Path,\n  pathChild,\n  pathContains,\n  pathGetFront,\n  pathIsEmpty,\n  pathPopFront\n} from './util/Path';\nimport { each } from './util/util';\nimport { CacheNode } from './view/CacheNode';\n\n/**\n * Defines a single user-initiated write operation. May be the result of a set(), transaction(), or update() call. In\n * the case of a set() or transaction, snap wil be non-null.  In the case of an update(), children will be non-null.\n */\nexport interface WriteRecord {\n  writeId: number;\n  path: Path;\n  snap?: Node | null;\n  children?: { [k: string]: Node } | null;\n  visible: boolean;\n}\n\n/**\n * Create a new WriteTreeRef for the given path. For use with a new sync point at the given path.\n *\n */\nexport function writeTreeChildWrites(\n  writeTree: WriteTree,\n  path: Path\n): WriteTreeRef {\n  return newWriteTreeRef(path, writeTree);\n}\n\n/**\n * Record a new overwrite from user code.\n *\n * @param visible - This is set to false by some transactions. It should be excluded from event caches\n */\nexport function writeTreeAddOverwrite(\n  writeTree: WriteTree,\n  path: Path,\n  snap: Node,\n  writeId: number,\n  visible?: boolean\n) {\n  assert(\n    writeId > writeTree.lastWriteId,\n    'Stacking an older write on top of newer ones'\n  );\n  if (visible === undefined) {\n    visible = true;\n  }\n  writeTree.allWrites.push({\n    path,\n    snap,\n    writeId,\n    visible\n  });\n\n  if (visible) {\n    writeTree.visibleWrites = compoundWriteAddWrite(\n      writeTree.visibleWrites,\n      path,\n      snap\n    );\n  }\n  writeTree.lastWriteId = writeId;\n}\n\n/**\n * Record a new merge from user code.\n */\nexport function writeTreeAddMerge(\n  writeTree: WriteTree,\n  path: Path,\n  changedChildren: { [k: string]: Node },\n  writeId: number\n) {\n  assert(\n    writeId > writeTree.lastWriteId,\n    'Stacking an older merge on top of newer ones'\n  );\n  writeTree.allWrites.push({\n    path,\n    children: changedChildren,\n    writeId,\n    visible: true\n  });\n\n  writeTree.visibleWrites = compoundWriteAddWrites(\n    writeTree.visibleWrites,\n    path,\n    changedChildren\n  );\n  writeTree.lastWriteId = writeId;\n}\n\nexport function writeTreeGetWrite(\n  writeTree: WriteTree,\n  writeId: number\n): WriteRecord | null {\n  for (let i = 0; i < writeTree.allWrites.length; i++) {\n    const record = writeTree.allWrites[i];\n    if (record.writeId === writeId) {\n      return record;\n    }\n  }\n  return null;\n}\n\n/**\n * Remove a write (either an overwrite or merge) that has been successfully acknowledge by the server. Recalculates\n * the tree if necessary.  We return true if it may have been visible, meaning views need to reevaluate.\n *\n * @returns true if the write may have been visible (meaning we'll need to reevaluate / raise\n * events as a result).\n */\nexport function writeTreeRemoveWrite(\n  writeTree: WriteTree,\n  writeId: number\n): boolean {\n  // Note: disabling this check. It could be a transaction that preempted another transaction, and thus was applied\n  // out of order.\n  //const validClear = revert || this.allWrites_.length === 0 || writeId <= this.allWrites_[0].writeId;\n  //assert(validClear, \"Either we don't have this write, or it's the first one in the queue\");\n\n  const idx = writeTree.allWrites.findIndex(s => {\n    return s.writeId === writeId;\n  });\n  assert(idx >= 0, 'removeWrite called with nonexistent writeId.');\n  const writeToRemove = writeTree.allWrites[idx];\n  writeTree.allWrites.splice(idx, 1);\n\n  let removedWriteWasVisible = writeToRemove.visible;\n  let removedWriteOverlapsWithOtherWrites = false;\n\n  let i = writeTree.allWrites.length - 1;\n\n  while (removedWriteWasVisible && i >= 0) {\n    const currentWrite = writeTree.allWrites[i];\n    if (currentWrite.visible) {\n      if (\n        i >= idx &&\n        writeTreeRecordContainsPath_(currentWrite, writeToRemove.path)\n      ) {\n        // The removed write was completely shadowed by a subsequent write.\n        removedWriteWasVisible = false;\n      } else if (pathContains(writeToRemove.path, currentWrite.path)) {\n        // Either we're covering some writes or they're covering part of us (depending on which came first).\n        removedWriteOverlapsWithOtherWrites = true;\n      }\n    }\n    i--;\n  }\n\n  if (!removedWriteWasVisible) {\n    return false;\n  } else if (removedWriteOverlapsWithOtherWrites) {\n    // There's some shadowing going on. Just rebuild the visible writes from scratch.\n    writeTreeResetTree_(writeTree);\n    return true;\n  } else {\n    // There's no shadowing.  We can safely just remove the write(s) from visibleWrites.\n    if (writeToRemove.snap) {\n      writeTree.visibleWrites = compoundWriteRemoveWrite(\n        writeTree.visibleWrites,\n        writeToRemove.path\n      );\n    } else {\n      const children = writeToRemove.children;\n      each(children, (childName: string) => {\n        writeTree.visibleWrites = compoundWriteRemoveWrite(\n          writeTree.visibleWrites,\n          pathChild(writeToRemove.path, childName)\n        );\n      });\n    }\n    return true;\n  }\n}\n\nfunction writeTreeRecordContainsPath_(\n  writeRecord: WriteRecord,\n  path: Path\n): boolean {\n  if (writeRecord.snap) {\n    return pathContains(writeRecord.path, path);\n  } else {\n    for (const childName in writeRecord.children) {\n      if (\n        writeRecord.children.hasOwnProperty(childName) &&\n        pathContains(pathChild(writeRecord.path, childName), path)\n      ) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n\n/**\n * Re-layer the writes and merges into a tree so we can efficiently calculate event snapshots\n */\nfunction writeTreeResetTree_(writeTree: WriteTree) {\n  writeTree.visibleWrites = writeTreeLayerTree_(\n    writeTree.allWrites,\n    writeTreeDefaultFilter_,\n    newEmptyPath()\n  );\n  if (writeTree.allWrites.length > 0) {\n    writeTree.lastWriteId =\n      writeTree.allWrites[writeTree.allWrites.length - 1].writeId;\n  } else {\n    writeTree.lastWriteId = -1;\n  }\n}\n\n/**\n * The default filter used when constructing the tree. Keep everything that's visible.\n */\nfunction writeTreeDefaultFilter_(write: WriteRecord) {\n  return write.visible;\n}\n\n/**\n * Static method. Given an array of WriteRecords, a filter for which ones to include, and a path, construct the tree of\n * event data at that path.\n */\nfunction writeTreeLayerTree_(\n  writes: WriteRecord[],\n  filter: (w: WriteRecord) => boolean,\n  treeRoot: Path\n): CompoundWrite {\n  let compoundWrite = CompoundWrite.empty();\n  for (let i = 0; i < writes.length; ++i) {\n    const write = writes[i];\n    // Theory, a later set will either:\n    // a) abort a relevant transaction, so no need to worry about excluding it from calculating that transaction\n    // b) not be relevant to a transaction (separate branch), so again will not affect the data for that transaction\n    if (filter(write)) {\n      const writePath = write.path;\n      let relativePath: Path;\n      if (write.snap) {\n        if (pathContains(treeRoot, writePath)) {\n          relativePath = newRelativePath(treeRoot, writePath);\n          compoundWrite = compoundWriteAddWrite(\n            compoundWrite,\n            relativePath,\n            write.snap\n          );\n        } else if (pathContains(writePath, treeRoot)) {\n          relativePath = newRelativePath(writePath, treeRoot);\n          compoundWrite = compoundWriteAddWrite(\n            compoundWrite,\n            newEmptyPath(),\n            write.snap.getChild(relativePath)\n          );\n        } else {\n          // There is no overlap between root path and write path, ignore write\n        }\n      } else if (write.children) {\n        if (pathContains(treeRoot, writePath)) {\n          relativePath = newRelativePath(treeRoot, writePath);\n          compoundWrite = compoundWriteAddWrites(\n            compoundWrite,\n            relativePath,\n            write.children\n          );\n        } else if (pathContains(writePath, treeRoot)) {\n          relativePath = newRelativePath(writePath, treeRoot);\n          if (pathIsEmpty(relativePath)) {\n            compoundWrite = compoundWriteAddWrites(\n              compoundWrite,\n              newEmptyPath(),\n              write.children\n            );\n          } else {\n            const child = safeGet(write.children, pathGetFront(relativePath));\n            if (child) {\n              // There exists a child in this node that matches the root path\n              const deepNode = child.getChild(pathPopFront(relativePath));\n              compoundWrite = compoundWriteAddWrite(\n                compoundWrite,\n                newEmptyPath(),\n                deepNode\n              );\n            }\n          }\n        } else {\n          // There is no overlap between root path and write path, ignore write\n        }\n      } else {\n        throw assertionError('WriteRecord should have .snap or .children');\n      }\n    }\n  }\n  return compoundWrite;\n}\n\n/**\n * Return a complete snapshot for the given path if there's visible write data at that path, else null.\n * No server data is considered.\n *\n */\nexport function writeTreeGetCompleteWriteData(\n  writeTree: WriteTree,\n  path: Path\n): Node | null {\n  return compoundWriteGetCompleteNode(writeTree.visibleWrites, path);\n}\n\n/**\n * Given optional, underlying server data, and an optional set of constraints (exclude some sets, include hidden\n * writes), attempt to calculate a complete snapshot for the given path\n *\n * @param writeIdsToExclude - An optional set to be excluded\n * @param includeHiddenWrites - Defaults to false, whether or not to layer on writes with visible set to false\n */\nexport function writeTreeCalcCompleteEventCache(\n  writeTree: WriteTree,\n  treePath: Path,\n  completeServerCache: Node | null,\n  writeIdsToExclude?: number[],\n  includeHiddenWrites?: boolean\n): Node | null {\n  if (!writeIdsToExclude && !includeHiddenWrites) {\n    const shadowingNode = compoundWriteGetCompleteNode(\n      writeTree.visibleWrites,\n      treePath\n    );\n    if (shadowingNode != null) {\n      return shadowingNode;\n    } else {\n      const subMerge = compoundWriteChildCompoundWrite(\n        writeTree.visibleWrites,\n        treePath\n      );\n      if (compoundWriteIsEmpty(subMerge)) {\n        return completeServerCache;\n      } else if (\n        completeServerCache == null &&\n        !compoundWriteHasCompleteWrite(subMerge, newEmptyPath())\n      ) {\n        // We wouldn't have a complete snapshot, since there's no underlying data and no complete shadow\n        return null;\n      } else {\n        const layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\n        return compoundWriteApply(subMerge, layeredCache);\n      }\n    }\n  } else {\n    const merge = compoundWriteChildCompoundWrite(\n      writeTree.visibleWrites,\n      treePath\n    );\n    if (!includeHiddenWrites && compoundWriteIsEmpty(merge)) {\n      return completeServerCache;\n    } else {\n      // If the server cache is null, and we don't have a complete cache, we need to return null\n      if (\n        !includeHiddenWrites &&\n        completeServerCache == null &&\n        !compoundWriteHasCompleteWrite(merge, newEmptyPath())\n      ) {\n        return null;\n      } else {\n        const filter = function (write: WriteRecord) {\n          return (\n            (write.visible || includeHiddenWrites) &&\n            (!writeIdsToExclude ||\n              !~writeIdsToExclude.indexOf(write.writeId)) &&\n            (pathContains(write.path, treePath) ||\n              pathContains(treePath, write.path))\n          );\n        };\n        const mergeAtPath = writeTreeLayerTree_(\n          writeTree.allWrites,\n          filter,\n          treePath\n        );\n        const layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\n        return compoundWriteApply(mergeAtPath, layeredCache);\n      }\n    }\n  }\n}\n\n/**\n * With optional, underlying server data, attempt to return a children node of children that we have complete data for.\n * Used when creating new views, to pre-fill their complete event children snapshot.\n */\nexport function writeTreeCalcCompleteEventChildren(\n  writeTree: WriteTree,\n  treePath: Path,\n  completeServerChildren: ChildrenNode | null\n) {\n  let completeChildren = ChildrenNode.EMPTY_NODE as Node;\n  const topLevelSet = compoundWriteGetCompleteNode(\n    writeTree.visibleWrites,\n    treePath\n  );\n  if (topLevelSet) {\n    if (!topLevelSet.isLeafNode()) {\n      // we're shadowing everything. Return the children.\n      topLevelSet.forEachChild(PRIORITY_INDEX, (childName, childSnap) => {\n        completeChildren = completeChildren.updateImmediateChild(\n          childName,\n          childSnap\n        );\n      });\n    }\n    return completeChildren;\n  } else if (completeServerChildren) {\n    // Layer any children we have on top of this\n    // We know we don't have a top-level set, so just enumerate existing children\n    const merge = compoundWriteChildCompoundWrite(\n      writeTree.visibleWrites,\n      treePath\n    );\n    completeServerChildren.forEachChild(\n      PRIORITY_INDEX,\n      (childName, childNode) => {\n        const node = compoundWriteApply(\n          compoundWriteChildCompoundWrite(merge, new Path(childName)),\n          childNode\n        );\n        completeChildren = completeChildren.updateImmediateChild(\n          childName,\n          node\n        );\n      }\n    );\n    // Add any complete children we have from the set\n    compoundWriteGetCompleteChildren(merge).forEach(namedNode => {\n      completeChildren = completeChildren.updateImmediateChild(\n        namedNode.name,\n        namedNode.node\n      );\n    });\n    return completeChildren;\n  } else {\n    // We don't have anything to layer on top of. Layer on any children we have\n    // Note that we can return an empty snap if we have a defined delete\n    const merge = compoundWriteChildCompoundWrite(\n      writeTree.visibleWrites,\n      treePath\n    );\n    compoundWriteGetCompleteChildren(merge).forEach(namedNode => {\n      completeChildren = completeChildren.updateImmediateChild(\n        namedNode.name,\n        namedNode.node\n      );\n    });\n    return completeChildren;\n  }\n}\n\n/**\n * Given that the underlying server data has updated, determine what, if anything, needs to be\n * applied to the event cache.\n *\n * Possibilities:\n *\n * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\n *\n * 2. Some write is completely shadowing. No events to be raised\n *\n * 3. Is partially shadowed. Events\n *\n * Either existingEventSnap or existingServerSnap must exist\n */\nexport function writeTreeCalcEventCacheAfterServerOverwrite(\n  writeTree: WriteTree,\n  treePath: Path,\n  childPath: Path,\n  existingEventSnap: Node | null,\n  existingServerSnap: Node | null\n): Node | null {\n  assert(\n    existingEventSnap || existingServerSnap,\n    'Either existingEventSnap or existingServerSnap must exist'\n  );\n  const path = pathChild(treePath, childPath);\n  if (compoundWriteHasCompleteWrite(writeTree.visibleWrites, path)) {\n    // At this point we can probably guarantee that we're in case 2, meaning no events\n    // May need to check visibility while doing the findRootMostValueAndPath call\n    return null;\n  } else {\n    // No complete shadowing. We're either partially shadowing or not shadowing at all.\n    const childMerge = compoundWriteChildCompoundWrite(\n      writeTree.visibleWrites,\n      path\n    );\n    if (compoundWriteIsEmpty(childMerge)) {\n      // We're not shadowing at all. Case 1\n      return existingServerSnap.getChild(childPath);\n    } else {\n      // This could be more efficient if the serverNode + updates doesn't change the eventSnap\n      // However this is tricky to find out, since user updates don't necessary change the server\n      // snap, e.g. priority updates on empty nodes, or deep deletes. Another special case is if the server\n      // adds nodes, but doesn't change any existing writes. It is therefore not enough to\n      // only check if the updates change the serverNode.\n      // Maybe check if the merge tree contains these special cases and only do a full overwrite in that case?\n      return compoundWriteApply(\n        childMerge,\n        existingServerSnap.getChild(childPath)\n      );\n    }\n  }\n}\n\n/**\n * Returns a complete child for a given server snap after applying all user writes or null if there is no\n * complete child for this ChildKey.\n */\nexport function writeTreeCalcCompleteChild(\n  writeTree: WriteTree,\n  treePath: Path,\n  childKey: string,\n  existingServerSnap: CacheNode\n): Node | null {\n  const path = pathChild(treePath, childKey);\n  const shadowingNode = compoundWriteGetCompleteNode(\n    writeTree.visibleWrites,\n    path\n  );\n  if (shadowingNode != null) {\n    return shadowingNode;\n  } else {\n    if (existingServerSnap.isCompleteForChild(childKey)) {\n      const childMerge = compoundWriteChildCompoundWrite(\n        writeTree.visibleWrites,\n        path\n      );\n      return compoundWriteApply(\n        childMerge,\n        existingServerSnap.getNode().getImmediateChild(childKey)\n      );\n    } else {\n      return null;\n    }\n  }\n}\n\n/**\n * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\n * a higher path, this will return the child of that write relative to the write and this path.\n * Returns null if there is no write at this path.\n */\nexport function writeTreeShadowingWrite(\n  writeTree: WriteTree,\n  path: Path\n): Node | null {\n  return compoundWriteGetCompleteNode(writeTree.visibleWrites, path);\n}\n\n/**\n * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\n * the window, but may now be in the window.\n */\nexport function writeTreeCalcIndexedSlice(\n  writeTree: WriteTree,\n  treePath: Path,\n  completeServerData: Node | null,\n  startPost: NamedNode,\n  count: number,\n  reverse: boolean,\n  index: Index\n): NamedNode[] {\n  let toIterate: Node;\n  const merge = compoundWriteChildCompoundWrite(\n    writeTree.visibleWrites,\n    treePath\n  );\n  const shadowingNode = compoundWriteGetCompleteNode(merge, newEmptyPath());\n  if (shadowingNode != null) {\n    toIterate = shadowingNode;\n  } else if (completeServerData != null) {\n    toIterate = compoundWriteApply(merge, completeServerData);\n  } else {\n    // no children to iterate on\n    return [];\n  }\n  toIterate = toIterate.withIndex(index);\n  if (!toIterate.isEmpty() && !toIterate.isLeafNode()) {\n    const nodes = [];\n    const cmp = index.getCompare();\n    const iter = reverse\n      ? (toIterate as ChildrenNode).getReverseIteratorFrom(startPost, index)\n      : (toIterate as ChildrenNode).getIteratorFrom(startPost, index);\n    let next = iter.getNext();\n    while (next && nodes.length < count) {\n      if (cmp(next, startPost) !== 0) {\n        nodes.push(next);\n      }\n      next = iter.getNext();\n    }\n    return nodes;\n  } else {\n    return [];\n  }\n}\n\nexport function newWriteTree(): WriteTree {\n  return {\n    visibleWrites: CompoundWrite.empty(),\n    allWrites: [],\n    lastWriteId: -1\n  };\n}\n\n/**\n * WriteTree tracks all pending user-initiated writes and has methods to calculate the result of merging them\n * with underlying server data (to create \"event cache\" data).  Pending writes are added with addOverwrite()\n * and addMerge(), and removed with removeWrite().\n */\nexport interface WriteTree {\n  /**\n   * A tree tracking the result of applying all visible writes.  This does not include transactions with\n   * applyLocally=false or writes that are completely shadowed by other writes.\n   */\n  visibleWrites: CompoundWrite;\n\n  /**\n   * A list of all pending writes, regardless of visibility and shadowed-ness.  Used to calculate arbitrary\n   * sets of the changed data, such as hidden writes (from transactions) or changes with certain writes excluded (also\n   * used by transactions).\n   */\n  allWrites: WriteRecord[];\n\n  lastWriteId: number;\n}\n\n/**\n * If possible, returns a complete event cache, using the underlying server data if possible. In addition, can be used\n * to get a cache that includes hidden writes, and excludes arbitrary writes. Note that customizing the returned node\n * can lead to a more expensive calculation.\n *\n * @param writeIdsToExclude - Optional writes to exclude.\n * @param includeHiddenWrites - Defaults to false, whether or not to layer on writes with visible set to false\n */\nexport function writeTreeRefCalcCompleteEventCache(\n  writeTreeRef: WriteTreeRef,\n  completeServerCache: Node | null,\n  writeIdsToExclude?: number[],\n  includeHiddenWrites?: boolean\n): Node | null {\n  return writeTreeCalcCompleteEventCache(\n    writeTreeRef.writeTree,\n    writeTreeRef.treePath,\n    completeServerCache,\n    writeIdsToExclude,\n    includeHiddenWrites\n  );\n}\n\n/**\n * If possible, returns a children node containing all of the complete children we have data for. The returned data is a\n * mix of the given server data and write data.\n *\n */\nexport function writeTreeRefCalcCompleteEventChildren(\n  writeTreeRef: WriteTreeRef,\n  completeServerChildren: ChildrenNode | null\n): ChildrenNode {\n  return writeTreeCalcCompleteEventChildren(\n    writeTreeRef.writeTree,\n    writeTreeRef.treePath,\n    completeServerChildren\n  ) as ChildrenNode;\n}\n\n/**\n * Given that either the underlying server data has updated or the outstanding writes have updated, determine what,\n * if anything, needs to be applied to the event cache.\n *\n * Possibilities:\n *\n * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\n *\n * 2. Some write is completely shadowing. No events to be raised\n *\n * 3. Is partially shadowed. Events should be raised\n *\n * Either existingEventSnap or existingServerSnap must exist, this is validated via an assert\n *\n *\n */\nexport function writeTreeRefCalcEventCacheAfterServerOverwrite(\n  writeTreeRef: WriteTreeRef,\n  path: Path,\n  existingEventSnap: Node | null,\n  existingServerSnap: Node | null\n): Node | null {\n  return writeTreeCalcEventCacheAfterServerOverwrite(\n    writeTreeRef.writeTree,\n    writeTreeRef.treePath,\n    path,\n    existingEventSnap,\n    existingServerSnap\n  );\n}\n\n/**\n * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\n * a higher path, this will return the child of that write relative to the write and this path.\n * Returns null if there is no write at this path.\n *\n */\nexport function writeTreeRefShadowingWrite(\n  writeTreeRef: WriteTreeRef,\n  path: Path\n): Node | null {\n  return writeTreeShadowingWrite(\n    writeTreeRef.writeTree,\n    pathChild(writeTreeRef.treePath, path)\n  );\n}\n\n/**\n * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\n * the window, but may now be in the window\n */\nexport function writeTreeRefCalcIndexedSlice(\n  writeTreeRef: WriteTreeRef,\n  completeServerData: Node | null,\n  startPost: NamedNode,\n  count: number,\n  reverse: boolean,\n  index: Index\n): NamedNode[] {\n  return writeTreeCalcIndexedSlice(\n    writeTreeRef.writeTree,\n    writeTreeRef.treePath,\n    completeServerData,\n    startPost,\n    count,\n    reverse,\n    index\n  );\n}\n\n/**\n * Returns a complete child for a given server snap after applying all user writes or null if there is no\n * complete child for this ChildKey.\n */\nexport function writeTreeRefCalcCompleteChild(\n  writeTreeRef: WriteTreeRef,\n  childKey: string,\n  existingServerCache: CacheNode\n): Node | null {\n  return writeTreeCalcCompleteChild(\n    writeTreeRef.writeTree,\n    writeTreeRef.treePath,\n    childKey,\n    existingServerCache\n  );\n}\n\n/**\n * Return a WriteTreeRef for a child.\n */\nexport function writeTreeRefChild(\n  writeTreeRef: WriteTreeRef,\n  childName: string\n): WriteTreeRef {\n  return newWriteTreeRef(\n    pathChild(writeTreeRef.treePath, childName),\n    writeTreeRef.writeTree\n  );\n}\n\nexport function newWriteTreeRef(\n  path: Path,\n  writeTree: WriteTree\n): WriteTreeRef {\n  return {\n    treePath: path,\n    writeTree\n  };\n}\n\n/**\n * A WriteTreeRef wraps a WriteTree and a path, for convenient access to a particular subtree.  All of the methods\n * just proxy to the underlying WriteTree.\n *\n */\nexport interface WriteTreeRef {\n  /**\n   * The path to this particular write tree ref. Used for calling methods on writeTree_ while exposing a simpler\n   * interface to callers.\n   */\n  readonly treePath: Path;\n\n  /**\n   * * A reference to the actual tree of write data. All methods are pass-through to the tree, but with the appropriate\n   * path prefixed.\n   *\n   * This lets us make cheap references to points in the tree for sync points without having to copy and maintain all of\n   * the data.\n   */\n  readonly writeTree: WriteTree;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, assertionError } from '@firebase/util';\n\nimport {\n  Change,\n  ChangeType,\n  changeChildAdded,\n  changeChildChanged,\n  changeChildRemoved\n} from './Change';\n\nexport class ChildChangeAccumulator {\n  private readonly changeMap: Map<string, Change> = new Map();\n\n  trackChildChange(change: Change) {\n    const type = change.type;\n    const childKey = change.childName!;\n    assert(\n      type === ChangeType.CHILD_ADDED ||\n        type === ChangeType.CHILD_CHANGED ||\n        type === ChangeType.CHILD_REMOVED,\n      'Only child changes supported for tracking'\n    );\n    assert(\n      childKey !== '.priority',\n      'Only non-priority child changes can be tracked.'\n    );\n    const oldChange = this.changeMap.get(childKey);\n    if (oldChange) {\n      const oldType = oldChange.type;\n      if (\n        type === ChangeType.CHILD_ADDED &&\n        oldType === ChangeType.CHILD_REMOVED\n      ) {\n        this.changeMap.set(\n          childKey,\n          changeChildChanged(\n            childKey,\n            change.snapshotNode,\n            oldChange.snapshotNode\n          )\n        );\n      } else if (\n        type === ChangeType.CHILD_REMOVED &&\n        oldType === ChangeType.CHILD_ADDED\n      ) {\n        this.changeMap.delete(childKey);\n      } else if (\n        type === ChangeType.CHILD_REMOVED &&\n        oldType === ChangeType.CHILD_CHANGED\n      ) {\n        this.changeMap.set(\n          childKey,\n          changeChildRemoved(childKey, oldChange.oldSnap)\n        );\n      } else if (\n        type === ChangeType.CHILD_CHANGED &&\n        oldType === ChangeType.CHILD_ADDED\n      ) {\n        this.changeMap.set(\n          childKey,\n          changeChildAdded(childKey, change.snapshotNode)\n        );\n      } else if (\n        type === ChangeType.CHILD_CHANGED &&\n        oldType === ChangeType.CHILD_CHANGED\n      ) {\n        this.changeMap.set(\n          childKey,\n          changeChildChanged(childKey, change.snapshotNode, oldChange.oldSnap)\n        );\n      } else {\n        throw assertionError(\n          'Illegal combination of changes: ' +\n            change +\n            ' occurred after ' +\n            oldChange\n        );\n      }\n    } else {\n      this.changeMap.set(childKey, change);\n    }\n  }\n\n  getChanges(): Change[] {\n    return Array.from(this.changeMap.values());\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Index } from '../snap/indexes/Index';\nimport { NamedNode, Node } from '../snap/Node';\nimport {\n  WriteTreeRef,\n  writeTreeRefCalcCompleteChild,\n  writeTreeRefCalcIndexedSlice\n} from '../WriteTree';\n\nimport { CacheNode } from './CacheNode';\nimport { ViewCache, viewCacheGetCompleteServerSnap } from './ViewCache';\n\n/**\n * Since updates to filtered nodes might require nodes to be pulled in from \"outside\" the node, this interface\n * can help to get complete children that can be pulled in.\n * A class implementing this interface takes potentially multiple sources (e.g. user writes, server data from\n * other views etc.) to try it's best to get a complete child that might be useful in pulling into the view.\n *\n * @interface\n */\nexport interface CompleteChildSource {\n  getCompleteChild(childKey: string): Node | null;\n\n  getChildAfterChild(\n    index: Index,\n    child: NamedNode,\n    reverse: boolean\n  ): NamedNode | null;\n}\n\n/**\n * An implementation of CompleteChildSource that never returns any additional children\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport class NoCompleteChildSource_ implements CompleteChildSource {\n  getCompleteChild(childKey?: string): Node | null {\n    return null;\n  }\n  getChildAfterChild(\n    index?: Index,\n    child?: NamedNode,\n    reverse?: boolean\n  ): NamedNode | null {\n    return null;\n  }\n}\n\n/**\n * Singleton instance.\n */\nexport const NO_COMPLETE_CHILD_SOURCE = new NoCompleteChildSource_();\n\n/**\n * An implementation of CompleteChildSource that uses a WriteTree in addition to any other server data or\n * old event caches available to calculate complete children.\n */\nexport class WriteTreeCompleteChildSource implements CompleteChildSource {\n  constructor(\n    private writes_: WriteTreeRef,\n    private viewCache_: ViewCache,\n    private optCompleteServerCache_: Node | null = null\n  ) {}\n  getCompleteChild(childKey: string): Node | null {\n    const node = this.viewCache_.eventCache;\n    if (node.isCompleteForChild(childKey)) {\n      return node.getNode().getImmediateChild(childKey);\n    } else {\n      const serverNode =\n        this.optCompleteServerCache_ != null\n          ? new CacheNode(this.optCompleteServerCache_, true, false)\n          : this.viewCache_.serverCache;\n      return writeTreeRefCalcCompleteChild(this.writes_, childKey, serverNode);\n    }\n  }\n  getChildAfterChild(\n    index: Index,\n    child: NamedNode,\n    reverse: boolean\n  ): NamedNode | null {\n    const completeServerData =\n      this.optCompleteServerCache_ != null\n        ? this.optCompleteServerCache_\n        : viewCacheGetCompleteServerSnap(this.viewCache_);\n    const nodes = writeTreeRefCalcIndexedSlice(\n      this.writes_,\n      completeServerData,\n      child,\n      1,\n      reverse,\n      index\n    );\n    if (nodes.length === 0) {\n      return null;\n    } else {\n      return nodes[0];\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, assertionError } from '@firebase/util';\n\nimport { AckUserWrite } from '../operation/AckUserWrite';\nimport { Merge } from '../operation/Merge';\nimport { Operation, OperationType } from '../operation/Operation';\nimport { Overwrite } from '../operation/Overwrite';\nimport { ChildrenNode } from '../snap/ChildrenNode';\nimport { KEY_INDEX } from '../snap/indexes/KeyIndex';\nimport { Node } from '../snap/Node';\nimport { ImmutableTree } from '../util/ImmutableTree';\nimport {\n  newEmptyPath,\n  Path,\n  pathChild,\n  pathGetBack,\n  pathGetFront,\n  pathGetLength,\n  pathIsEmpty,\n  pathParent,\n  pathPopFront\n} from '../util/Path';\nimport {\n  WriteTreeRef,\n  writeTreeRefCalcCompleteChild,\n  writeTreeRefCalcCompleteEventCache,\n  writeTreeRefCalcCompleteEventChildren,\n  writeTreeRefCalcEventCacheAfterServerOverwrite,\n  writeTreeRefShadowingWrite\n} from '../WriteTree';\n\nimport { Change, changeValue } from './Change';\nimport { ChildChangeAccumulator } from './ChildChangeAccumulator';\nimport {\n  CompleteChildSource,\n  NO_COMPLETE_CHILD_SOURCE,\n  WriteTreeCompleteChildSource\n} from './CompleteChildSource';\nimport { NodeFilter } from './filter/NodeFilter';\nimport {\n  ViewCache,\n  viewCacheGetCompleteEventSnap,\n  viewCacheGetCompleteServerSnap,\n  viewCacheUpdateEventSnap,\n  viewCacheUpdateServerSnap\n} from './ViewCache';\n\nexport interface ProcessorResult {\n  readonly viewCache: ViewCache;\n  readonly changes: Change[];\n}\n\nexport interface ViewProcessor {\n  readonly filter: NodeFilter;\n}\n\nexport function newViewProcessor(filter: NodeFilter): ViewProcessor {\n  return { filter };\n}\n\nexport function viewProcessorAssertIndexed(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache\n): void {\n  assert(\n    viewCache.eventCache.getNode().isIndexed(viewProcessor.filter.getIndex()),\n    'Event snap not indexed'\n  );\n  assert(\n    viewCache.serverCache.getNode().isIndexed(viewProcessor.filter.getIndex()),\n    'Server snap not indexed'\n  );\n}\n\nexport function viewProcessorApplyOperation(\n  viewProcessor: ViewProcessor,\n  oldViewCache: ViewCache,\n  operation: Operation,\n  writesCache: WriteTreeRef,\n  completeCache: Node | null\n): ProcessorResult {\n  const accumulator = new ChildChangeAccumulator();\n  let newViewCache, filterServerNode;\n  if (operation.type === OperationType.OVERWRITE) {\n    const overwrite = operation as Overwrite;\n    if (overwrite.source.fromUser) {\n      newViewCache = viewProcessorApplyUserOverwrite(\n        viewProcessor,\n        oldViewCache,\n        overwrite.path,\n        overwrite.snap,\n        writesCache,\n        completeCache,\n        accumulator\n      );\n    } else {\n      assert(overwrite.source.fromServer, 'Unknown source.');\n      // We filter the node if it's a tagged update or the node has been previously filtered  and the\n      // update is not at the root in which case it is ok (and necessary) to mark the node unfiltered\n      // again\n      filterServerNode =\n        overwrite.source.tagged ||\n        (oldViewCache.serverCache.isFiltered() && !pathIsEmpty(overwrite.path));\n      newViewCache = viewProcessorApplyServerOverwrite(\n        viewProcessor,\n        oldViewCache,\n        overwrite.path,\n        overwrite.snap,\n        writesCache,\n        completeCache,\n        filterServerNode,\n        accumulator\n      );\n    }\n  } else if (operation.type === OperationType.MERGE) {\n    const merge = operation as Merge;\n    if (merge.source.fromUser) {\n      newViewCache = viewProcessorApplyUserMerge(\n        viewProcessor,\n        oldViewCache,\n        merge.path,\n        merge.children,\n        writesCache,\n        completeCache,\n        accumulator\n      );\n    } else {\n      assert(merge.source.fromServer, 'Unknown source.');\n      // We filter the node if it's a tagged update or the node has been previously filtered\n      filterServerNode =\n        merge.source.tagged || oldViewCache.serverCache.isFiltered();\n      newViewCache = viewProcessorApplyServerMerge(\n        viewProcessor,\n        oldViewCache,\n        merge.path,\n        merge.children,\n        writesCache,\n        completeCache,\n        filterServerNode,\n        accumulator\n      );\n    }\n  } else if (operation.type === OperationType.ACK_USER_WRITE) {\n    const ackUserWrite = operation as AckUserWrite;\n    if (!ackUserWrite.revert) {\n      newViewCache = viewProcessorAckUserWrite(\n        viewProcessor,\n        oldViewCache,\n        ackUserWrite.path,\n        ackUserWrite.affectedTree,\n        writesCache,\n        completeCache,\n        accumulator\n      );\n    } else {\n      newViewCache = viewProcessorRevertUserWrite(\n        viewProcessor,\n        oldViewCache,\n        ackUserWrite.path,\n        writesCache,\n        completeCache,\n        accumulator\n      );\n    }\n  } else if (operation.type === OperationType.LISTEN_COMPLETE) {\n    newViewCache = viewProcessorListenComplete(\n      viewProcessor,\n      oldViewCache,\n      operation.path,\n      writesCache,\n      accumulator\n    );\n  } else {\n    throw assertionError('Unknown operation type: ' + operation.type);\n  }\n  const changes = accumulator.getChanges();\n  viewProcessorMaybeAddValueEvent(oldViewCache, newViewCache, changes);\n  return { viewCache: newViewCache, changes };\n}\n\nfunction viewProcessorMaybeAddValueEvent(\n  oldViewCache: ViewCache,\n  newViewCache: ViewCache,\n  accumulator: Change[]\n): void {\n  const eventSnap = newViewCache.eventCache;\n  if (eventSnap.isFullyInitialized()) {\n    const isLeafOrEmpty =\n      eventSnap.getNode().isLeafNode() || eventSnap.getNode().isEmpty();\n    const oldCompleteSnap = viewCacheGetCompleteEventSnap(oldViewCache);\n    if (\n      accumulator.length > 0 ||\n      !oldViewCache.eventCache.isFullyInitialized() ||\n      (isLeafOrEmpty && !eventSnap.getNode().equals(oldCompleteSnap)) ||\n      !eventSnap.getNode().getPriority().equals(oldCompleteSnap.getPriority())\n    ) {\n      accumulator.push(\n        changeValue(viewCacheGetCompleteEventSnap(newViewCache))\n      );\n    }\n  }\n}\n\nfunction viewProcessorGenerateEventCacheAfterServerEvent(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache,\n  changePath: Path,\n  writesCache: WriteTreeRef,\n  source: CompleteChildSource,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  const oldEventSnap = viewCache.eventCache;\n  if (writeTreeRefShadowingWrite(writesCache, changePath) != null) {\n    // we have a shadowing write, ignore changes\n    return viewCache;\n  } else {\n    let newEventCache, serverNode;\n    if (pathIsEmpty(changePath)) {\n      // TODO: figure out how this plays with \"sliding ack windows\"\n      assert(\n        viewCache.serverCache.isFullyInitialized(),\n        'If change path is empty, we must have complete server data'\n      );\n      if (viewCache.serverCache.isFiltered()) {\n        // We need to special case this, because we need to only apply writes to complete children, or\n        // we might end up raising events for incomplete children. If the server data is filtered deep\n        // writes cannot be guaranteed to be complete\n        const serverCache = viewCacheGetCompleteServerSnap(viewCache);\n        const completeChildren =\n          serverCache instanceof ChildrenNode\n            ? serverCache\n            : ChildrenNode.EMPTY_NODE;\n        const completeEventChildren = writeTreeRefCalcCompleteEventChildren(\n          writesCache,\n          completeChildren\n        );\n        newEventCache = viewProcessor.filter.updateFullNode(\n          viewCache.eventCache.getNode(),\n          completeEventChildren,\n          accumulator\n        );\n      } else {\n        const completeNode = writeTreeRefCalcCompleteEventCache(\n          writesCache,\n          viewCacheGetCompleteServerSnap(viewCache)\n        );\n        newEventCache = viewProcessor.filter.updateFullNode(\n          viewCache.eventCache.getNode(),\n          completeNode,\n          accumulator\n        );\n      }\n    } else {\n      const childKey = pathGetFront(changePath);\n      if (childKey === '.priority') {\n        assert(\n          pathGetLength(changePath) === 1,\n          \"Can't have a priority with additional path components\"\n        );\n        const oldEventNode = oldEventSnap.getNode();\n        serverNode = viewCache.serverCache.getNode();\n        // we might have overwrites for this priority\n        const updatedPriority = writeTreeRefCalcEventCacheAfterServerOverwrite(\n          writesCache,\n          changePath,\n          oldEventNode,\n          serverNode\n        );\n        if (updatedPriority != null) {\n          newEventCache = viewProcessor.filter.updatePriority(\n            oldEventNode,\n            updatedPriority\n          );\n        } else {\n          // priority didn't change, keep old node\n          newEventCache = oldEventSnap.getNode();\n        }\n      } else {\n        const childChangePath = pathPopFront(changePath);\n        // update child\n        let newEventChild;\n        if (oldEventSnap.isCompleteForChild(childKey)) {\n          serverNode = viewCache.serverCache.getNode();\n          const eventChildUpdate =\n            writeTreeRefCalcEventCacheAfterServerOverwrite(\n              writesCache,\n              changePath,\n              oldEventSnap.getNode(),\n              serverNode\n            );\n          if (eventChildUpdate != null) {\n            newEventChild = oldEventSnap\n              .getNode()\n              .getImmediateChild(childKey)\n              .updateChild(childChangePath, eventChildUpdate);\n          } else {\n            // Nothing changed, just keep the old child\n            newEventChild = oldEventSnap.getNode().getImmediateChild(childKey);\n          }\n        } else {\n          newEventChild = writeTreeRefCalcCompleteChild(\n            writesCache,\n            childKey,\n            viewCache.serverCache\n          );\n        }\n        if (newEventChild != null) {\n          newEventCache = viewProcessor.filter.updateChild(\n            oldEventSnap.getNode(),\n            childKey,\n            newEventChild,\n            childChangePath,\n            source,\n            accumulator\n          );\n        } else {\n          // no complete child available or no change\n          newEventCache = oldEventSnap.getNode();\n        }\n      }\n    }\n    return viewCacheUpdateEventSnap(\n      viewCache,\n      newEventCache,\n      oldEventSnap.isFullyInitialized() || pathIsEmpty(changePath),\n      viewProcessor.filter.filtersNodes()\n    );\n  }\n}\n\nfunction viewProcessorApplyServerOverwrite(\n  viewProcessor: ViewProcessor,\n  oldViewCache: ViewCache,\n  changePath: Path,\n  changedSnap: Node,\n  writesCache: WriteTreeRef,\n  completeCache: Node | null,\n  filterServerNode: boolean,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  const oldServerSnap = oldViewCache.serverCache;\n  let newServerCache;\n  const serverFilter = filterServerNode\n    ? viewProcessor.filter\n    : viewProcessor.filter.getIndexedFilter();\n  if (pathIsEmpty(changePath)) {\n    newServerCache = serverFilter.updateFullNode(\n      oldServerSnap.getNode(),\n      changedSnap,\n      null\n    );\n  } else if (serverFilter.filtersNodes() && !oldServerSnap.isFiltered()) {\n    // we want to filter the server node, but we didn't filter the server node yet, so simulate a full update\n    const newServerNode = oldServerSnap\n      .getNode()\n      .updateChild(changePath, changedSnap);\n    newServerCache = serverFilter.updateFullNode(\n      oldServerSnap.getNode(),\n      newServerNode,\n      null\n    );\n  } else {\n    const childKey = pathGetFront(changePath);\n    if (\n      !oldServerSnap.isCompleteForPath(changePath) &&\n      pathGetLength(changePath) > 1\n    ) {\n      // We don't update incomplete nodes with updates intended for other listeners\n      return oldViewCache;\n    }\n    const childChangePath = pathPopFront(changePath);\n    const childNode = oldServerSnap.getNode().getImmediateChild(childKey);\n    const newChildNode = childNode.updateChild(childChangePath, changedSnap);\n    if (childKey === '.priority') {\n      newServerCache = serverFilter.updatePriority(\n        oldServerSnap.getNode(),\n        newChildNode\n      );\n    } else {\n      newServerCache = serverFilter.updateChild(\n        oldServerSnap.getNode(),\n        childKey,\n        newChildNode,\n        childChangePath,\n        NO_COMPLETE_CHILD_SOURCE,\n        null\n      );\n    }\n  }\n  const newViewCache = viewCacheUpdateServerSnap(\n    oldViewCache,\n    newServerCache,\n    oldServerSnap.isFullyInitialized() || pathIsEmpty(changePath),\n    serverFilter.filtersNodes()\n  );\n  const source = new WriteTreeCompleteChildSource(\n    writesCache,\n    newViewCache,\n    completeCache\n  );\n  return viewProcessorGenerateEventCacheAfterServerEvent(\n    viewProcessor,\n    newViewCache,\n    changePath,\n    writesCache,\n    source,\n    accumulator\n  );\n}\n\nfunction viewProcessorApplyUserOverwrite(\n  viewProcessor: ViewProcessor,\n  oldViewCache: ViewCache,\n  changePath: Path,\n  changedSnap: Node,\n  writesCache: WriteTreeRef,\n  completeCache: Node | null,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  const oldEventSnap = oldViewCache.eventCache;\n  let newViewCache, newEventCache;\n  const source = new WriteTreeCompleteChildSource(\n    writesCache,\n    oldViewCache,\n    completeCache\n  );\n  if (pathIsEmpty(changePath)) {\n    newEventCache = viewProcessor.filter.updateFullNode(\n      oldViewCache.eventCache.getNode(),\n      changedSnap,\n      accumulator\n    );\n    newViewCache = viewCacheUpdateEventSnap(\n      oldViewCache,\n      newEventCache,\n      true,\n      viewProcessor.filter.filtersNodes()\n    );\n  } else {\n    const childKey = pathGetFront(changePath);\n    if (childKey === '.priority') {\n      newEventCache = viewProcessor.filter.updatePriority(\n        oldViewCache.eventCache.getNode(),\n        changedSnap\n      );\n      newViewCache = viewCacheUpdateEventSnap(\n        oldViewCache,\n        newEventCache,\n        oldEventSnap.isFullyInitialized(),\n        oldEventSnap.isFiltered()\n      );\n    } else {\n      const childChangePath = pathPopFront(changePath);\n      const oldChild = oldEventSnap.getNode().getImmediateChild(childKey);\n      let newChild;\n      if (pathIsEmpty(childChangePath)) {\n        // Child overwrite, we can replace the child\n        newChild = changedSnap;\n      } else {\n        const childNode = source.getCompleteChild(childKey);\n        if (childNode != null) {\n          if (\n            pathGetBack(childChangePath) === '.priority' &&\n            childNode.getChild(pathParent(childChangePath)).isEmpty()\n          ) {\n            // This is a priority update on an empty node. If this node exists on the server, the\n            // server will send down the priority in the update, so ignore for now\n            newChild = childNode;\n          } else {\n            newChild = childNode.updateChild(childChangePath, changedSnap);\n          }\n        } else {\n          // There is no complete child node available\n          newChild = ChildrenNode.EMPTY_NODE;\n        }\n      }\n      if (!oldChild.equals(newChild)) {\n        const newEventSnap = viewProcessor.filter.updateChild(\n          oldEventSnap.getNode(),\n          childKey,\n          newChild,\n          childChangePath,\n          source,\n          accumulator\n        );\n        newViewCache = viewCacheUpdateEventSnap(\n          oldViewCache,\n          newEventSnap,\n          oldEventSnap.isFullyInitialized(),\n          viewProcessor.filter.filtersNodes()\n        );\n      } else {\n        newViewCache = oldViewCache;\n      }\n    }\n  }\n  return newViewCache;\n}\n\nfunction viewProcessorCacheHasChild(\n  viewCache: ViewCache,\n  childKey: string\n): boolean {\n  return viewCache.eventCache.isCompleteForChild(childKey);\n}\n\nfunction viewProcessorApplyUserMerge(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache,\n  path: Path,\n  changedChildren: ImmutableTree<Node>,\n  writesCache: WriteTreeRef,\n  serverCache: Node | null,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  // HACK: In the case of a limit query, there may be some changes that bump things out of the\n  // window leaving room for new items.  It's important we process these changes first, so we\n  // iterate the changes twice, first processing any that affect items currently in view.\n  // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\n  // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\n  // not the other.\n  let curViewCache = viewCache;\n  changedChildren.foreach((relativePath, childNode) => {\n    const writePath = pathChild(path, relativePath);\n    if (viewProcessorCacheHasChild(viewCache, pathGetFront(writePath))) {\n      curViewCache = viewProcessorApplyUserOverwrite(\n        viewProcessor,\n        curViewCache,\n        writePath,\n        childNode,\n        writesCache,\n        serverCache,\n        accumulator\n      );\n    }\n  });\n\n  changedChildren.foreach((relativePath, childNode) => {\n    const writePath = pathChild(path, relativePath);\n    if (!viewProcessorCacheHasChild(viewCache, pathGetFront(writePath))) {\n      curViewCache = viewProcessorApplyUserOverwrite(\n        viewProcessor,\n        curViewCache,\n        writePath,\n        childNode,\n        writesCache,\n        serverCache,\n        accumulator\n      );\n    }\n  });\n\n  return curViewCache;\n}\n\nfunction viewProcessorApplyMerge(\n  viewProcessor: ViewProcessor,\n  node: Node,\n  merge: ImmutableTree<Node>\n): Node {\n  merge.foreach((relativePath, childNode) => {\n    node = node.updateChild(relativePath, childNode);\n  });\n  return node;\n}\n\nfunction viewProcessorApplyServerMerge(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache,\n  path: Path,\n  changedChildren: ImmutableTree<Node>,\n  writesCache: WriteTreeRef,\n  serverCache: Node | null,\n  filterServerNode: boolean,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  // If we don't have a cache yet, this merge was intended for a previously listen in the same location. Ignore it and\n  // wait for the complete data update coming soon.\n  if (\n    viewCache.serverCache.getNode().isEmpty() &&\n    !viewCache.serverCache.isFullyInitialized()\n  ) {\n    return viewCache;\n  }\n\n  // HACK: In the case of a limit query, there may be some changes that bump things out of the\n  // window leaving room for new items.  It's important we process these changes first, so we\n  // iterate the changes twice, first processing any that affect items currently in view.\n  // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\n  // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\n  // not the other.\n  let curViewCache = viewCache;\n  let viewMergeTree;\n  if (pathIsEmpty(path)) {\n    viewMergeTree = changedChildren;\n  } else {\n    viewMergeTree = new ImmutableTree<Node>(null).setTree(\n      path,\n      changedChildren\n    );\n  }\n  const serverNode = viewCache.serverCache.getNode();\n  viewMergeTree.children.inorderTraversal((childKey, childTree) => {\n    if (serverNode.hasChild(childKey)) {\n      const serverChild = viewCache.serverCache\n        .getNode()\n        .getImmediateChild(childKey);\n      const newChild = viewProcessorApplyMerge(\n        viewProcessor,\n        serverChild,\n        childTree\n      );\n      curViewCache = viewProcessorApplyServerOverwrite(\n        viewProcessor,\n        curViewCache,\n        new Path(childKey),\n        newChild,\n        writesCache,\n        serverCache,\n        filterServerNode,\n        accumulator\n      );\n    }\n  });\n  viewMergeTree.children.inorderTraversal((childKey, childMergeTree) => {\n    const isUnknownDeepMerge =\n      !viewCache.serverCache.isCompleteForChild(childKey) &&\n      childMergeTree.value === undefined;\n    if (!serverNode.hasChild(childKey) && !isUnknownDeepMerge) {\n      const serverChild = viewCache.serverCache\n        .getNode()\n        .getImmediateChild(childKey);\n      const newChild = viewProcessorApplyMerge(\n        viewProcessor,\n        serverChild,\n        childMergeTree\n      );\n      curViewCache = viewProcessorApplyServerOverwrite(\n        viewProcessor,\n        curViewCache,\n        new Path(childKey),\n        newChild,\n        writesCache,\n        serverCache,\n        filterServerNode,\n        accumulator\n      );\n    }\n  });\n\n  return curViewCache;\n}\n\nfunction viewProcessorAckUserWrite(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache,\n  ackPath: Path,\n  affectedTree: ImmutableTree<boolean>,\n  writesCache: WriteTreeRef,\n  completeCache: Node | null,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  if (writeTreeRefShadowingWrite(writesCache, ackPath) != null) {\n    return viewCache;\n  }\n\n  // Only filter server node if it is currently filtered\n  const filterServerNode = viewCache.serverCache.isFiltered();\n\n  // Essentially we'll just get our existing server cache for the affected paths and re-apply it as a server update\n  // now that it won't be shadowed.\n  const serverCache = viewCache.serverCache;\n  if (affectedTree.value != null) {\n    // This is an overwrite.\n    if (\n      (pathIsEmpty(ackPath) && serverCache.isFullyInitialized()) ||\n      serverCache.isCompleteForPath(ackPath)\n    ) {\n      return viewProcessorApplyServerOverwrite(\n        viewProcessor,\n        viewCache,\n        ackPath,\n        serverCache.getNode().getChild(ackPath),\n        writesCache,\n        completeCache,\n        filterServerNode,\n        accumulator\n      );\n    } else if (pathIsEmpty(ackPath)) {\n      // This is a goofy edge case where we are acking data at this location but don't have full data.  We\n      // should just re-apply whatever we have in our cache as a merge.\n      let changedChildren = new ImmutableTree<Node>(null);\n      serverCache.getNode().forEachChild(KEY_INDEX, (name, node) => {\n        changedChildren = changedChildren.set(new Path(name), node);\n      });\n      return viewProcessorApplyServerMerge(\n        viewProcessor,\n        viewCache,\n        ackPath,\n        changedChildren,\n        writesCache,\n        completeCache,\n        filterServerNode,\n        accumulator\n      );\n    } else {\n      return viewCache;\n    }\n  } else {\n    // This is a merge.\n    let changedChildren = new ImmutableTree<Node>(null);\n    affectedTree.foreach((mergePath, value) => {\n      const serverCachePath = pathChild(ackPath, mergePath);\n      if (serverCache.isCompleteForPath(serverCachePath)) {\n        changedChildren = changedChildren.set(\n          mergePath,\n          serverCache.getNode().getChild(serverCachePath)\n        );\n      }\n    });\n    return viewProcessorApplyServerMerge(\n      viewProcessor,\n      viewCache,\n      ackPath,\n      changedChildren,\n      writesCache,\n      completeCache,\n      filterServerNode,\n      accumulator\n    );\n  }\n}\n\nfunction viewProcessorListenComplete(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache,\n  path: Path,\n  writesCache: WriteTreeRef,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  const oldServerNode = viewCache.serverCache;\n  const newViewCache = viewCacheUpdateServerSnap(\n    viewCache,\n    oldServerNode.getNode(),\n    oldServerNode.isFullyInitialized() || pathIsEmpty(path),\n    oldServerNode.isFiltered()\n  );\n  return viewProcessorGenerateEventCacheAfterServerEvent(\n    viewProcessor,\n    newViewCache,\n    path,\n    writesCache,\n    NO_COMPLETE_CHILD_SOURCE,\n    accumulator\n  );\n}\n\nfunction viewProcessorRevertUserWrite(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache,\n  path: Path,\n  writesCache: WriteTreeRef,\n  completeServerCache: Node | null,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  let complete;\n  if (writeTreeRefShadowingWrite(writesCache, path) != null) {\n    return viewCache;\n  } else {\n    const source = new WriteTreeCompleteChildSource(\n      writesCache,\n      viewCache,\n      completeServerCache\n    );\n    const oldEventCache = viewCache.eventCache.getNode();\n    let newEventCache;\n    if (pathIsEmpty(path) || pathGetFront(path) === '.priority') {\n      let newNode;\n      if (viewCache.serverCache.isFullyInitialized()) {\n        newNode = writeTreeRefCalcCompleteEventCache(\n          writesCache,\n          viewCacheGetCompleteServerSnap(viewCache)\n        );\n      } else {\n        const serverChildren = viewCache.serverCache.getNode();\n        assert(\n          serverChildren instanceof ChildrenNode,\n          'serverChildren would be complete if leaf node'\n        );\n        newNode = writeTreeRefCalcCompleteEventChildren(\n          writesCache,\n          serverChildren as ChildrenNode\n        );\n      }\n      newNode = newNode as Node;\n      newEventCache = viewProcessor.filter.updateFullNode(\n        oldEventCache,\n        newNode,\n        accumulator\n      );\n    } else {\n      const childKey = pathGetFront(path);\n      let newChild = writeTreeRefCalcCompleteChild(\n        writesCache,\n        childKey,\n        viewCache.serverCache\n      );\n      if (\n        newChild == null &&\n        viewCache.serverCache.isCompleteForChild(childKey)\n      ) {\n        newChild = oldEventCache.getImmediateChild(childKey);\n      }\n      if (newChild != null) {\n        newEventCache = viewProcessor.filter.updateChild(\n          oldEventCache,\n          childKey,\n          newChild,\n          pathPopFront(path),\n          source,\n          accumulator\n        );\n      } else if (viewCache.eventCache.getNode().hasChild(childKey)) {\n        // No complete child available, delete the existing one, if any\n        newEventCache = viewProcessor.filter.updateChild(\n          oldEventCache,\n          childKey,\n          ChildrenNode.EMPTY_NODE,\n          pathPopFront(path),\n          source,\n          accumulator\n        );\n      } else {\n        newEventCache = oldEventCache;\n      }\n      if (\n        newEventCache.isEmpty() &&\n        viewCache.serverCache.isFullyInitialized()\n      ) {\n        // We might have reverted all child writes. Maybe the old event was a leaf node\n        complete = writeTreeRefCalcCompleteEventCache(\n          writesCache,\n          viewCacheGetCompleteServerSnap(viewCache)\n        );\n        if (complete.isLeafNode()) {\n          newEventCache = viewProcessor.filter.updateFullNode(\n            newEventCache,\n            complete,\n            accumulator\n          );\n        }\n      }\n    }\n    complete =\n      viewCache.serverCache.isFullyInitialized() ||\n      writeTreeRefShadowingWrite(writesCache, newEmptyPath()) != null;\n    return viewCacheUpdateEventSnap(\n      viewCache,\n      newEventCache,\n      complete,\n      viewProcessor.filter.filtersNodes()\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { Operation, OperationType } from '../operation/Operation';\nimport { ChildrenNode } from '../snap/ChildrenNode';\nimport { PRIORITY_INDEX } from '../snap/indexes/PriorityIndex';\nimport { Node } from '../snap/Node';\nimport { Path, pathGetFront, pathIsEmpty } from '../util/Path';\nimport { WriteTreeRef } from '../WriteTree';\n\nimport { CacheNode } from './CacheNode';\nimport { Change, changeChildAdded, changeValue } from './Change';\nimport { CancelEvent, Event } from './Event';\nimport {\n  EventGenerator,\n  eventGeneratorGenerateEventsForChanges\n} from './EventGenerator';\nimport { EventRegistration, QueryContext } from './EventRegistration';\nimport { IndexedFilter } from './filter/IndexedFilter';\nimport { queryParamsGetNodeFilter } from './QueryParams';\nimport {\n  newViewCache,\n  ViewCache,\n  viewCacheGetCompleteEventSnap,\n  viewCacheGetCompleteServerSnap\n} from './ViewCache';\nimport {\n  newViewProcessor,\n  ViewProcessor,\n  viewProcessorApplyOperation,\n  viewProcessorAssertIndexed\n} from './ViewProcessor';\n\n/**\n * A view represents a specific location and query that has 1 or more event registrations.\n *\n * It does several things:\n *  - Maintains the list of event registrations for this location/query.\n *  - Maintains a cache of the data visible for this location/query.\n *  - Applies new operations (via applyOperation), updates the cache, and based on the event\n *    registrations returns the set of events to be raised.\n */\nexport class View {\n  processor_: ViewProcessor;\n  viewCache_: ViewCache;\n  eventRegistrations_: EventRegistration[] = [];\n  eventGenerator_: EventGenerator;\n\n  constructor(private query_: QueryContext, initialViewCache: ViewCache) {\n    const params = this.query_._queryParams;\n\n    const indexFilter = new IndexedFilter(params.getIndex());\n    const filter = queryParamsGetNodeFilter(params);\n\n    this.processor_ = newViewProcessor(filter);\n\n    const initialServerCache = initialViewCache.serverCache;\n    const initialEventCache = initialViewCache.eventCache;\n\n    // Don't filter server node with other filter than index, wait for tagged listen\n    const serverSnap = indexFilter.updateFullNode(\n      ChildrenNode.EMPTY_NODE,\n      initialServerCache.getNode(),\n      null\n    );\n    const eventSnap = filter.updateFullNode(\n      ChildrenNode.EMPTY_NODE,\n      initialEventCache.getNode(),\n      null\n    );\n    const newServerCache = new CacheNode(\n      serverSnap,\n      initialServerCache.isFullyInitialized(),\n      indexFilter.filtersNodes()\n    );\n    const newEventCache = new CacheNode(\n      eventSnap,\n      initialEventCache.isFullyInitialized(),\n      filter.filtersNodes()\n    );\n\n    this.viewCache_ = newViewCache(newEventCache, newServerCache);\n    this.eventGenerator_ = new EventGenerator(this.query_);\n  }\n\n  get query(): QueryContext {\n    return this.query_;\n  }\n}\n\nexport function viewGetServerCache(view: View): Node | null {\n  return view.viewCache_.serverCache.getNode();\n}\n\nexport function viewGetCompleteNode(view: View): Node | null {\n  return viewCacheGetCompleteEventSnap(view.viewCache_);\n}\n\nexport function viewGetCompleteServerCache(\n  view: View,\n  path: Path\n): Node | null {\n  const cache = viewCacheGetCompleteServerSnap(view.viewCache_);\n  if (cache) {\n    // If this isn't a \"loadsAllData\" view, then cache isn't actually a complete cache and\n    // we need to see if it contains the child we're interested in.\n    if (\n      view.query._queryParams.loadsAllData() ||\n      (!pathIsEmpty(path) &&\n        !cache.getImmediateChild(pathGetFront(path)).isEmpty())\n    ) {\n      return cache.getChild(path);\n    }\n  }\n  return null;\n}\n\nexport function viewIsEmpty(view: View): boolean {\n  return view.eventRegistrations_.length === 0;\n}\n\nexport function viewAddEventRegistration(\n  view: View,\n  eventRegistration: EventRegistration\n) {\n  view.eventRegistrations_.push(eventRegistration);\n}\n\n/**\n * @param eventRegistration - If null, remove all callbacks.\n * @param cancelError - If a cancelError is provided, appropriate cancel events will be returned.\n * @returns Cancel events, if cancelError was provided.\n */\nexport function viewRemoveEventRegistration(\n  view: View,\n  eventRegistration: EventRegistration | null,\n  cancelError?: Error\n): Event[] {\n  const cancelEvents: CancelEvent[] = [];\n  if (cancelError) {\n    assert(\n      eventRegistration == null,\n      'A cancel should cancel all event registrations.'\n    );\n    const path = view.query._path;\n    view.eventRegistrations_.forEach(registration => {\n      const maybeEvent = registration.createCancelEvent(cancelError, path);\n      if (maybeEvent) {\n        cancelEvents.push(maybeEvent);\n      }\n    });\n  }\n\n  if (eventRegistration) {\n    let remaining = [];\n    for (let i = 0; i < view.eventRegistrations_.length; ++i) {\n      const existing = view.eventRegistrations_[i];\n      if (!existing.matches(eventRegistration)) {\n        remaining.push(existing);\n      } else if (eventRegistration.hasAnyCallback()) {\n        // We're removing just this one\n        remaining = remaining.concat(view.eventRegistrations_.slice(i + 1));\n        break;\n      }\n    }\n    view.eventRegistrations_ = remaining;\n  } else {\n    view.eventRegistrations_ = [];\n  }\n  return cancelEvents;\n}\n\n/**\n * Applies the given Operation, updates our cache, and returns the appropriate events.\n */\nexport function viewApplyOperation(\n  view: View,\n  operation: Operation,\n  writesCache: WriteTreeRef,\n  completeServerCache: Node | null\n): Event[] {\n  if (\n    operation.type === OperationType.MERGE &&\n    operation.source.queryId !== null\n  ) {\n    assert(\n      viewCacheGetCompleteServerSnap(view.viewCache_),\n      'We should always have a full cache before handling merges'\n    );\n    assert(\n      viewCacheGetCompleteEventSnap(view.viewCache_),\n      'Missing event cache, even though we have a server cache'\n    );\n  }\n\n  const oldViewCache = view.viewCache_;\n  const result = viewProcessorApplyOperation(\n    view.processor_,\n    oldViewCache,\n    operation,\n    writesCache,\n    completeServerCache\n  );\n  viewProcessorAssertIndexed(view.processor_, result.viewCache);\n\n  assert(\n    result.viewCache.serverCache.isFullyInitialized() ||\n      !oldViewCache.serverCache.isFullyInitialized(),\n    'Once a server snap is complete, it should never go back'\n  );\n\n  view.viewCache_ = result.viewCache;\n\n  return viewGenerateEventsForChanges_(\n    view,\n    result.changes,\n    result.viewCache.eventCache.getNode(),\n    null\n  );\n}\n\nexport function viewGetInitialEvents(\n  view: View,\n  registration: EventRegistration\n): Event[] {\n  const eventSnap = view.viewCache_.eventCache;\n  const initialChanges: Change[] = [];\n  if (!eventSnap.getNode().isLeafNode()) {\n    const eventNode = eventSnap.getNode() as ChildrenNode;\n    eventNode.forEachChild(PRIORITY_INDEX, (key, childNode) => {\n      initialChanges.push(changeChildAdded(key, childNode));\n    });\n  }\n  if (eventSnap.isFullyInitialized()) {\n    initialChanges.push(changeValue(eventSnap.getNode()));\n  }\n  return viewGenerateEventsForChanges_(\n    view,\n    initialChanges,\n    eventSnap.getNode(),\n    registration\n  );\n}\n\nfunction viewGenerateEventsForChanges_(\n  view: View,\n  changes: Change[],\n  eventCache: Node,\n  eventRegistration?: EventRegistration\n): Event[] {\n  const registrations = eventRegistration\n    ? [eventRegistration]\n    : view.eventRegistrations_;\n  return eventGeneratorGenerateEventsForChanges(\n    view.eventGenerator_,\n    changes,\n    eventCache,\n    registrations\n  );\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { ReferenceConstructor } from '../api/Reference';\n\nimport { Operation } from './operation/Operation';\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { Node } from './snap/Node';\nimport { Path } from './util/Path';\nimport { CacheNode } from './view/CacheNode';\nimport { Event } from './view/Event';\nimport { EventRegistration, QueryContext } from './view/EventRegistration';\nimport {\n  View,\n  viewAddEventRegistration,\n  viewApplyOperation,\n  viewGetCompleteServerCache,\n  viewGetInitialEvents,\n  viewIsEmpty,\n  viewRemoveEventRegistration\n} from './view/View';\nimport { newViewCache } from './view/ViewCache';\nimport {\n  WriteTreeRef,\n  writeTreeRefCalcCompleteEventCache,\n  writeTreeRefCalcCompleteEventChildren\n} from './WriteTree';\n\nlet referenceConstructor: ReferenceConstructor;\n\n/**\n * SyncPoint represents a single location in a SyncTree with 1 or more event registrations, meaning we need to\n * maintain 1 or more Views at this location to cache server data and raise appropriate events for server changes\n * and user writes (set, transaction, update).\n *\n * It's responsible for:\n *  - Maintaining the set of 1 or more views necessary at this location (a SyncPoint with 0 views should be removed).\n *  - Proxying user / server operations to the views as appropriate (i.e. applyServerOverwrite,\n *    applyUserOverwrite, etc.)\n */\nexport class SyncPoint {\n  /**\n   * The Views being tracked at this location in the tree, stored as a map where the key is a\n   * queryId and the value is the View for that query.\n   *\n   * NOTE: This list will be quite small (usually 1, but perhaps 2 or 3; any more is an odd use case).\n   */\n  readonly views: Map<string, View> = new Map();\n}\n\nexport function syncPointSetReferenceConstructor(\n  val: ReferenceConstructor\n): void {\n  assert(\n    !referenceConstructor,\n    '__referenceConstructor has already been defined'\n  );\n  referenceConstructor = val;\n}\n\nfunction syncPointGetReferenceConstructor(): ReferenceConstructor {\n  assert(referenceConstructor, 'Reference.ts has not been loaded');\n  return referenceConstructor;\n}\n\nexport function syncPointIsEmpty(syncPoint: SyncPoint): boolean {\n  return syncPoint.views.size === 0;\n}\n\nexport function syncPointApplyOperation(\n  syncPoint: SyncPoint,\n  operation: Operation,\n  writesCache: WriteTreeRef,\n  optCompleteServerCache: Node | null\n): Event[] {\n  const queryId = operation.source.queryId;\n  if (queryId !== null) {\n    const view = syncPoint.views.get(queryId);\n    assert(view != null, 'SyncTree gave us an op for an invalid query.');\n    return viewApplyOperation(\n      view,\n      operation,\n      writesCache,\n      optCompleteServerCache\n    );\n  } else {\n    let events: Event[] = [];\n\n    for (const view of syncPoint.views.values()) {\n      events = events.concat(\n        viewApplyOperation(view, operation, writesCache, optCompleteServerCache)\n      );\n    }\n\n    return events;\n  }\n}\n\n/**\n * Get a view for the specified query.\n *\n * @param query - The query to return a view for\n * @param writesCache\n * @param serverCache\n * @param serverCacheComplete\n * @returns Events to raise.\n */\nexport function syncPointGetView(\n  syncPoint: SyncPoint,\n  query: QueryContext,\n  writesCache: WriteTreeRef,\n  serverCache: Node | null,\n  serverCacheComplete: boolean\n): View {\n  const queryId = query._queryIdentifier;\n  const view = syncPoint.views.get(queryId);\n  if (!view) {\n    // TODO: make writesCache take flag for complete server node\n    let eventCache = writeTreeRefCalcCompleteEventCache(\n      writesCache,\n      serverCacheComplete ? serverCache : null\n    );\n    let eventCacheComplete = false;\n    if (eventCache) {\n      eventCacheComplete = true;\n    } else if (serverCache instanceof ChildrenNode) {\n      eventCache = writeTreeRefCalcCompleteEventChildren(\n        writesCache,\n        serverCache\n      );\n      eventCacheComplete = false;\n    } else {\n      eventCache = ChildrenNode.EMPTY_NODE;\n      eventCacheComplete = false;\n    }\n    const viewCache = newViewCache(\n      new CacheNode(eventCache, eventCacheComplete, false),\n      new CacheNode(serverCache, serverCacheComplete, false)\n    );\n    return new View(query, viewCache);\n  }\n  return view;\n}\n\n/**\n * Add an event callback for the specified query.\n *\n * @param query\n * @param eventRegistration\n * @param writesCache\n * @param serverCache - Complete server cache, if we have it.\n * @param serverCacheComplete\n * @returns Events to raise.\n */\nexport function syncPointAddEventRegistration(\n  syncPoint: SyncPoint,\n  query: QueryContext,\n  eventRegistration: EventRegistration,\n  writesCache: WriteTreeRef,\n  serverCache: Node | null,\n  serverCacheComplete: boolean\n): Event[] {\n  const view = syncPointGetView(\n    syncPoint,\n    query,\n    writesCache,\n    serverCache,\n    serverCacheComplete\n  );\n  if (!syncPoint.views.has(query._queryIdentifier)) {\n    syncPoint.views.set(query._queryIdentifier, view);\n  }\n  // This is guaranteed to exist now, we just created anything that was missing\n  viewAddEventRegistration(view, eventRegistration);\n  return viewGetInitialEvents(view, eventRegistration);\n}\n\n/**\n * Remove event callback(s).  Return cancelEvents if a cancelError is specified.\n *\n * If query is the default query, we'll check all views for the specified eventRegistration.\n * If eventRegistration is null, we'll remove all callbacks for the specified view(s).\n *\n * @param eventRegistration - If null, remove all callbacks.\n * @param cancelError - If a cancelError is provided, appropriate cancel events will be returned.\n * @returns removed queries and any cancel events\n */\nexport function syncPointRemoveEventRegistration(\n  syncPoint: SyncPoint,\n  query: QueryContext,\n  eventRegistration: EventRegistration | null,\n  cancelError?: Error\n): { removed: QueryContext[]; events: Event[] } {\n  const queryId = query._queryIdentifier;\n  const removed: QueryContext[] = [];\n  let cancelEvents: Event[] = [];\n  const hadCompleteView = syncPointHasCompleteView(syncPoint);\n  if (queryId === 'default') {\n    // When you do ref.off(...), we search all views for the registration to remove.\n    for (const [viewQueryId, view] of syncPoint.views.entries()) {\n      cancelEvents = cancelEvents.concat(\n        viewRemoveEventRegistration(view, eventRegistration, cancelError)\n      );\n      if (viewIsEmpty(view)) {\n        syncPoint.views.delete(viewQueryId);\n\n        // We'll deal with complete views later.\n        if (!view.query._queryParams.loadsAllData()) {\n          removed.push(view.query);\n        }\n      }\n    }\n  } else {\n    // remove the callback from the specific view.\n    const view = syncPoint.views.get(queryId);\n    if (view) {\n      cancelEvents = cancelEvents.concat(\n        viewRemoveEventRegistration(view, eventRegistration, cancelError)\n      );\n      if (viewIsEmpty(view)) {\n        syncPoint.views.delete(queryId);\n\n        // We'll deal with complete views later.\n        if (!view.query._queryParams.loadsAllData()) {\n          removed.push(view.query);\n        }\n      }\n    }\n  }\n\n  if (hadCompleteView && !syncPointHasCompleteView(syncPoint)) {\n    // We removed our last complete view.\n    removed.push(\n      new (syncPointGetReferenceConstructor())(query._repo, query._path)\n    );\n  }\n\n  return { removed, events: cancelEvents };\n}\n\nexport function syncPointGetQueryViews(syncPoint: SyncPoint): View[] {\n  const result = [];\n  for (const view of syncPoint.views.values()) {\n    if (!view.query._queryParams.loadsAllData()) {\n      result.push(view);\n    }\n  }\n  return result;\n}\n\n/**\n * @param path - The path to the desired complete snapshot\n * @returns A complete cache, if it exists\n */\nexport function syncPointGetCompleteServerCache(\n  syncPoint: SyncPoint,\n  path: Path\n): Node | null {\n  let serverCache: Node | null = null;\n  for (const view of syncPoint.views.values()) {\n    serverCache = serverCache || viewGetCompleteServerCache(view, path);\n  }\n  return serverCache;\n}\n\nexport function syncPointViewForQuery(\n  syncPoint: SyncPoint,\n  query: QueryContext\n): View | null {\n  const params = query._queryParams;\n  if (params.loadsAllData()) {\n    return syncPointGetCompleteView(syncPoint);\n  } else {\n    const queryId = query._queryIdentifier;\n    return syncPoint.views.get(queryId);\n  }\n}\n\nexport function syncPointViewExistsForQuery(\n  syncPoint: SyncPoint,\n  query: QueryContext\n): boolean {\n  return syncPointViewForQuery(syncPoint, query) != null;\n}\n\nexport function syncPointHasCompleteView(syncPoint: SyncPoint): boolean {\n  return syncPointGetCompleteView(syncPoint) != null;\n}\n\nexport function syncPointGetCompleteView(syncPoint: SyncPoint): View | null {\n  for (const view of syncPoint.views.values()) {\n    if (view.query._queryParams.loadsAllData()) {\n      return view;\n    }\n  }\n  return null;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { ReferenceConstructor } from '../api/Reference';\n\nimport { AckUserWrite } from './operation/AckUserWrite';\nimport { ListenComplete } from './operation/ListenComplete';\nimport { Merge } from './operation/Merge';\nimport {\n  newOperationSourceServer,\n  newOperationSourceServerTaggedQuery,\n  newOperationSourceUser,\n  Operation\n} from './operation/Operation';\nimport { Overwrite } from './operation/Overwrite';\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { Node } from './snap/Node';\nimport {\n  SyncPoint,\n  syncPointAddEventRegistration,\n  syncPointApplyOperation,\n  syncPointGetCompleteServerCache,\n  syncPointGetCompleteView,\n  syncPointGetQueryViews,\n  syncPointGetView,\n  syncPointHasCompleteView,\n  syncPointIsEmpty,\n  syncPointRemoveEventRegistration,\n  syncPointViewExistsForQuery,\n  syncPointViewForQuery\n} from './SyncPoint';\nimport { ImmutableTree } from './util/ImmutableTree';\nimport {\n  newEmptyPath,\n  newRelativePath,\n  Path,\n  pathGetFront,\n  pathIsEmpty\n} from './util/Path';\nimport { each, errorForServerCode } from './util/util';\nimport { CacheNode } from './view/CacheNode';\nimport { Event } from './view/Event';\nimport { EventRegistration, QueryContext } from './view/EventRegistration';\nimport { View, viewGetCompleteNode, viewGetServerCache } from './view/View';\nimport {\n  newWriteTree,\n  WriteTree,\n  writeTreeAddMerge,\n  writeTreeAddOverwrite,\n  writeTreeCalcCompleteEventCache,\n  writeTreeChildWrites,\n  writeTreeGetWrite,\n  WriteTreeRef,\n  writeTreeRefChild,\n  writeTreeRemoveWrite\n} from './WriteTree';\n\nlet referenceConstructor: ReferenceConstructor;\n\nexport function syncTreeSetReferenceConstructor(\n  val: ReferenceConstructor\n): void {\n  assert(\n    !referenceConstructor,\n    '__referenceConstructor has already been defined'\n  );\n  referenceConstructor = val;\n}\n\nfunction syncTreeGetReferenceConstructor(): ReferenceConstructor {\n  assert(referenceConstructor, 'Reference.ts has not been loaded');\n  return referenceConstructor;\n}\n\nexport interface ListenProvider {\n  startListening(\n    query: QueryContext,\n    tag: number | null,\n    hashFn: () => string,\n    onComplete: (a: string, b?: unknown) => Event[]\n  ): Event[];\n\n  stopListening(a: QueryContext, b: number | null): void;\n}\n\n/**\n * Static tracker for next query tag.\n */\nlet syncTreeNextQueryTag_ = 1;\n\n/**\n * SyncTree is the central class for managing event callback registration, data caching, views\n * (query processing), and event generation.  There are typically two SyncTree instances for\n * each Repo, one for the normal Firebase data, and one for the .info data.\n *\n * It has a number of responsibilities, including:\n *  - Tracking all user event callbacks (registered via addEventRegistration() and removeEventRegistration()).\n *  - Applying and caching data changes for user set(), transaction(), and update() calls\n *    (applyUserOverwrite(), applyUserMerge()).\n *  - Applying and caching data changes for server data changes (applyServerOverwrite(),\n *    applyServerMerge()).\n *  - Generating user-facing events for server and user changes (all of the apply* methods\n *    return the set of events that need to be raised as a result).\n *  - Maintaining the appropriate set of server listens to ensure we are always subscribed\n *    to the correct set of paths and queries to satisfy the current set of user event\n *    callbacks (listens are started/stopped using the provided listenProvider).\n *\n * NOTE: Although SyncTree tracks event callbacks and calculates events to raise, the actual\n * events are returned to the caller rather than raised synchronously.\n *\n */\nexport class SyncTree {\n  /**\n   * Tree of SyncPoints.  There's a SyncPoint at any location that has 1 or more views.\n   */\n  syncPointTree_: ImmutableTree<SyncPoint> = new ImmutableTree<SyncPoint>(null);\n\n  /**\n   * A tree of all pending user writes (user-initiated set()'s, transaction()'s, update()'s, etc.).\n   */\n  pendingWriteTree_: WriteTree = newWriteTree();\n\n  readonly tagToQueryMap: Map<number, string> = new Map();\n  readonly queryToTagMap: Map<string, number> = new Map();\n\n  /**\n   * @param listenProvider_ - Used by SyncTree to start / stop listening\n   *   to server data.\n   */\n  constructor(public listenProvider_: ListenProvider) {}\n}\n\n/**\n * Apply the data changes for a user-generated set() or transaction() call.\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyUserOverwrite(\n  syncTree: SyncTree,\n  path: Path,\n  newData: Node,\n  writeId: number,\n  visible?: boolean\n): Event[] {\n  // Record pending write.\n  writeTreeAddOverwrite(\n    syncTree.pendingWriteTree_,\n    path,\n    newData,\n    writeId,\n    visible\n  );\n\n  if (!visible) {\n    return [];\n  } else {\n    return syncTreeApplyOperationToSyncPoints_(\n      syncTree,\n      new Overwrite(newOperationSourceUser(), path, newData)\n    );\n  }\n}\n\n/**\n * Apply the data from a user-generated update() call\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyUserMerge(\n  syncTree: SyncTree,\n  path: Path,\n  changedChildren: { [k: string]: Node },\n  writeId: number\n): Event[] {\n  // Record pending merge.\n  writeTreeAddMerge(syncTree.pendingWriteTree_, path, changedChildren, writeId);\n\n  const changeTree = ImmutableTree.fromObject(changedChildren);\n\n  return syncTreeApplyOperationToSyncPoints_(\n    syncTree,\n    new Merge(newOperationSourceUser(), path, changeTree)\n  );\n}\n\n/**\n * Acknowledge a pending user write that was previously registered with applyUserOverwrite() or applyUserMerge().\n *\n * @param revert - True if the given write failed and needs to be reverted\n * @returns Events to raise.\n */\nexport function syncTreeAckUserWrite(\n  syncTree: SyncTree,\n  writeId: number,\n  revert: boolean = false\n) {\n  const write = writeTreeGetWrite(syncTree.pendingWriteTree_, writeId);\n  const needToReevaluate = writeTreeRemoveWrite(\n    syncTree.pendingWriteTree_,\n    writeId\n  );\n  if (!needToReevaluate) {\n    return [];\n  } else {\n    let affectedTree = new ImmutableTree<boolean>(null);\n    if (write.snap != null) {\n      // overwrite\n      affectedTree = affectedTree.set(newEmptyPath(), true);\n    } else {\n      each(write.children, (pathString: string) => {\n        affectedTree = affectedTree.set(new Path(pathString), true);\n      });\n    }\n    return syncTreeApplyOperationToSyncPoints_(\n      syncTree,\n      new AckUserWrite(write.path, affectedTree, revert)\n    );\n  }\n}\n\n/**\n * Apply new server data for the specified path..\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyServerOverwrite(\n  syncTree: SyncTree,\n  path: Path,\n  newData: Node\n): Event[] {\n  return syncTreeApplyOperationToSyncPoints_(\n    syncTree,\n    new Overwrite(newOperationSourceServer(), path, newData)\n  );\n}\n\n/**\n * Apply new server data to be merged in at the specified path.\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyServerMerge(\n  syncTree: SyncTree,\n  path: Path,\n  changedChildren: { [k: string]: Node }\n): Event[] {\n  const changeTree = ImmutableTree.fromObject(changedChildren);\n\n  return syncTreeApplyOperationToSyncPoints_(\n    syncTree,\n    new Merge(newOperationSourceServer(), path, changeTree)\n  );\n}\n\n/**\n * Apply a listen complete for a query\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyListenComplete(\n  syncTree: SyncTree,\n  path: Path\n): Event[] {\n  return syncTreeApplyOperationToSyncPoints_(\n    syncTree,\n    new ListenComplete(newOperationSourceServer(), path)\n  );\n}\n\n/**\n * Apply a listen complete for a tagged query\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyTaggedListenComplete(\n  syncTree: SyncTree,\n  path: Path,\n  tag: number\n): Event[] {\n  const queryKey = syncTreeQueryKeyForTag_(syncTree, tag);\n  if (queryKey) {\n    const r = syncTreeParseQueryKey_(queryKey);\n    const queryPath = r.path,\n      queryId = r.queryId;\n    const relativePath = newRelativePath(queryPath, path);\n    const op = new ListenComplete(\n      newOperationSourceServerTaggedQuery(queryId),\n      relativePath\n    );\n    return syncTreeApplyTaggedOperation_(syncTree, queryPath, op);\n  } else {\n    // We've already removed the query. No big deal, ignore the update\n    return [];\n  }\n}\n\n/**\n * Remove event callback(s).\n *\n * If query is the default query, we'll check all queries for the specified eventRegistration.\n * If eventRegistration is null, we'll remove all callbacks for the specified query/queries.\n *\n * @param eventRegistration - If null, all callbacks are removed.\n * @param cancelError - If a cancelError is provided, appropriate cancel events will be returned.\n * @returns Cancel events, if cancelError was provided.\n */\nexport function syncTreeRemoveEventRegistration(\n  syncTree: SyncTree,\n  query: QueryContext,\n  eventRegistration: EventRegistration | null,\n  cancelError?: Error\n): Event[] {\n  // Find the syncPoint first. Then deal with whether or not it has matching listeners\n  const path = query._path;\n  const maybeSyncPoint = syncTree.syncPointTree_.get(path);\n  let cancelEvents: Event[] = [];\n  // A removal on a default query affects all queries at that location. A removal on an indexed query, even one without\n  // other query constraints, does *not* affect all queries at that location. So this check must be for 'default', and\n  // not loadsAllData().\n  if (\n    maybeSyncPoint &&\n    (query._queryIdentifier === 'default' ||\n      syncPointViewExistsForQuery(maybeSyncPoint, query))\n  ) {\n    const removedAndEvents = syncPointRemoveEventRegistration(\n      maybeSyncPoint,\n      query,\n      eventRegistration,\n      cancelError\n    );\n    if (syncPointIsEmpty(maybeSyncPoint)) {\n      syncTree.syncPointTree_ = syncTree.syncPointTree_.remove(path);\n    }\n    const removed = removedAndEvents.removed;\n    cancelEvents = removedAndEvents.events;\n    // We may have just removed one of many listeners and can short-circuit this whole process\n    // We may also not have removed a default listener, in which case all of the descendant listeners should already be\n    // properly set up.\n    //\n    // Since indexed queries can shadow if they don't have other query constraints, check for loadsAllData(), instead of\n    // queryId === 'default'\n    const removingDefault =\n      -1 !==\n      removed.findIndex(query => {\n        return query._queryParams.loadsAllData();\n      });\n    const covered = syncTree.syncPointTree_.findOnPath(\n      path,\n      (relativePath, parentSyncPoint) =>\n        syncPointHasCompleteView(parentSyncPoint)\n    );\n\n    if (removingDefault && !covered) {\n      const subtree = syncTree.syncPointTree_.subtree(path);\n      // There are potentially child listeners. Determine what if any listens we need to send before executing the\n      // removal\n      if (!subtree.isEmpty()) {\n        // We need to fold over our subtree and collect the listeners to send\n        const newViews = syncTreeCollectDistinctViewsForSubTree_(subtree);\n\n        // Ok, we've collected all the listens we need. Set them up.\n        for (let i = 0; i < newViews.length; ++i) {\n          const view = newViews[i],\n            newQuery = view.query;\n          const listener = syncTreeCreateListenerForView_(syncTree, view);\n          syncTree.listenProvider_.startListening(\n            syncTreeQueryForListening_(newQuery),\n            syncTreeTagForQuery_(syncTree, newQuery),\n            listener.hashFn,\n            listener.onComplete\n          );\n        }\n      } else {\n        // There's nothing below us, so nothing we need to start listening on\n      }\n    }\n    // If we removed anything and we're not covered by a higher up listen, we need to stop listening on this query\n    // The above block has us covered in terms of making sure we're set up on listens lower in the tree.\n    // Also, note that if we have a cancelError, it's already been removed at the provider level.\n    if (!covered && removed.length > 0 && !cancelError) {\n      // If we removed a default, then we weren't listening on any of the other queries here. Just cancel the one\n      // default. Otherwise, we need to iterate through and cancel each individual query\n      if (removingDefault) {\n        // We don't tag default listeners\n        const defaultTag: number | null = null;\n        syncTree.listenProvider_.stopListening(\n          syncTreeQueryForListening_(query),\n          defaultTag\n        );\n      } else {\n        removed.forEach((queryToRemove: QueryContext) => {\n          const tagToRemove = syncTree.queryToTagMap.get(\n            syncTreeMakeQueryKey_(queryToRemove)\n          );\n          syncTree.listenProvider_.stopListening(\n            syncTreeQueryForListening_(queryToRemove),\n            tagToRemove\n          );\n        });\n      }\n    }\n    // Now, clear all of the tags we're tracking for the removed listens\n    syncTreeRemoveTags_(syncTree, removed);\n  } else {\n    // No-op, this listener must've been already removed\n  }\n  return cancelEvents;\n}\n\n/**\n * Apply new server data for the specified tagged query.\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyTaggedQueryOverwrite(\n  syncTree: SyncTree,\n  path: Path,\n  snap: Node,\n  tag: number\n): Event[] {\n  const queryKey = syncTreeQueryKeyForTag_(syncTree, tag);\n  if (queryKey != null) {\n    const r = syncTreeParseQueryKey_(queryKey);\n    const queryPath = r.path,\n      queryId = r.queryId;\n    const relativePath = newRelativePath(queryPath, path);\n    const op = new Overwrite(\n      newOperationSourceServerTaggedQuery(queryId),\n      relativePath,\n      snap\n    );\n    return syncTreeApplyTaggedOperation_(syncTree, queryPath, op);\n  } else {\n    // Query must have been removed already\n    return [];\n  }\n}\n\n/**\n * Apply server data to be merged in for the specified tagged query.\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyTaggedQueryMerge(\n  syncTree: SyncTree,\n  path: Path,\n  changedChildren: { [k: string]: Node },\n  tag: number\n): Event[] {\n  const queryKey = syncTreeQueryKeyForTag_(syncTree, tag);\n  if (queryKey) {\n    const r = syncTreeParseQueryKey_(queryKey);\n    const queryPath = r.path,\n      queryId = r.queryId;\n    const relativePath = newRelativePath(queryPath, path);\n    const changeTree = ImmutableTree.fromObject(changedChildren);\n    const op = new Merge(\n      newOperationSourceServerTaggedQuery(queryId),\n      relativePath,\n      changeTree\n    );\n    return syncTreeApplyTaggedOperation_(syncTree, queryPath, op);\n  } else {\n    // We've already removed the query. No big deal, ignore the update\n    return [];\n  }\n}\n\n/**\n * Add an event callback for the specified query.\n *\n * @returns Events to raise.\n */\nexport function syncTreeAddEventRegistration(\n  syncTree: SyncTree,\n  query: QueryContext,\n  eventRegistration: EventRegistration\n): Event[] {\n  const path = query._path;\n\n  let serverCache: Node | null = null;\n  let foundAncestorDefaultView = false;\n  // Any covering writes will necessarily be at the root, so really all we need to find is the server cache.\n  // Consider optimizing this once there's a better understanding of what actual behavior will be.\n  syncTree.syncPointTree_.foreachOnPath(path, (pathToSyncPoint, sp) => {\n    const relativePath = newRelativePath(pathToSyncPoint, path);\n    serverCache =\n      serverCache || syncPointGetCompleteServerCache(sp, relativePath);\n    foundAncestorDefaultView =\n      foundAncestorDefaultView || syncPointHasCompleteView(sp);\n  });\n  let syncPoint = syncTree.syncPointTree_.get(path);\n  if (!syncPoint) {\n    syncPoint = new SyncPoint();\n    syncTree.syncPointTree_ = syncTree.syncPointTree_.set(path, syncPoint);\n  } else {\n    foundAncestorDefaultView =\n      foundAncestorDefaultView || syncPointHasCompleteView(syncPoint);\n    serverCache =\n      serverCache || syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\n  }\n\n  let serverCacheComplete;\n  if (serverCache != null) {\n    serverCacheComplete = true;\n  } else {\n    serverCacheComplete = false;\n    serverCache = ChildrenNode.EMPTY_NODE;\n    const subtree = syncTree.syncPointTree_.subtree(path);\n    subtree.foreachChild((childName, childSyncPoint) => {\n      const completeCache = syncPointGetCompleteServerCache(\n        childSyncPoint,\n        newEmptyPath()\n      );\n      if (completeCache) {\n        serverCache = serverCache.updateImmediateChild(\n          childName,\n          completeCache\n        );\n      }\n    });\n  }\n\n  const viewAlreadyExists = syncPointViewExistsForQuery(syncPoint, query);\n  if (!viewAlreadyExists && !query._queryParams.loadsAllData()) {\n    // We need to track a tag for this query\n    const queryKey = syncTreeMakeQueryKey_(query);\n    assert(\n      !syncTree.queryToTagMap.has(queryKey),\n      'View does not exist, but we have a tag'\n    );\n    const tag = syncTreeGetNextQueryTag_();\n    syncTree.queryToTagMap.set(queryKey, tag);\n    syncTree.tagToQueryMap.set(tag, queryKey);\n  }\n  const writesCache = writeTreeChildWrites(syncTree.pendingWriteTree_, path);\n  let events = syncPointAddEventRegistration(\n    syncPoint,\n    query,\n    eventRegistration,\n    writesCache,\n    serverCache,\n    serverCacheComplete\n  );\n  if (!viewAlreadyExists && !foundAncestorDefaultView) {\n    const view = syncPointViewForQuery(syncPoint, query);\n    events = events.concat(syncTreeSetupListener_(syncTree, query, view));\n  }\n  return events;\n}\n\n/**\n * Returns a complete cache, if we have one, of the data at a particular path. If the location does not have a\n * listener above it, we will get a false \"null\". This shouldn't be a problem because transactions will always\n * have a listener above, and atomic operations would correctly show a jitter of <increment value> ->\n *     <incremented total> as the write is applied locally and then acknowledged at the server.\n *\n * Note: this method will *include* hidden writes from transaction with applyLocally set to false.\n *\n * @param path - The path to the data we want\n * @param writeIdsToExclude - A specific set to be excluded\n */\nexport function syncTreeCalcCompleteEventCache(\n  syncTree: SyncTree,\n  path: Path,\n  writeIdsToExclude?: number[]\n): Node {\n  const includeHiddenSets = true;\n  const writeTree = syncTree.pendingWriteTree_;\n  const serverCache = syncTree.syncPointTree_.findOnPath(\n    path,\n    (pathSoFar, syncPoint) => {\n      const relativePath = newRelativePath(pathSoFar, path);\n      const serverCache = syncPointGetCompleteServerCache(\n        syncPoint,\n        relativePath\n      );\n      if (serverCache) {\n        return serverCache;\n      }\n    }\n  );\n  return writeTreeCalcCompleteEventCache(\n    writeTree,\n    path,\n    serverCache,\n    writeIdsToExclude,\n    includeHiddenSets\n  );\n}\n\nexport function syncTreeGetServerValue(\n  syncTree: SyncTree,\n  query: QueryContext\n): Node | null {\n  const path = query._path;\n  let serverCache: Node | null = null;\n  // Any covering writes will necessarily be at the root, so really all we need to find is the server cache.\n  // Consider optimizing this once there's a better understanding of what actual behavior will be.\n  syncTree.syncPointTree_.foreachOnPath(path, (pathToSyncPoint, sp) => {\n    const relativePath = newRelativePath(pathToSyncPoint, path);\n    serverCache =\n      serverCache || syncPointGetCompleteServerCache(sp, relativePath);\n  });\n  let syncPoint = syncTree.syncPointTree_.get(path);\n  if (!syncPoint) {\n    syncPoint = new SyncPoint();\n    syncTree.syncPointTree_ = syncTree.syncPointTree_.set(path, syncPoint);\n  } else {\n    serverCache =\n      serverCache || syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\n  }\n  const serverCacheComplete = serverCache != null;\n  const serverCacheNode: CacheNode | null = serverCacheComplete\n    ? new CacheNode(serverCache, true, false)\n    : null;\n  const writesCache: WriteTreeRef | null = writeTreeChildWrites(\n    syncTree.pendingWriteTree_,\n    query._path\n  );\n  const view: View = syncPointGetView(\n    syncPoint,\n    query,\n    writesCache,\n    serverCacheComplete ? serverCacheNode.getNode() : ChildrenNode.EMPTY_NODE,\n    serverCacheComplete\n  );\n  return viewGetCompleteNode(view);\n}\n\n/**\n * A helper method that visits all descendant and ancestor SyncPoints, applying the operation.\n *\n * NOTES:\n * - Descendant SyncPoints will be visited first (since we raise events depth-first).\n *\n * - We call applyOperation() on each SyncPoint passing three things:\n *   1. A version of the Operation that has been made relative to the SyncPoint location.\n *   2. A WriteTreeRef of any writes we have cached at the SyncPoint location.\n *   3. A snapshot Node with cached server data, if we have it.\n *\n * - We concatenate all of the events returned by each SyncPoint and return the result.\n */\nfunction syncTreeApplyOperationToSyncPoints_(\n  syncTree: SyncTree,\n  operation: Operation\n): Event[] {\n  return syncTreeApplyOperationHelper_(\n    operation,\n    syncTree.syncPointTree_,\n    /*serverCache=*/ null,\n    writeTreeChildWrites(syncTree.pendingWriteTree_, newEmptyPath())\n  );\n}\n\n/**\n * Recursive helper for applyOperationToSyncPoints_\n */\nfunction syncTreeApplyOperationHelper_(\n  operation: Operation,\n  syncPointTree: ImmutableTree<SyncPoint>,\n  serverCache: Node | null,\n  writesCache: WriteTreeRef\n): Event[] {\n  if (pathIsEmpty(operation.path)) {\n    return syncTreeApplyOperationDescendantsHelper_(\n      operation,\n      syncPointTree,\n      serverCache,\n      writesCache\n    );\n  } else {\n    const syncPoint = syncPointTree.get(newEmptyPath());\n\n    // If we don't have cached server data, see if we can get it from this SyncPoint.\n    if (serverCache == null && syncPoint != null) {\n      serverCache = syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\n    }\n\n    let events: Event[] = [];\n    const childName = pathGetFront(operation.path);\n    const childOperation = operation.operationForChild(childName);\n    const childTree = syncPointTree.children.get(childName);\n    if (childTree && childOperation) {\n      const childServerCache = serverCache\n        ? serverCache.getImmediateChild(childName)\n        : null;\n      const childWritesCache = writeTreeRefChild(writesCache, childName);\n      events = events.concat(\n        syncTreeApplyOperationHelper_(\n          childOperation,\n          childTree,\n          childServerCache,\n          childWritesCache\n        )\n      );\n    }\n\n    if (syncPoint) {\n      events = events.concat(\n        syncPointApplyOperation(syncPoint, operation, writesCache, serverCache)\n      );\n    }\n\n    return events;\n  }\n}\n\n/**\n * Recursive helper for applyOperationToSyncPoints_\n */\nfunction syncTreeApplyOperationDescendantsHelper_(\n  operation: Operation,\n  syncPointTree: ImmutableTree<SyncPoint>,\n  serverCache: Node | null,\n  writesCache: WriteTreeRef\n): Event[] {\n  const syncPoint = syncPointTree.get(newEmptyPath());\n\n  // If we don't have cached server data, see if we can get it from this SyncPoint.\n  if (serverCache == null && syncPoint != null) {\n    serverCache = syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\n  }\n\n  let events: Event[] = [];\n  syncPointTree.children.inorderTraversal((childName, childTree) => {\n    const childServerCache = serverCache\n      ? serverCache.getImmediateChild(childName)\n      : null;\n    const childWritesCache = writeTreeRefChild(writesCache, childName);\n    const childOperation = operation.operationForChild(childName);\n    if (childOperation) {\n      events = events.concat(\n        syncTreeApplyOperationDescendantsHelper_(\n          childOperation,\n          childTree,\n          childServerCache,\n          childWritesCache\n        )\n      );\n    }\n  });\n\n  if (syncPoint) {\n    events = events.concat(\n      syncPointApplyOperation(syncPoint, operation, writesCache, serverCache)\n    );\n  }\n\n  return events;\n}\n\nfunction syncTreeCreateListenerForView_(\n  syncTree: SyncTree,\n  view: View\n): { hashFn(): string; onComplete(a: string, b?: unknown): Event[] } {\n  const query = view.query;\n  const tag = syncTreeTagForQuery_(syncTree, query);\n\n  return {\n    hashFn: () => {\n      const cache = viewGetServerCache(view) || ChildrenNode.EMPTY_NODE;\n      return cache.hash();\n    },\n    onComplete: (status: string): Event[] => {\n      if (status === 'ok') {\n        if (tag) {\n          return syncTreeApplyTaggedListenComplete(syncTree, query._path, tag);\n        } else {\n          return syncTreeApplyListenComplete(syncTree, query._path);\n        }\n      } else {\n        // If a listen failed, kill all of the listeners here, not just the one that triggered the error.\n        // Note that this may need to be scoped to just this listener if we change permissions on filtered children\n        const error = errorForServerCode(status, query);\n        return syncTreeRemoveEventRegistration(\n          syncTree,\n          query,\n          /*eventRegistration*/ null,\n          error\n        );\n      }\n    }\n  };\n}\n\n/**\n * Return the tag associated with the given query.\n */\nfunction syncTreeTagForQuery_(\n  syncTree: SyncTree,\n  query: QueryContext\n): number | null {\n  const queryKey = syncTreeMakeQueryKey_(query);\n  return syncTree.queryToTagMap.get(queryKey);\n}\n\n/**\n * Given a query, computes a \"queryKey\" suitable for use in our queryToTagMap_.\n */\nfunction syncTreeMakeQueryKey_(query: QueryContext): string {\n  return query._path.toString() + '$' + query._queryIdentifier;\n}\n\n/**\n * Return the query associated with the given tag, if we have one\n */\nfunction syncTreeQueryKeyForTag_(\n  syncTree: SyncTree,\n  tag: number\n): string | null {\n  return syncTree.tagToQueryMap.get(tag);\n}\n\n/**\n * Given a queryKey (created by makeQueryKey), parse it back into a path and queryId.\n */\nfunction syncTreeParseQueryKey_(queryKey: string): {\n  queryId: string;\n  path: Path;\n} {\n  const splitIndex = queryKey.indexOf('$');\n  assert(\n    splitIndex !== -1 && splitIndex < queryKey.length - 1,\n    'Bad queryKey.'\n  );\n  return {\n    queryId: queryKey.substr(splitIndex + 1),\n    path: new Path(queryKey.substr(0, splitIndex))\n  };\n}\n\n/**\n * A helper method to apply tagged operations\n */\nfunction syncTreeApplyTaggedOperation_(\n  syncTree: SyncTree,\n  queryPath: Path,\n  operation: Operation\n): Event[] {\n  const syncPoint = syncTree.syncPointTree_.get(queryPath);\n  assert(syncPoint, \"Missing sync point for query tag that we're tracking\");\n  const writesCache = writeTreeChildWrites(\n    syncTree.pendingWriteTree_,\n    queryPath\n  );\n  return syncPointApplyOperation(syncPoint, operation, writesCache, null);\n}\n\n/**\n * This collapses multiple unfiltered views into a single view, since we only need a single\n * listener for them.\n */\nfunction syncTreeCollectDistinctViewsForSubTree_(\n  subtree: ImmutableTree<SyncPoint>\n): View[] {\n  return subtree.fold<View[]>((relativePath, maybeChildSyncPoint, childMap) => {\n    if (maybeChildSyncPoint && syncPointHasCompleteView(maybeChildSyncPoint)) {\n      const completeView = syncPointGetCompleteView(maybeChildSyncPoint);\n      return [completeView];\n    } else {\n      // No complete view here, flatten any deeper listens into an array\n      let views: View[] = [];\n      if (maybeChildSyncPoint) {\n        views = syncPointGetQueryViews(maybeChildSyncPoint);\n      }\n      each(childMap, (_key: string, childViews: View[]) => {\n        views = views.concat(childViews);\n      });\n      return views;\n    }\n  });\n}\n\n/**\n * Normalizes a query to a query we send the server for listening\n *\n * @returns The normalized query\n */\nfunction syncTreeQueryForListening_(query: QueryContext): QueryContext {\n  if (query._queryParams.loadsAllData() && !query._queryParams.isDefault()) {\n    // We treat queries that load all data as default queries\n    // Cast is necessary because ref() technically returns Firebase which is actually fb.api.Firebase which inherits\n    // from Query\n    return new (syncTreeGetReferenceConstructor())(query._repo, query._path);\n  } else {\n    return query;\n  }\n}\n\nfunction syncTreeRemoveTags_(syncTree: SyncTree, queries: QueryContext[]) {\n  for (let j = 0; j < queries.length; ++j) {\n    const removedQuery = queries[j];\n    if (!removedQuery._queryParams.loadsAllData()) {\n      // We should have a tag for this\n      const removedQueryKey = syncTreeMakeQueryKey_(removedQuery);\n      const removedQueryTag = syncTree.queryToTagMap.get(removedQueryKey);\n      syncTree.queryToTagMap.delete(removedQueryKey);\n      syncTree.tagToQueryMap.delete(removedQueryTag);\n    }\n  }\n}\n\n/**\n * Static accessor for query tags.\n */\nfunction syncTreeGetNextQueryTag_(): number {\n  return syncTreeNextQueryTag_++;\n}\n\n/**\n * For a given new listen, manage the de-duplication of outstanding subscriptions.\n *\n * @returns This method can return events to support synchronous data sources\n */\nfunction syncTreeSetupListener_(\n  syncTree: SyncTree,\n  query: QueryContext,\n  view: View\n): Event[] {\n  const path = query._path;\n  const tag = syncTreeTagForQuery_(syncTree, query);\n  const listener = syncTreeCreateListenerForView_(syncTree, view);\n\n  const events = syncTree.listenProvider_.startListening(\n    syncTreeQueryForListening_(query),\n    tag,\n    listener.hashFn,\n    listener.onComplete\n  );\n\n  const subtree = syncTree.syncPointTree_.subtree(path);\n  // The root of this subtree has our query. We're here because we definitely need to send a listen for that, but we\n  // may need to shadow other listens as well.\n  if (tag) {\n    assert(\n      !syncPointHasCompleteView(subtree.value),\n      \"If we're adding a query, it shouldn't be shadowed\"\n    );\n  } else {\n    // Shadow everything at or below this location, this is a default listener.\n    const queriesToStop = subtree.fold<QueryContext[]>(\n      (relativePath, maybeChildSyncPoint, childMap) => {\n        if (\n          !pathIsEmpty(relativePath) &&\n          maybeChildSyncPoint &&\n          syncPointHasCompleteView(maybeChildSyncPoint)\n        ) {\n          return [syncPointGetCompleteView(maybeChildSyncPoint).query];\n        } else {\n          // No default listener here, flatten any deeper queries into an array\n          let queries: QueryContext[] = [];\n          if (maybeChildSyncPoint) {\n            queries = queries.concat(\n              syncPointGetQueryViews(maybeChildSyncPoint).map(\n                view => view.query\n              )\n            );\n          }\n          each(childMap, (_key: string, childQueries: QueryContext[]) => {\n            queries = queries.concat(childQueries);\n          });\n          return queries;\n        }\n      }\n    );\n    for (let i = 0; i < queriesToStop.length; ++i) {\n      const queryToStop = queriesToStop[i];\n      syncTree.listenProvider_.stopListening(\n        syncTreeQueryForListening_(queryToStop),\n        syncTreeTagForQuery_(syncTree, queryToStop)\n      );\n    }\n  }\n  return events;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { ChildrenNode } from '../snap/ChildrenNode';\nimport { PRIORITY_INDEX } from '../snap/indexes/PriorityIndex';\nimport { LeafNode } from '../snap/LeafNode';\nimport { Node } from '../snap/Node';\nimport { nodeFromJSON } from '../snap/nodeFromJSON';\nimport { SyncTree, syncTreeCalcCompleteEventCache } from '../SyncTree';\n\nimport { Indexable } from './misc';\nimport { Path, pathChild } from './Path';\n\n/* It's critical for performance that we do not calculate actual values from a SyncTree\n * unless and until the value is needed. Because we expose both a SyncTree and Node\n * version of deferred value resolution, we ned a wrapper class that will let us share\n * code.\n *\n * @see https://github.com/firebase/firebase-js-sdk/issues/2487\n */\ninterface ValueProvider {\n  getImmediateChild(childName: string): ValueProvider;\n  node(): Node;\n}\n\nclass ExistingValueProvider implements ValueProvider {\n  constructor(readonly node_: Node) {}\n\n  getImmediateChild(childName: string): ValueProvider {\n    const child = this.node_.getImmediateChild(childName);\n    return new ExistingValueProvider(child);\n  }\n\n  node(): Node {\n    return this.node_;\n  }\n}\n\nclass DeferredValueProvider implements ValueProvider {\n  private syncTree_: SyncTree;\n  private path_: Path;\n\n  constructor(syncTree: SyncTree, path: Path) {\n    this.syncTree_ = syncTree;\n    this.path_ = path;\n  }\n\n  getImmediateChild(childName: string): ValueProvider {\n    const childPath = pathChild(this.path_, childName);\n    return new DeferredValueProvider(this.syncTree_, childPath);\n  }\n\n  node(): Node {\n    return syncTreeCalcCompleteEventCache(this.syncTree_, this.path_);\n  }\n}\n\n/**\n * Generate placeholders for deferred values.\n */\nexport const generateWithValues = function (\n  values: {\n    [k: string]: unknown;\n  } | null\n): { [k: string]: unknown } {\n  values = values || {};\n  values['timestamp'] = values['timestamp'] || new Date().getTime();\n  return values;\n};\n\n/**\n * Value to use when firing local events. When writing server values, fire\n * local events with an approximate value, otherwise return value as-is.\n */\nexport const resolveDeferredLeafValue = function (\n  value: { [k: string]: unknown } | string | number | boolean,\n  existingVal: ValueProvider,\n  serverValues: { [k: string]: unknown }\n): string | number | boolean {\n  if (!value || typeof value !== 'object') {\n    return value as string | number | boolean;\n  }\n  assert('.sv' in value, 'Unexpected leaf node or priority contents');\n\n  if (typeof value['.sv'] === 'string') {\n    return resolveScalarDeferredValue(value['.sv'], existingVal, serverValues);\n  } else if (typeof value['.sv'] === 'object') {\n    return resolveComplexDeferredValue(value['.sv'], existingVal, serverValues);\n  } else {\n    assert(false, 'Unexpected server value: ' + JSON.stringify(value, null, 2));\n  }\n};\n\nconst resolveScalarDeferredValue = function (\n  op: string,\n  existing: ValueProvider,\n  serverValues: { [k: string]: unknown }\n): string | number | boolean {\n  switch (op) {\n    case 'timestamp':\n      return serverValues['timestamp'] as string | number | boolean;\n    default:\n      assert(false, 'Unexpected server value: ' + op);\n  }\n};\n\nconst resolveComplexDeferredValue = function (\n  op: object,\n  existing: ValueProvider,\n  unused: { [k: string]: unknown }\n): string | number | boolean {\n  if (!op.hasOwnProperty('increment')) {\n    assert(false, 'Unexpected server value: ' + JSON.stringify(op, null, 2));\n  }\n  const delta = op['increment'];\n  if (typeof delta !== 'number') {\n    assert(false, 'Unexpected increment value: ' + delta);\n  }\n\n  const existingNode = existing.node();\n  assert(\n    existingNode !== null && typeof existingNode !== 'undefined',\n    'Expected ChildrenNode.EMPTY_NODE for nulls'\n  );\n\n  // Incrementing a non-number sets the value to the incremented amount\n  if (!existingNode.isLeafNode()) {\n    return delta;\n  }\n\n  const leaf = existingNode as LeafNode;\n  const existingVal = leaf.getValue();\n  if (typeof existingVal !== 'number') {\n    return delta;\n  }\n\n  // No need to do over/underflow arithmetic here because JS only handles floats under the covers\n  return existingVal + delta;\n};\n\n/**\n * Recursively replace all deferred values and priorities in the tree with the\n * specified generated replacement values.\n * @param path - path to which write is relative\n * @param node - new data written at path\n * @param syncTree - current data\n */\nexport const resolveDeferredValueTree = function (\n  path: Path,\n  node: Node,\n  syncTree: SyncTree,\n  serverValues: Indexable\n): Node {\n  return resolveDeferredValue(\n    node,\n    new DeferredValueProvider(syncTree, path),\n    serverValues\n  );\n};\n\n/**\n * Recursively replace all deferred values and priorities in the node with the\n * specified generated replacement values.  If there are no server values in the node,\n * it'll be returned as-is.\n */\nexport const resolveDeferredValueSnapshot = function (\n  node: Node,\n  existing: Node,\n  serverValues: Indexable\n): Node {\n  return resolveDeferredValue(\n    node,\n    new ExistingValueProvider(existing),\n    serverValues\n  );\n};\n\nfunction resolveDeferredValue(\n  node: Node,\n  existingVal: ValueProvider,\n  serverValues: Indexable\n): Node {\n  const rawPri = node.getPriority().val() as\n    | Indexable\n    | boolean\n    | null\n    | number\n    | string;\n  const priority = resolveDeferredLeafValue(\n    rawPri,\n    existingVal.getImmediateChild('.priority'),\n    serverValues\n  );\n  let newNode: Node;\n\n  if (node.isLeafNode()) {\n    const leafNode = node as LeafNode;\n    const value = resolveDeferredLeafValue(\n      leafNode.getValue(),\n      existingVal,\n      serverValues\n    );\n    if (\n      value !== leafNode.getValue() ||\n      priority !== leafNode.getPriority().val()\n    ) {\n      return new LeafNode(value, nodeFromJSON(priority));\n    } else {\n      return node;\n    }\n  } else {\n    const childrenNode = node as ChildrenNode;\n    newNode = childrenNode;\n    if (priority !== childrenNode.getPriority().val()) {\n      newNode = newNode.updatePriority(new LeafNode(priority));\n    }\n    childrenNode.forEachChild(PRIORITY_INDEX, (childName, childNode) => {\n      const newChildNode = resolveDeferredValue(\n        childNode,\n        existingVal.getImmediateChild(childName),\n        serverValues\n      );\n      if (newChildNode !== childNode) {\n        newNode = newNode.updateImmediateChild(childName, newChildNode);\n      }\n    });\n    return newNode;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { contains, safeGet } from '@firebase/util';\n\nimport { Path, pathGetFront, pathPopFront } from './Path';\nimport { each } from './util';\n\n/**\n * Node in a Tree.\n */\nexport interface TreeNode<T> {\n  // TODO: Consider making accessors that create children and value lazily or\n  // separate Internal / Leaf 'types'.\n  children: Record<string, TreeNode<T>>;\n  childCount: number;\n  value?: T;\n}\n\n/**\n * A light-weight tree, traversable by path.  Nodes can have both values and children.\n * Nodes are not enumerated (by forEachChild) unless they have a value or non-empty\n * children.\n */\nexport class Tree<T> {\n  /**\n   * @param name - Optional name of the node.\n   * @param parent - Optional parent node.\n   * @param node - Optional node to wrap.\n   */\n  constructor(\n    readonly name: string = '',\n    readonly parent: Tree<T> | null = null,\n    public node: TreeNode<T> = { children: {}, childCount: 0 }\n  ) {}\n}\n\n/**\n * Returns a sub-Tree for the given path.\n *\n * @param pathObj - Path to look up.\n * @returns Tree for path.\n */\nexport function treeSubTree<T>(tree: Tree<T>, pathObj: string | Path): Tree<T> {\n  // TODO: Require pathObj to be Path?\n  let path = pathObj instanceof Path ? pathObj : new Path(pathObj);\n  let child = tree,\n    next = pathGetFront(path);\n  while (next !== null) {\n    const childNode = safeGet(child.node.children, next) || {\n      children: {},\n      childCount: 0\n    };\n    child = new Tree<T>(next, child, childNode);\n    path = pathPopFront(path);\n    next = pathGetFront(path);\n  }\n\n  return child;\n}\n\n/**\n * Returns the data associated with this tree node.\n *\n * @returns The data or null if no data exists.\n */\nexport function treeGetValue<T>(tree: Tree<T>): T | undefined {\n  return tree.node.value;\n}\n\n/**\n * Sets data to this tree node.\n *\n * @param value - Value to set.\n */\nexport function treeSetValue<T>(tree: Tree<T>, value: T | undefined): void {\n  tree.node.value = value;\n  treeUpdateParents(tree);\n}\n\n/**\n * @returns Whether the tree has any children.\n */\nexport function treeHasChildren<T>(tree: Tree<T>): boolean {\n  return tree.node.childCount > 0;\n}\n\n/**\n * @returns Whethe rthe tree is empty (no value or children).\n */\nexport function treeIsEmpty<T>(tree: Tree<T>): boolean {\n  return treeGetValue(tree) === undefined && !treeHasChildren(tree);\n}\n\n/**\n * Calls action for each child of this tree node.\n *\n * @param action - Action to be called for each child.\n */\nexport function treeForEachChild<T>(\n  tree: Tree<T>,\n  action: (tree: Tree<T>) => void\n): void {\n  each(tree.node.children, (child: string, childTree: TreeNode<T>) => {\n    action(new Tree<T>(child, tree, childTree));\n  });\n}\n\n/**\n * Does a depth-first traversal of this node's descendants, calling action for each one.\n *\n * @param action - Action to be called for each child.\n * @param includeSelf - Whether to call action on this node as well. Defaults to\n *   false.\n * @param childrenFirst - Whether to call action on children before calling it on\n *   parent.\n */\nexport function treeForEachDescendant<T>(\n  tree: Tree<T>,\n  action: (tree: Tree<T>) => void,\n  includeSelf?: boolean,\n  childrenFirst?: boolean\n): void {\n  if (includeSelf && !childrenFirst) {\n    action(tree);\n  }\n\n  treeForEachChild(tree, child => {\n    treeForEachDescendant(child, action, true, childrenFirst);\n  });\n\n  if (includeSelf && childrenFirst) {\n    action(tree);\n  }\n}\n\n/**\n * Calls action on each ancestor node.\n *\n * @param action - Action to be called on each parent; return\n *   true to abort.\n * @param includeSelf - Whether to call action on this node as well.\n * @returns true if the action callback returned true.\n */\nexport function treeForEachAncestor<T>(\n  tree: Tree<T>,\n  action: (tree: Tree<T>) => unknown,\n  includeSelf?: boolean\n): boolean {\n  let node = includeSelf ? tree : tree.parent;\n  while (node !== null) {\n    if (action(node)) {\n      return true;\n    }\n    node = node.parent;\n  }\n  return false;\n}\n\n/**\n * Does a depth-first traversal of this node's descendants.  When a descendant with a value\n * is found, action is called on it and traversal does not continue inside the node.\n * Action is *not* called on this node.\n *\n * @param action - Action to be called for each child.\n */\nexport function treeForEachImmediateDescendantWithValue<T>(\n  tree: Tree<T>,\n  action: (tree: Tree<T>) => void\n): void {\n  treeForEachChild(tree, child => {\n    if (treeGetValue(child) !== undefined) {\n      action(child);\n    } else {\n      treeForEachImmediateDescendantWithValue(child, action);\n    }\n  });\n}\n\n/**\n * @returns The path of this tree node, as a Path.\n */\nexport function treeGetPath<T>(tree: Tree<T>) {\n  return new Path(\n    tree.parent === null\n      ? tree.name\n      : treeGetPath(tree.parent) + '/' + tree.name\n  );\n}\n\n/**\n * Adds or removes this child from its parent based on whether it's empty or not.\n */\nfunction treeUpdateParents<T>(tree: Tree<T>) {\n  if (tree.parent !== null) {\n    treeUpdateChild(tree.parent, tree.name, tree);\n  }\n}\n\n/**\n * Adds or removes the passed child to this tree node, depending on whether it's empty.\n *\n * @param childName - The name of the child to update.\n * @param child - The child to update.\n */\nfunction treeUpdateChild<T>(tree: Tree<T>, childName: string, child: Tree<T>) {\n  const childEmpty = treeIsEmpty(child);\n  const childExists = contains(tree.node.children, childName);\n  if (childEmpty && childExists) {\n    delete tree.node.children[childName];\n    tree.node.childCount--;\n    treeUpdateParents(tree);\n  } else if (!childEmpty && !childExists) {\n    tree.node.children[childName] = child.node;\n    tree.node.childCount++;\n    treeUpdateParents(tree);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  contains,\n  errorPrefix as errorPrefixFxn,\n  safeGet,\n  stringLength\n} from '@firebase/util';\n\nimport { RepoInfo } from '../RepoInfo';\n\nimport {\n  Path,\n  pathChild,\n  pathCompare,\n  pathContains,\n  pathGetBack,\n  pathGetFront,\n  pathSlice,\n  ValidationPath,\n  validationPathPop,\n  validationPathPush,\n  validationPathToErrorString\n} from './Path';\nimport { each, isInvalidJSONNumber } from './util';\n\n/**\n * True for invalid Firebase keys\n */\nexport const INVALID_KEY_REGEX_ = /[\\[\\].#$\\/\\u0000-\\u001F\\u007F]/;\n\n/**\n * True for invalid Firebase paths.\n * Allows '/' in paths.\n */\nexport const INVALID_PATH_REGEX_ = /[\\[\\].#$\\u0000-\\u001F\\u007F]/;\n\n/**\n * Maximum number of characters to allow in leaf value\n */\nexport const MAX_LEAF_SIZE_ = 10 * 1024 * 1024;\n\nexport const isValidKey = function (key: unknown): boolean {\n  return (\n    typeof key === 'string' && key.length !== 0 && !INVALID_KEY_REGEX_.test(key)\n  );\n};\n\nexport const isValidPathString = function (pathString: string): boolean {\n  return (\n    typeof pathString === 'string' &&\n    pathString.length !== 0 &&\n    !INVALID_PATH_REGEX_.test(pathString)\n  );\n};\n\nexport const isValidRootPathString = function (pathString: string): boolean {\n  if (pathString) {\n    // Allow '/.info/' at the beginning.\n    pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\n  }\n\n  return isValidPathString(pathString);\n};\n\nexport const isValidPriority = function (priority: unknown): boolean {\n  return (\n    priority === null ||\n    typeof priority === 'string' ||\n    (typeof priority === 'number' && !isInvalidJSONNumber(priority)) ||\n    (priority &&\n      typeof priority === 'object' &&\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      contains(priority as any, '.sv'))\n  );\n};\n\n/**\n * Pre-validate a datum passed as an argument to Firebase function.\n */\nexport const validateFirebaseDataArg = function (\n  fnName: string,\n  value: unknown,\n  path: Path,\n  optional: boolean\n) {\n  if (optional && value === undefined) {\n    return;\n  }\n\n  validateFirebaseData(errorPrefixFxn(fnName, 'value'), value, path);\n};\n\n/**\n * Validate a data object client-side before sending to server.\n */\nexport const validateFirebaseData = function (\n  errorPrefix: string,\n  data: unknown,\n  path_: Path | ValidationPath\n) {\n  const path =\n    path_ instanceof Path ? new ValidationPath(path_, errorPrefix) : path_;\n\n  if (data === undefined) {\n    throw new Error(\n      errorPrefix + 'contains undefined ' + validationPathToErrorString(path)\n    );\n  }\n  if (typeof data === 'function') {\n    throw new Error(\n      errorPrefix +\n        'contains a function ' +\n        validationPathToErrorString(path) +\n        ' with contents = ' +\n        data.toString()\n    );\n  }\n  if (isInvalidJSONNumber(data)) {\n    throw new Error(\n      errorPrefix +\n        'contains ' +\n        data.toString() +\n        ' ' +\n        validationPathToErrorString(path)\n    );\n  }\n\n  // Check max leaf size, but try to avoid the utf8 conversion if we can.\n  if (\n    typeof data === 'string' &&\n    data.length > MAX_LEAF_SIZE_ / 3 &&\n    stringLength(data) > MAX_LEAF_SIZE_\n  ) {\n    throw new Error(\n      errorPrefix +\n        'contains a string greater than ' +\n        MAX_LEAF_SIZE_ +\n        ' utf8 bytes ' +\n        validationPathToErrorString(path) +\n        \" ('\" +\n        data.substring(0, 50) +\n        \"...')\"\n    );\n  }\n\n  // TODO = Perf = Consider combining the recursive validation of keys into NodeFromJSON\n  // to save extra walking of large objects.\n  if (data && typeof data === 'object') {\n    let hasDotValue = false;\n    let hasActualChild = false;\n    each(data, (key: string, value: unknown) => {\n      if (key === '.value') {\n        hasDotValue = true;\n      } else if (key !== '.priority' && key !== '.sv') {\n        hasActualChild = true;\n        if (!isValidKey(key)) {\n          throw new Error(\n            errorPrefix +\n              ' contains an invalid key (' +\n              key +\n              ') ' +\n              validationPathToErrorString(path) +\n              '.  Keys must be non-empty strings ' +\n              'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"'\n          );\n        }\n      }\n\n      validationPathPush(path, key);\n      validateFirebaseData(errorPrefix, value, path);\n      validationPathPop(path);\n    });\n\n    if (hasDotValue && hasActualChild) {\n      throw new Error(\n        errorPrefix +\n          ' contains \".value\" child ' +\n          validationPathToErrorString(path) +\n          ' in addition to actual children.'\n      );\n    }\n  }\n};\n\n/**\n * Pre-validate paths passed in the firebase function.\n */\nexport const validateFirebaseMergePaths = function (\n  errorPrefix: string,\n  mergePaths: Path[]\n) {\n  let i, curPath: Path;\n  for (i = 0; i < mergePaths.length; i++) {\n    curPath = mergePaths[i];\n    const keys = pathSlice(curPath);\n    for (let j = 0; j < keys.length; j++) {\n      if (keys[j] === '.priority' && j === keys.length - 1) {\n        // .priority is OK\n      } else if (!isValidKey(keys[j])) {\n        throw new Error(\n          errorPrefix +\n            'contains an invalid key (' +\n            keys[j] +\n            ') in path ' +\n            curPath.toString() +\n            '. Keys must be non-empty strings ' +\n            'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"'\n        );\n      }\n    }\n  }\n\n  // Check that update keys are not descendants of each other.\n  // We rely on the property that sorting guarantees that ancestors come\n  // right before descendants.\n  mergePaths.sort(pathCompare);\n  let prevPath: Path | null = null;\n  for (i = 0; i < mergePaths.length; i++) {\n    curPath = mergePaths[i];\n    if (prevPath !== null && pathContains(prevPath, curPath)) {\n      throw new Error(\n        errorPrefix +\n          'contains a path ' +\n          prevPath.toString() +\n          ' that is ancestor of another path ' +\n          curPath.toString()\n      );\n    }\n    prevPath = curPath;\n  }\n};\n\n/**\n * pre-validate an object passed as an argument to firebase function (\n * must be an object - e.g. for firebase.update()).\n */\nexport const validateFirebaseMergeDataArg = function (\n  fnName: string,\n  data: unknown,\n  path: Path,\n  optional: boolean\n) {\n  if (optional && data === undefined) {\n    return;\n  }\n\n  const errorPrefix = errorPrefixFxn(fnName, 'values');\n\n  if (!(data && typeof data === 'object') || Array.isArray(data)) {\n    throw new Error(\n      errorPrefix + ' must be an object containing the children to replace.'\n    );\n  }\n\n  const mergePaths: Path[] = [];\n  each(data, (key: string, value: unknown) => {\n    const curPath = new Path(key);\n    validateFirebaseData(errorPrefix, value, pathChild(path, curPath));\n    if (pathGetBack(curPath) === '.priority') {\n      if (!isValidPriority(value)) {\n        throw new Error(\n          errorPrefix +\n            \"contains an invalid value for '\" +\n            curPath.toString() +\n            \"', which must be a valid \" +\n            'Firebase priority (a string, finite number, server value, or null).'\n        );\n      }\n    }\n    mergePaths.push(curPath);\n  });\n  validateFirebaseMergePaths(errorPrefix, mergePaths);\n};\n\nexport const validatePriority = function (\n  fnName: string,\n  priority: unknown,\n  optional: boolean\n) {\n  if (optional && priority === undefined) {\n    return;\n  }\n  if (isInvalidJSONNumber(priority)) {\n    throw new Error(\n      errorPrefixFxn(fnName, 'priority') +\n        'is ' +\n        priority.toString() +\n        ', but must be a valid Firebase priority (a string, finite number, ' +\n        'server value, or null).'\n    );\n  }\n  // Special case to allow importing data with a .sv.\n  if (!isValidPriority(priority)) {\n    throw new Error(\n      errorPrefixFxn(fnName, 'priority') +\n        'must be a valid Firebase priority ' +\n        '(a string, finite number, server value, or null).'\n    );\n  }\n};\n\nexport const validateKey = function (\n  fnName: string,\n  argumentName: string,\n  key: string,\n  optional: boolean\n) {\n  if (optional && key === undefined) {\n    return;\n  }\n  if (!isValidKey(key)) {\n    throw new Error(\n      errorPrefixFxn(fnName, argumentName) +\n        'was an invalid key = \"' +\n        key +\n        '\".  Firebase keys must be non-empty strings and ' +\n        'can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\").'\n    );\n  }\n};\n\n/**\n * @internal\n */\nexport const validatePathString = function (\n  fnName: string,\n  argumentName: string,\n  pathString: string,\n  optional: boolean\n) {\n  if (optional && pathString === undefined) {\n    return;\n  }\n\n  if (!isValidPathString(pathString)) {\n    throw new Error(\n      errorPrefixFxn(fnName, argumentName) +\n        'was an invalid path = \"' +\n        pathString +\n        '\". Paths must be non-empty strings and ' +\n        'can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\"'\n    );\n  }\n};\n\nexport const validateRootPathString = function (\n  fnName: string,\n  argumentName: string,\n  pathString: string,\n  optional: boolean\n) {\n  if (pathString) {\n    // Allow '/.info/' at the beginning.\n    pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\n  }\n\n  validatePathString(fnName, argumentName, pathString, optional);\n};\n\n/**\n * @internal\n */\nexport const validateWritablePath = function (fnName: string, path: Path) {\n  if (pathGetFront(path) === '.info') {\n    throw new Error(fnName + \" failed = Can't modify data under /.info/\");\n  }\n};\n\nexport const validateUrl = function (\n  fnName: string,\n  parsedUrl: { repoInfo: RepoInfo; path: Path }\n) {\n  // TODO = Validate server better.\n  const pathString = parsedUrl.path.toString();\n  if (\n    !(typeof parsedUrl.repoInfo.host === 'string') ||\n    parsedUrl.repoInfo.host.length === 0 ||\n    (!isValidKey(parsedUrl.repoInfo.namespace) &&\n      parsedUrl.repoInfo.host.split(':')[0] !== 'localhost') ||\n    (pathString.length !== 0 && !isValidRootPathString(pathString))\n  ) {\n    throw new Error(\n      errorPrefixFxn(fnName, 'url') +\n        'must be a valid firebase URL and ' +\n        'the path can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\".'\n    );\n  }\n};\n\nexport const validateString = function (\n  fnName: string,\n  argumentName: string,\n  string: unknown,\n  optional: boolean\n) {\n  if (optional && string === undefined) {\n    return;\n  }\n  if (!(typeof string === 'string')) {\n    throw new Error(\n      errorPrefixFxn(fnName, argumentName) + 'must be a valid string.'\n    );\n  }\n};\n\nexport const validateObject = function (\n  fnName: string,\n  argumentName: string,\n  obj: unknown,\n  optional: boolean\n) {\n  if (optional && obj === undefined) {\n    return;\n  }\n  if (!(obj && typeof obj === 'object') || obj === null) {\n    throw new Error(\n      errorPrefixFxn(fnName, argumentName) + 'must be a valid object.'\n    );\n  }\n};\n\nexport const validateObjectContainsKey = function (\n  fnName: string,\n  argumentName: string,\n  obj: unknown,\n  key: string,\n  optional: boolean,\n  optType?: string\n) {\n  const objectContainsKey =\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    obj && typeof obj === 'object' && contains(obj as any, key);\n\n  if (!objectContainsKey) {\n    if (optional) {\n      return;\n    } else {\n      throw new Error(\n        errorPrefixFxn(fnName, argumentName) +\n          'must contain the key \"' +\n          key +\n          '\"'\n      );\n    }\n  }\n\n  if (optType) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const val = safeGet(obj as any, key);\n    if (\n      (optType === 'number' && !(typeof val === 'number')) ||\n      (optType === 'string' && !(typeof val === 'string')) ||\n      (optType === 'boolean' && !(typeof val === 'boolean')) ||\n      (optType === 'function' && !(typeof val === 'function')) ||\n      (optType === 'object' && !(typeof val === 'object') && val)\n    ) {\n      if (optional) {\n        throw new Error(\n          errorPrefixFxn(fnName, argumentName) +\n            'contains invalid value for key \"' +\n            key +\n            '\" (must be of type \"' +\n            optType +\n            '\")'\n        );\n      } else {\n        throw new Error(\n          errorPrefixFxn(fnName, argumentName) +\n            'must contain the key \"' +\n            key +\n            '\" with type \"' +\n            optType +\n            '\"'\n        );\n      }\n    }\n  }\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Path, pathContains, pathEquals } from '../util/Path';\nimport { exceptionGuard, log, logger } from '../util/util';\n\nimport { Event } from './Event';\n\n/**\n * The event queue serves a few purposes:\n * 1. It ensures we maintain event order in the face of event callbacks doing operations that result in more\n *    events being queued.\n * 2. raiseQueuedEvents() handles being called reentrantly nicely.  That is, if in the course of raising events,\n *    raiseQueuedEvents() is called again, the \"inner\" call will pick up raising events where the \"outer\" call\n *    left off, ensuring that the events are still raised synchronously and in order.\n * 3. You can use raiseEventsAtPath and raiseEventsForChangedPath to ensure only relevant previously-queued\n *    events are raised synchronously.\n *\n * NOTE: This can all go away if/when we move to async events.\n *\n */\nexport class EventQueue {\n  eventLists_: EventList[] = [];\n\n  /**\n   * Tracks recursion depth of raiseQueuedEvents_, for debugging purposes.\n   */\n  recursionDepth_ = 0;\n}\n\n/**\n * @param eventDataList - The new events to queue.\n */\nexport function eventQueueQueueEvents(\n  eventQueue: EventQueue,\n  eventDataList: Event[]\n) {\n  // We group events by path, storing them in a single EventList, to make it easier to skip over them quickly.\n  let currList: EventList | null = null;\n  for (let i = 0; i < eventDataList.length; i++) {\n    const data = eventDataList[i];\n    const path = data.getPath();\n    if (currList !== null && !pathEquals(path, currList.path)) {\n      eventQueue.eventLists_.push(currList);\n      currList = null;\n    }\n\n    if (currList === null) {\n      currList = { events: [], path };\n    }\n\n    currList.events.push(data);\n  }\n  if (currList) {\n    eventQueue.eventLists_.push(currList);\n  }\n}\n\n/**\n * Queues the specified events and synchronously raises all events (including previously queued ones)\n * for the specified path.\n *\n * It is assumed that the new events are all for the specified path.\n *\n * @param path - The path to raise events for.\n * @param eventDataList - The new events to raise.\n */\nexport function eventQueueRaiseEventsAtPath(\n  eventQueue: EventQueue,\n  path: Path,\n  eventDataList: Event[]\n) {\n  eventQueueQueueEvents(eventQueue, eventDataList);\n  eventQueueRaiseQueuedEventsMatchingPredicate(eventQueue, eventPath =>\n    pathEquals(eventPath, path)\n  );\n}\n\n/**\n * Queues the specified events and synchronously raises all events (including previously queued ones) for\n * locations related to the specified change path (i.e. all ancestors and descendants).\n *\n * It is assumed that the new events are all related (ancestor or descendant) to the specified path.\n *\n * @param changedPath - The path to raise events for.\n * @param eventDataList - The events to raise\n */\nexport function eventQueueRaiseEventsForChangedPath(\n  eventQueue: EventQueue,\n  changedPath: Path,\n  eventDataList: Event[]\n) {\n  eventQueueQueueEvents(eventQueue, eventDataList);\n  eventQueueRaiseQueuedEventsMatchingPredicate(\n    eventQueue,\n    eventPath =>\n      pathContains(eventPath, changedPath) ||\n      pathContains(changedPath, eventPath)\n  );\n}\n\nfunction eventQueueRaiseQueuedEventsMatchingPredicate(\n  eventQueue: EventQueue,\n  predicate: (path: Path) => boolean\n) {\n  eventQueue.recursionDepth_++;\n\n  let sentAll = true;\n  for (let i = 0; i < eventQueue.eventLists_.length; i++) {\n    const eventList = eventQueue.eventLists_[i];\n    if (eventList) {\n      const eventPath = eventList.path;\n      if (predicate(eventPath)) {\n        eventListRaise(eventQueue.eventLists_[i]);\n        eventQueue.eventLists_[i] = null;\n      } else {\n        sentAll = false;\n      }\n    }\n  }\n\n  if (sentAll) {\n    eventQueue.eventLists_ = [];\n  }\n\n  eventQueue.recursionDepth_--;\n}\n\ninterface EventList {\n  events: Event[];\n  path: Path;\n}\n\n/**\n * Iterates through the list and raises each event\n */\nfunction eventListRaise(eventList: EventList) {\n  for (let i = 0; i < eventList.events.length; i++) {\n    const eventData = eventList.events[i];\n    if (eventData !== null) {\n      eventList.events[i] = null;\n      const eventFn = eventData.getEventRunner();\n      if (logger) {\n        log('event: ' + eventData.toString());\n      }\n      exceptionGuard(eventFn);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  contains,\n  isEmpty,\n  map,\n  safeGet,\n  stringify\n} from '@firebase/util';\n\nimport { AppCheckTokenProvider } from './AppCheckTokenProvider';\nimport { AuthTokenProvider } from './AuthTokenProvider';\nimport { PersistentConnection } from './PersistentConnection';\nimport { ReadonlyRestClient } from './ReadonlyRestClient';\nimport { RepoInfo } from './RepoInfo';\nimport { ServerActions } from './ServerActions';\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { Node } from './snap/Node';\nimport { nodeFromJSON } from './snap/nodeFromJSON';\nimport { SnapshotHolder } from './SnapshotHolder';\nimport {\n  newSparseSnapshotTree,\n  SparseSnapshotTree,\n  sparseSnapshotTreeForEachTree,\n  sparseSnapshotTreeForget,\n  sparseSnapshotTreeRemember\n} from './SparseSnapshotTree';\nimport { StatsCollection } from './stats/StatsCollection';\nimport { StatsListener } from './stats/StatsListener';\nimport {\n  statsManagerGetCollection,\n  statsManagerGetOrCreateReporter\n} from './stats/StatsManager';\nimport { StatsReporter, statsReporterIncludeStat } from './stats/StatsReporter';\nimport {\n  SyncTree,\n  syncTreeAckUserWrite,\n  syncTreeAddEventRegistration,\n  syncTreeApplyServerMerge,\n  syncTreeApplyServerOverwrite,\n  syncTreeApplyTaggedQueryMerge,\n  syncTreeApplyTaggedQueryOverwrite,\n  syncTreeApplyUserMerge,\n  syncTreeApplyUserOverwrite,\n  syncTreeCalcCompleteEventCache,\n  syncTreeGetServerValue,\n  syncTreeRemoveEventRegistration\n} from './SyncTree';\nimport { Indexable } from './util/misc';\nimport {\n  newEmptyPath,\n  newRelativePath,\n  Path,\n  pathChild,\n  pathGetFront,\n  pathPopFront\n} from './util/Path';\nimport {\n  generateWithValues,\n  resolveDeferredValueSnapshot,\n  resolveDeferredValueTree\n} from './util/ServerValues';\nimport {\n  Tree,\n  treeForEachAncestor,\n  treeForEachChild,\n  treeForEachDescendant,\n  treeGetPath,\n  treeGetValue,\n  treeHasChildren,\n  treeSetValue,\n  treeSubTree\n} from './util/Tree';\nimport {\n  beingCrawled,\n  each,\n  exceptionGuard,\n  log,\n  LUIDGenerator,\n  warn\n} from './util/util';\nimport { isValidPriority, validateFirebaseData } from './util/validation';\nimport { Event } from './view/Event';\nimport {\n  EventQueue,\n  eventQueueQueueEvents,\n  eventQueueRaiseEventsAtPath,\n  eventQueueRaiseEventsForChangedPath\n} from './view/EventQueue';\nimport { EventRegistration, QueryContext } from './view/EventRegistration';\n\nconst INTERRUPT_REASON = 'repo_interrupt';\n\n/**\n * If a transaction does not succeed after 25 retries, we abort it. Among other\n * things this ensure that if there's ever a bug causing a mismatch between\n * client / server hashes for some data, we won't retry indefinitely.\n */\nconst MAX_TRANSACTION_RETRIES = 25;\n\nconst enum TransactionStatus {\n  // We've run the transaction and updated transactionResultData_ with the result, but it isn't currently sent to the\n  // server. A transaction will go from RUN -> SENT -> RUN if it comes back from the server as rejected due to\n  // mismatched hash.\n  RUN,\n\n  // We've run the transaction and sent it to the server and it's currently outstanding (hasn't come back as accepted\n  // or rejected yet).\n  SENT,\n\n  // Temporary state used to mark completed transactions (whether successful or aborted).  The transaction will be\n  // removed when we get a chance to prune completed ones.\n  COMPLETED,\n\n  // Used when an already-sent transaction needs to be aborted (e.g. due to a conflicting set() call that was made).\n  // If it comes back as unsuccessful, we'll abort it.\n  SENT_NEEDS_ABORT,\n\n  // Temporary state used to mark transactions that need to be aborted.\n  NEEDS_ABORT\n}\n\ninterface Transaction {\n  path: Path;\n  update: (a: unknown) => unknown;\n  onComplete: (\n    error: Error | null,\n    committed: boolean,\n    node: Node | null\n  ) => void;\n  status: TransactionStatus;\n  order: number;\n  applyLocally: boolean;\n  retryCount: number;\n  unwatcher: () => void;\n  abortReason: string | null;\n  currentWriteId: number;\n  currentInputSnapshot: Node | null;\n  currentOutputSnapshotRaw: Node | null;\n  currentOutputSnapshotResolved: Node | null;\n}\n\n/**\n * A connection to a single data repository.\n */\nexport class Repo {\n  /** Key for uniquely identifying this repo, used in RepoManager */\n  readonly key: string;\n\n  dataUpdateCount = 0;\n  infoSyncTree_: SyncTree;\n  serverSyncTree_: SyncTree;\n\n  stats_: StatsCollection;\n  statsListener_: StatsListener | null = null;\n  eventQueue_ = new EventQueue();\n  nextWriteId_ = 1;\n  server_: ServerActions;\n  statsReporter_: StatsReporter;\n  infoData_: SnapshotHolder;\n  interceptServerDataCallback_: ((a: string, b: unknown) => void) | null = null;\n\n  /** A list of data pieces and paths to be set when this client disconnects. */\n  onDisconnect_: SparseSnapshotTree = newSparseSnapshotTree();\n\n  /** Stores queues of outstanding transactions for Firebase locations. */\n  transactionQueueTree_ = new Tree<Transaction[]>();\n\n  // TODO: This should be @private but it's used by test_access.js and internal.js\n  persistentConnection_: PersistentConnection | null = null;\n\n  constructor(\n    public repoInfo_: RepoInfo,\n    public forceRestClient_: boolean,\n    public authTokenProvider_: AuthTokenProvider,\n    public appCheckProvider_: AppCheckTokenProvider\n  ) {\n    // This key is intentionally not updated if RepoInfo is later changed or replaced\n    this.key = this.repoInfo_.toURLString();\n  }\n\n  /**\n   * @returns The URL corresponding to the root of this Firebase.\n   */\n  toString(): string {\n    return (\n      (this.repoInfo_.secure ? 'https://' : 'http://') + this.repoInfo_.host\n    );\n  }\n}\n\nexport function repoStart(\n  repo: Repo,\n  appId: string,\n  authOverride?: object\n): void {\n  repo.stats_ = statsManagerGetCollection(repo.repoInfo_);\n\n  if (repo.forceRestClient_ || beingCrawled()) {\n    repo.server_ = new ReadonlyRestClient(\n      repo.repoInfo_,\n      (\n        pathString: string,\n        data: unknown,\n        isMerge: boolean,\n        tag: number | null\n      ) => {\n        repoOnDataUpdate(repo, pathString, data, isMerge, tag);\n      },\n      repo.authTokenProvider_,\n      repo.appCheckProvider_\n    );\n\n    // Minor hack: Fire onConnect immediately, since there's no actual connection.\n    setTimeout(() => repoOnConnectStatus(repo, /* connectStatus= */ true), 0);\n  } else {\n    // Validate authOverride\n    if (typeof authOverride !== 'undefined' && authOverride !== null) {\n      if (typeof authOverride !== 'object') {\n        throw new Error(\n          'Only objects are supported for option databaseAuthVariableOverride'\n        );\n      }\n      try {\n        stringify(authOverride);\n      } catch (e) {\n        throw new Error('Invalid authOverride provided: ' + e);\n      }\n    }\n\n    repo.persistentConnection_ = new PersistentConnection(\n      repo.repoInfo_,\n      appId,\n      (\n        pathString: string,\n        data: unknown,\n        isMerge: boolean,\n        tag: number | null\n      ) => {\n        repoOnDataUpdate(repo, pathString, data, isMerge, tag);\n      },\n      (connectStatus: boolean) => {\n        repoOnConnectStatus(repo, connectStatus);\n      },\n      (updates: object) => {\n        repoOnServerInfoUpdate(repo, updates);\n      },\n      repo.authTokenProvider_,\n      repo.appCheckProvider_,\n      authOverride\n    );\n\n    repo.server_ = repo.persistentConnection_;\n  }\n\n  repo.authTokenProvider_.addTokenChangeListener(token => {\n    repo.server_.refreshAuthToken(token);\n  });\n\n  repo.appCheckProvider_.addTokenChangeListener(result => {\n    repo.server_.refreshAppCheckToken(result.token);\n  });\n\n  // In the case of multiple Repos for the same repoInfo (i.e. there are multiple Firebase.Contexts being used),\n  // we only want to create one StatsReporter.  As such, we'll report stats over the first Repo created.\n  repo.statsReporter_ = statsManagerGetOrCreateReporter(\n    repo.repoInfo_,\n    () => new StatsReporter(repo.stats_, repo.server_)\n  );\n\n  // Used for .info.\n  repo.infoData_ = new SnapshotHolder();\n  repo.infoSyncTree_ = new SyncTree({\n    startListening: (query, tag, currentHashFn, onComplete) => {\n      let infoEvents: Event[] = [];\n      const node = repo.infoData_.getNode(query._path);\n      // This is possibly a hack, but we have different semantics for .info endpoints. We don't raise null events\n      // on initial data...\n      if (!node.isEmpty()) {\n        infoEvents = syncTreeApplyServerOverwrite(\n          repo.infoSyncTree_,\n          query._path,\n          node\n        );\n        setTimeout(() => {\n          onComplete('ok');\n        }, 0);\n      }\n      return infoEvents;\n    },\n    stopListening: () => {}\n  });\n  repoUpdateInfo(repo, 'connected', false);\n\n  repo.serverSyncTree_ = new SyncTree({\n    startListening: (query, tag, currentHashFn, onComplete) => {\n      repo.server_.listen(query, currentHashFn, tag, (status, data) => {\n        const events = onComplete(status, data);\n        eventQueueRaiseEventsForChangedPath(\n          repo.eventQueue_,\n          query._path,\n          events\n        );\n      });\n      // No synchronous events for network-backed sync trees\n      return [];\n    },\n    stopListening: (query, tag) => {\n      repo.server_.unlisten(query, tag);\n    }\n  });\n}\n\n/**\n * @returns The time in milliseconds, taking the server offset into account if we have one.\n */\nexport function repoServerTime(repo: Repo): number {\n  const offsetNode = repo.infoData_.getNode(new Path('.info/serverTimeOffset'));\n  const offset = (offsetNode.val() as number) || 0;\n  return new Date().getTime() + offset;\n}\n\n/**\n * Generate ServerValues using some variables from the repo object.\n */\nexport function repoGenerateServerValues(repo: Repo): Indexable {\n  return generateWithValues({\n    timestamp: repoServerTime(repo)\n  });\n}\n\n/**\n * Called by realtime when we get new messages from the server.\n */\nfunction repoOnDataUpdate(\n  repo: Repo,\n  pathString: string,\n  data: unknown,\n  isMerge: boolean,\n  tag: number | null\n): void {\n  // For testing.\n  repo.dataUpdateCount++;\n  const path = new Path(pathString);\n  data = repo.interceptServerDataCallback_\n    ? repo.interceptServerDataCallback_(pathString, data)\n    : data;\n  let events = [];\n  if (tag) {\n    if (isMerge) {\n      const taggedChildren = map(\n        data as { [k: string]: unknown },\n        (raw: unknown) => nodeFromJSON(raw)\n      );\n      events = syncTreeApplyTaggedQueryMerge(\n        repo.serverSyncTree_,\n        path,\n        taggedChildren,\n        tag\n      );\n    } else {\n      const taggedSnap = nodeFromJSON(data);\n      events = syncTreeApplyTaggedQueryOverwrite(\n        repo.serverSyncTree_,\n        path,\n        taggedSnap,\n        tag\n      );\n    }\n  } else if (isMerge) {\n    const changedChildren = map(\n      data as { [k: string]: unknown },\n      (raw: unknown) => nodeFromJSON(raw)\n    );\n    events = syncTreeApplyServerMerge(\n      repo.serverSyncTree_,\n      path,\n      changedChildren\n    );\n  } else {\n    const snap = nodeFromJSON(data);\n    events = syncTreeApplyServerOverwrite(repo.serverSyncTree_, path, snap);\n  }\n  let affectedPath = path;\n  if (events.length > 0) {\n    // Since we have a listener outstanding for each transaction, receiving any events\n    // is a proxy for some change having occurred.\n    affectedPath = repoRerunTransactions(repo, path);\n  }\n  eventQueueRaiseEventsForChangedPath(repo.eventQueue_, affectedPath, events);\n}\n\n// TODO: This should be @private but it's used by test_access.js and internal.js\nexport function repoInterceptServerData(\n  repo: Repo,\n  callback: ((a: string, b: unknown) => unknown) | null\n): void {\n  repo.interceptServerDataCallback_ = callback;\n}\n\nfunction repoOnConnectStatus(repo: Repo, connectStatus: boolean): void {\n  repoUpdateInfo(repo, 'connected', connectStatus);\n  if (connectStatus === false) {\n    repoRunOnDisconnectEvents(repo);\n  }\n}\n\nfunction repoOnServerInfoUpdate(repo: Repo, updates: object): void {\n  each(updates, (key: string, value: unknown) => {\n    repoUpdateInfo(repo, key, value);\n  });\n}\n\nfunction repoUpdateInfo(repo: Repo, pathString: string, value: unknown): void {\n  const path = new Path('/.info/' + pathString);\n  const newNode = nodeFromJSON(value);\n  repo.infoData_.updateSnapshot(path, newNode);\n  const events = syncTreeApplyServerOverwrite(\n    repo.infoSyncTree_,\n    path,\n    newNode\n  );\n  eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\n}\n\nfunction repoGetNextWriteId(repo: Repo): number {\n  return repo.nextWriteId_++;\n}\n\n/**\n * The purpose of `getValue` is to return the latest known value\n * satisfying `query`.\n *\n * This method will first check for in-memory cached values\n * belonging to active listeners. If they are found, such values\n * are considered to be the most up-to-date.\n *\n * If the client is not connected, this method will try to\n * establish a connection and request the value for `query`. If\n * the client is not able to retrieve the query result, it reports\n * an error.\n *\n * @param query - The query to surface a value for.\n */\nexport function repoGetValue(repo: Repo, query: QueryContext): Promise<Node> {\n  // Only active queries are cached. There is no persisted cache.\n  const cached = syncTreeGetServerValue(repo.serverSyncTree_, query);\n  if (cached != null) {\n    return Promise.resolve(cached);\n  }\n  return repo.server_.get(query).then(\n    payload => {\n      const node = nodeFromJSON(payload as string).withIndex(\n        query._queryParams.getIndex()\n      );\n      const events = syncTreeApplyServerOverwrite(\n        repo.serverSyncTree_,\n        query._path,\n        node\n      );\n      eventQueueRaiseEventsAtPath(repo.eventQueue_, query._path, events);\n      return Promise.resolve(node);\n    },\n    err => {\n      repoLog(repo, 'get for query ' + stringify(query) + ' failed: ' + err);\n      return Promise.reject(new Error(err as string));\n    }\n  );\n}\n\nexport function repoSetWithPriority(\n  repo: Repo,\n  path: Path,\n  newVal: unknown,\n  newPriority: number | string | null,\n  onComplete: ((status: Error | null, errorReason?: string) => void) | null\n): void {\n  repoLog(repo, 'set', {\n    path: path.toString(),\n    value: newVal,\n    priority: newPriority\n  });\n\n  // TODO: Optimize this behavior to either (a) store flag to skip resolving where possible and / or\n  // (b) store unresolved paths on JSON parse\n  const serverValues = repoGenerateServerValues(repo);\n  const newNodeUnresolved = nodeFromJSON(newVal, newPriority);\n  const existing = syncTreeCalcCompleteEventCache(repo.serverSyncTree_, path);\n  const newNode = resolveDeferredValueSnapshot(\n    newNodeUnresolved,\n    existing,\n    serverValues\n  );\n\n  const writeId = repoGetNextWriteId(repo);\n  const events = syncTreeApplyUserOverwrite(\n    repo.serverSyncTree_,\n    path,\n    newNode,\n    writeId,\n    true\n  );\n  eventQueueQueueEvents(repo.eventQueue_, events);\n  repo.server_.put(\n    path.toString(),\n    newNodeUnresolved.val(/*export=*/ true),\n    (status, errorReason) => {\n      const success = status === 'ok';\n      if (!success) {\n        warn('set at ' + path + ' failed: ' + status);\n      }\n\n      const clearEvents = syncTreeAckUserWrite(\n        repo.serverSyncTree_,\n        writeId,\n        !success\n      );\n      eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, clearEvents);\n      repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n    }\n  );\n  const affectedPath = repoAbortTransactions(repo, path);\n  repoRerunTransactions(repo, affectedPath);\n  // We queued the events above, so just flush the queue here\n  eventQueueRaiseEventsForChangedPath(repo.eventQueue_, affectedPath, []);\n}\n\nexport function repoUpdate(\n  repo: Repo,\n  path: Path,\n  childrenToMerge: { [k: string]: unknown },\n  onComplete: ((status: Error | null, errorReason?: string) => void) | null\n): void {\n  repoLog(repo, 'update', { path: path.toString(), value: childrenToMerge });\n\n  // Start with our existing data and merge each child into it.\n  let empty = true;\n  const serverValues = repoGenerateServerValues(repo);\n  const changedChildren: { [k: string]: Node } = {};\n  each(childrenToMerge, (changedKey: string, changedValue: unknown) => {\n    empty = false;\n    changedChildren[changedKey] = resolveDeferredValueTree(\n      pathChild(path, changedKey),\n      nodeFromJSON(changedValue),\n      repo.serverSyncTree_,\n      serverValues\n    );\n  });\n\n  if (!empty) {\n    const writeId = repoGetNextWriteId(repo);\n    const events = syncTreeApplyUserMerge(\n      repo.serverSyncTree_,\n      path,\n      changedChildren,\n      writeId\n    );\n    eventQueueQueueEvents(repo.eventQueue_, events);\n    repo.server_.merge(\n      path.toString(),\n      childrenToMerge,\n      (status, errorReason) => {\n        const success = status === 'ok';\n        if (!success) {\n          warn('update at ' + path + ' failed: ' + status);\n        }\n\n        const clearEvents = syncTreeAckUserWrite(\n          repo.serverSyncTree_,\n          writeId,\n          !success\n        );\n        const affectedPath =\n          clearEvents.length > 0 ? repoRerunTransactions(repo, path) : path;\n        eventQueueRaiseEventsForChangedPath(\n          repo.eventQueue_,\n          affectedPath,\n          clearEvents\n        );\n        repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n      }\n    );\n\n    each(childrenToMerge, (changedPath: string) => {\n      const affectedPath = repoAbortTransactions(\n        repo,\n        pathChild(path, changedPath)\n      );\n      repoRerunTransactions(repo, affectedPath);\n    });\n\n    // We queued the events above, so just flush the queue here\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, []);\n  } else {\n    log(\"update() called with empty data.  Don't do anything.\");\n    repoCallOnCompleteCallback(repo, onComplete, 'ok', undefined);\n  }\n}\n\n/**\n * Applies all of the changes stored up in the onDisconnect_ tree.\n */\nfunction repoRunOnDisconnectEvents(repo: Repo): void {\n  repoLog(repo, 'onDisconnectEvents');\n\n  const serverValues = repoGenerateServerValues(repo);\n  const resolvedOnDisconnectTree = newSparseSnapshotTree();\n  sparseSnapshotTreeForEachTree(\n    repo.onDisconnect_,\n    newEmptyPath(),\n    (path, node) => {\n      const resolved = resolveDeferredValueTree(\n        path,\n        node,\n        repo.serverSyncTree_,\n        serverValues\n      );\n      sparseSnapshotTreeRemember(resolvedOnDisconnectTree, path, resolved);\n    }\n  );\n  let events: Event[] = [];\n\n  sparseSnapshotTreeForEachTree(\n    resolvedOnDisconnectTree,\n    newEmptyPath(),\n    (path, snap) => {\n      events = events.concat(\n        syncTreeApplyServerOverwrite(repo.serverSyncTree_, path, snap)\n      );\n      const affectedPath = repoAbortTransactions(repo, path);\n      repoRerunTransactions(repo, affectedPath);\n    }\n  );\n\n  repo.onDisconnect_ = newSparseSnapshotTree();\n  eventQueueRaiseEventsForChangedPath(repo.eventQueue_, newEmptyPath(), events);\n}\n\nexport function repoOnDisconnectCancel(\n  repo: Repo,\n  path: Path,\n  onComplete: ((status: Error | null, errorReason?: string) => void) | null\n): void {\n  repo.server_.onDisconnectCancel(path.toString(), (status, errorReason) => {\n    if (status === 'ok') {\n      sparseSnapshotTreeForget(repo.onDisconnect_, path);\n    }\n    repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n  });\n}\n\nexport function repoOnDisconnectSet(\n  repo: Repo,\n  path: Path,\n  value: unknown,\n  onComplete: ((status: Error | null, errorReason?: string) => void) | null\n): void {\n  const newNode = nodeFromJSON(value);\n  repo.server_.onDisconnectPut(\n    path.toString(),\n    newNode.val(/*export=*/ true),\n    (status, errorReason) => {\n      if (status === 'ok') {\n        sparseSnapshotTreeRemember(repo.onDisconnect_, path, newNode);\n      }\n      repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n    }\n  );\n}\n\nexport function repoOnDisconnectSetWithPriority(\n  repo: Repo,\n  path: Path,\n  value: unknown,\n  priority: unknown,\n  onComplete: ((status: Error | null, errorReason?: string) => void) | null\n): void {\n  const newNode = nodeFromJSON(value, priority);\n  repo.server_.onDisconnectPut(\n    path.toString(),\n    newNode.val(/*export=*/ true),\n    (status, errorReason) => {\n      if (status === 'ok') {\n        sparseSnapshotTreeRemember(repo.onDisconnect_, path, newNode);\n      }\n      repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n    }\n  );\n}\n\nexport function repoOnDisconnectUpdate(\n  repo: Repo,\n  path: Path,\n  childrenToMerge: { [k: string]: unknown },\n  onComplete: ((status: Error | null, errorReason?: string) => void) | null\n): void {\n  if (isEmpty(childrenToMerge)) {\n    log(\"onDisconnect().update() called with empty data.  Don't do anything.\");\n    repoCallOnCompleteCallback(repo, onComplete, 'ok', undefined);\n    return;\n  }\n\n  repo.server_.onDisconnectMerge(\n    path.toString(),\n    childrenToMerge,\n    (status, errorReason) => {\n      if (status === 'ok') {\n        each(childrenToMerge, (childName: string, childNode: unknown) => {\n          const newChildNode = nodeFromJSON(childNode);\n          sparseSnapshotTreeRemember(\n            repo.onDisconnect_,\n            pathChild(path, childName),\n            newChildNode\n          );\n        });\n      }\n      repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n    }\n  );\n}\n\nexport function repoAddEventCallbackForQuery(\n  repo: Repo,\n  query: QueryContext,\n  eventRegistration: EventRegistration\n): void {\n  let events;\n  if (pathGetFront(query._path) === '.info') {\n    events = syncTreeAddEventRegistration(\n      repo.infoSyncTree_,\n      query,\n      eventRegistration\n    );\n  } else {\n    events = syncTreeAddEventRegistration(\n      repo.serverSyncTree_,\n      query,\n      eventRegistration\n    );\n  }\n  eventQueueRaiseEventsAtPath(repo.eventQueue_, query._path, events);\n}\n\nexport function repoRemoveEventCallbackForQuery(\n  repo: Repo,\n  query: QueryContext,\n  eventRegistration: EventRegistration\n): void {\n  // These are guaranteed not to raise events, since we're not passing in a cancelError. However, we can future-proof\n  // a little bit by handling the return values anyways.\n  let events;\n  if (pathGetFront(query._path) === '.info') {\n    events = syncTreeRemoveEventRegistration(\n      repo.infoSyncTree_,\n      query,\n      eventRegistration\n    );\n  } else {\n    events = syncTreeRemoveEventRegistration(\n      repo.serverSyncTree_,\n      query,\n      eventRegistration\n    );\n  }\n  eventQueueRaiseEventsAtPath(repo.eventQueue_, query._path, events);\n}\n\nexport function repoInterrupt(repo: Repo): void {\n  if (repo.persistentConnection_) {\n    repo.persistentConnection_.interrupt(INTERRUPT_REASON);\n  }\n}\n\nexport function repoResume(repo: Repo): void {\n  if (repo.persistentConnection_) {\n    repo.persistentConnection_.resume(INTERRUPT_REASON);\n  }\n}\n\nexport function repoStats(repo: Repo, showDelta: boolean = false): void {\n  if (typeof console === 'undefined') {\n    return;\n  }\n\n  let stats: { [k: string]: unknown };\n  if (showDelta) {\n    if (!repo.statsListener_) {\n      repo.statsListener_ = new StatsListener(repo.stats_);\n    }\n    stats = repo.statsListener_.get();\n  } else {\n    stats = repo.stats_.get();\n  }\n\n  const longestName = Object.keys(stats).reduce(\n    (previousValue, currentValue) =>\n      Math.max(currentValue.length, previousValue),\n    0\n  );\n\n  each(stats, (stat: string, value: unknown) => {\n    let paddedStat = stat;\n    // pad stat names to be the same length (plus 2 extra spaces).\n    for (let i = stat.length; i < longestName + 2; i++) {\n      paddedStat += ' ';\n    }\n    console.log(paddedStat + value);\n  });\n}\n\nexport function repoStatsIncrementCounter(repo: Repo, metric: string): void {\n  repo.stats_.incrementCounter(metric);\n  statsReporterIncludeStat(repo.statsReporter_, metric);\n}\n\nfunction repoLog(repo: Repo, ...varArgs: unknown[]): void {\n  let prefix = '';\n  if (repo.persistentConnection_) {\n    prefix = repo.persistentConnection_.id + ':';\n  }\n  log(prefix, ...varArgs);\n}\n\nexport function repoCallOnCompleteCallback(\n  repo: Repo,\n  callback: ((status: Error | null, errorReason?: string) => void) | null,\n  status: string,\n  errorReason?: string | null\n): void {\n  if (callback) {\n    exceptionGuard(() => {\n      if (status === 'ok') {\n        callback(null);\n      } else {\n        const code = (status || 'error').toUpperCase();\n        let message = code;\n        if (errorReason) {\n          message += ': ' + errorReason;\n        }\n\n        const error = new Error(message);\n\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        (error as any).code = code;\n        callback(error);\n      }\n    });\n  }\n}\n\n/**\n * Creates a new transaction, adds it to the transactions we're tracking, and\n * sends it to the server if possible.\n *\n * @param path - Path at which to do transaction.\n * @param transactionUpdate - Update callback.\n * @param onComplete - Completion callback.\n * @param unwatcher - Function that will be called when the transaction no longer\n * need data updates for `path`.\n * @param applyLocally - Whether or not to make intermediate results visible\n */\nexport function repoStartTransaction(\n  repo: Repo,\n  path: Path,\n  transactionUpdate: (a: unknown) => unknown,\n  onComplete: ((error: Error, committed: boolean, node: Node) => void) | null,\n  unwatcher: () => void,\n  applyLocally: boolean\n): void {\n  repoLog(repo, 'transaction on ' + path);\n\n  // Initialize transaction.\n  const transaction: Transaction = {\n    path,\n    update: transactionUpdate,\n    onComplete,\n    // One of TransactionStatus enums.\n    status: null,\n    // Used when combining transactions at different locations to figure out\n    // which one goes first.\n    order: LUIDGenerator(),\n    // Whether to raise local events for this transaction.\n    applyLocally,\n    // Count of how many times we've retried the transaction.\n    retryCount: 0,\n    // Function to call to clean up our .on() listener.\n    unwatcher,\n    // Stores why a transaction was aborted.\n    abortReason: null,\n    currentWriteId: null,\n    currentInputSnapshot: null,\n    currentOutputSnapshotRaw: null,\n    currentOutputSnapshotResolved: null\n  };\n\n  // Run transaction initially.\n  const currentState = repoGetLatestState(repo, path, undefined);\n  transaction.currentInputSnapshot = currentState;\n  const newVal = transaction.update(currentState.val());\n  if (newVal === undefined) {\n    // Abort transaction.\n    transaction.unwatcher();\n    transaction.currentOutputSnapshotRaw = null;\n    transaction.currentOutputSnapshotResolved = null;\n    if (transaction.onComplete) {\n      transaction.onComplete(null, false, transaction.currentInputSnapshot);\n    }\n  } else {\n    validateFirebaseData(\n      'transaction failed: Data returned ',\n      newVal,\n      transaction.path\n    );\n\n    // Mark as run and add to our queue.\n    transaction.status = TransactionStatus.RUN;\n    const queueNode = treeSubTree(repo.transactionQueueTree_, path);\n    const nodeQueue = treeGetValue(queueNode) || [];\n    nodeQueue.push(transaction);\n\n    treeSetValue(queueNode, nodeQueue);\n\n    // Update visibleData and raise events\n    // Note: We intentionally raise events after updating all of our\n    // transaction state, since the user could start new transactions from the\n    // event callbacks.\n    let priorityForNode;\n    if (\n      typeof newVal === 'object' &&\n      newVal !== null &&\n      contains(newVal, '.priority')\n    ) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      priorityForNode = safeGet(newVal as any, '.priority');\n      assert(\n        isValidPriority(priorityForNode),\n        'Invalid priority returned by transaction. ' +\n          'Priority must be a valid string, finite number, server value, or null.'\n      );\n    } else {\n      const currentNode =\n        syncTreeCalcCompleteEventCache(repo.serverSyncTree_, path) ||\n        ChildrenNode.EMPTY_NODE;\n      priorityForNode = currentNode.getPriority().val();\n    }\n\n    const serverValues = repoGenerateServerValues(repo);\n    const newNodeUnresolved = nodeFromJSON(newVal, priorityForNode);\n    const newNode = resolveDeferredValueSnapshot(\n      newNodeUnresolved,\n      currentState,\n      serverValues\n    );\n    transaction.currentOutputSnapshotRaw = newNodeUnresolved;\n    transaction.currentOutputSnapshotResolved = newNode;\n    transaction.currentWriteId = repoGetNextWriteId(repo);\n\n    const events = syncTreeApplyUserOverwrite(\n      repo.serverSyncTree_,\n      path,\n      newNode,\n      transaction.currentWriteId,\n      transaction.applyLocally\n    );\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\n\n    repoSendReadyTransactions(repo, repo.transactionQueueTree_);\n  }\n}\n\n/**\n * @param excludeSets - A specific set to exclude\n */\nfunction repoGetLatestState(\n  repo: Repo,\n  path: Path,\n  excludeSets?: number[]\n): Node {\n  return (\n    syncTreeCalcCompleteEventCache(repo.serverSyncTree_, path, excludeSets) ||\n    ChildrenNode.EMPTY_NODE\n  );\n}\n\n/**\n * Sends any already-run transactions that aren't waiting for outstanding\n * transactions to complete.\n *\n * Externally it's called with no arguments, but it calls itself recursively\n * with a particular transactionQueueTree node to recurse through the tree.\n *\n * @param node - transactionQueueTree node to start at.\n */\nfunction repoSendReadyTransactions(\n  repo: Repo,\n  node: Tree<Transaction[]> = repo.transactionQueueTree_\n): void {\n  // Before recursing, make sure any completed transactions are removed.\n  if (!node) {\n    repoPruneCompletedTransactionsBelowNode(repo, node);\n  }\n\n  if (treeGetValue(node)) {\n    const queue = repoBuildTransactionQueue(repo, node);\n    assert(queue.length > 0, 'Sending zero length transaction queue');\n\n    const allRun = queue.every(\n      (transaction: Transaction) => transaction.status === TransactionStatus.RUN\n    );\n\n    // If they're all run (and not sent), we can send them.  Else, we must wait.\n    if (allRun) {\n      repoSendTransactionQueue(repo, treeGetPath(node), queue);\n    }\n  } else if (treeHasChildren(node)) {\n    treeForEachChild(node, childNode => {\n      repoSendReadyTransactions(repo, childNode);\n    });\n  }\n}\n\n/**\n * Given a list of run transactions, send them to the server and then handle\n * the result (success or failure).\n *\n * @param path - The location of the queue.\n * @param queue - Queue of transactions under the specified location.\n */\nfunction repoSendTransactionQueue(\n  repo: Repo,\n  path: Path,\n  queue: Transaction[]\n): void {\n  // Mark transactions as sent and increment retry count!\n  const setsToIgnore = queue.map(txn => {\n    return txn.currentWriteId;\n  });\n  const latestState = repoGetLatestState(repo, path, setsToIgnore);\n  let snapToSend = latestState;\n  const latestHash = latestState.hash();\n  for (let i = 0; i < queue.length; i++) {\n    const txn = queue[i];\n    assert(\n      txn.status === TransactionStatus.RUN,\n      'tryToSendTransactionQueue_: items in queue should all be run.'\n    );\n    txn.status = TransactionStatus.SENT;\n    txn.retryCount++;\n    const relativePath = newRelativePath(path, txn.path);\n    // If we've gotten to this point, the output snapshot must be defined.\n    snapToSend = snapToSend.updateChild(\n      relativePath /** @type {!Node} */,\n      txn.currentOutputSnapshotRaw\n    );\n  }\n\n  const dataToSend = snapToSend.val(true);\n  const pathToSend = path;\n\n  // Send the put.\n  repo.server_.put(\n    pathToSend.toString(),\n    dataToSend,\n    (status: string) => {\n      repoLog(repo, 'transaction put response', {\n        path: pathToSend.toString(),\n        status\n      });\n\n      let events: Event[] = [];\n      if (status === 'ok') {\n        // Queue up the callbacks and fire them after cleaning up all of our\n        // transaction state, since the callback could trigger more\n        // transactions or sets.\n        const callbacks = [];\n        for (let i = 0; i < queue.length; i++) {\n          queue[i].status = TransactionStatus.COMPLETED;\n          events = events.concat(\n            syncTreeAckUserWrite(repo.serverSyncTree_, queue[i].currentWriteId)\n          );\n          if (queue[i].onComplete) {\n            // We never unset the output snapshot, and given that this\n            // transaction is complete, it should be set\n            callbacks.push(() =>\n              queue[i].onComplete(\n                null,\n                true,\n                queue[i].currentOutputSnapshotResolved\n              )\n            );\n          }\n          queue[i].unwatcher();\n        }\n\n        // Now remove the completed transactions.\n        repoPruneCompletedTransactionsBelowNode(\n          repo,\n          treeSubTree(repo.transactionQueueTree_, path)\n        );\n        // There may be pending transactions that we can now send.\n        repoSendReadyTransactions(repo, repo.transactionQueueTree_);\n\n        eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\n\n        // Finally, trigger onComplete callbacks.\n        for (let i = 0; i < callbacks.length; i++) {\n          exceptionGuard(callbacks[i]);\n        }\n      } else {\n        // transactions are no longer sent.  Update their status appropriately.\n        if (status === 'datastale') {\n          for (let i = 0; i < queue.length; i++) {\n            if (queue[i].status === TransactionStatus.SENT_NEEDS_ABORT) {\n              queue[i].status = TransactionStatus.NEEDS_ABORT;\n            } else {\n              queue[i].status = TransactionStatus.RUN;\n            }\n          }\n        } else {\n          warn(\n            'transaction at ' + pathToSend.toString() + ' failed: ' + status\n          );\n          for (let i = 0; i < queue.length; i++) {\n            queue[i].status = TransactionStatus.NEEDS_ABORT;\n            queue[i].abortReason = status;\n          }\n        }\n\n        repoRerunTransactions(repo, path);\n      }\n    },\n    latestHash\n  );\n}\n\n/**\n * Finds all transactions dependent on the data at changedPath and reruns them.\n *\n * Should be called any time cached data changes.\n *\n * Return the highest path that was affected by rerunning transactions. This\n * is the path at which events need to be raised for.\n *\n * @param changedPath - The path in mergedData that changed.\n * @returns The rootmost path that was affected by rerunning transactions.\n */\nfunction repoRerunTransactions(repo: Repo, changedPath: Path): Path {\n  const rootMostTransactionNode = repoGetAncestorTransactionNode(\n    repo,\n    changedPath\n  );\n  const path = treeGetPath(rootMostTransactionNode);\n\n  const queue = repoBuildTransactionQueue(repo, rootMostTransactionNode);\n  repoRerunTransactionQueue(repo, queue, path);\n\n  return path;\n}\n\n/**\n * Does all the work of rerunning transactions (as well as cleans up aborted\n * transactions and whatnot).\n *\n * @param queue - The queue of transactions to run.\n * @param path - The path the queue is for.\n */\nfunction repoRerunTransactionQueue(\n  repo: Repo,\n  queue: Transaction[],\n  path: Path\n): void {\n  if (queue.length === 0) {\n    return; // Nothing to do!\n  }\n\n  // Queue up the callbacks and fire them after cleaning up all of our\n  // transaction state, since the callback could trigger more transactions or\n  // sets.\n  const callbacks = [];\n  let events: Event[] = [];\n  // Ignore all of the sets we're going to re-run.\n  const txnsToRerun = queue.filter(q => {\n    return q.status === TransactionStatus.RUN;\n  });\n  const setsToIgnore = txnsToRerun.map(q => {\n    return q.currentWriteId;\n  });\n  for (let i = 0; i < queue.length; i++) {\n    const transaction = queue[i];\n    const relativePath = newRelativePath(path, transaction.path);\n    let abortTransaction = false,\n      abortReason;\n    assert(\n      relativePath !== null,\n      'rerunTransactionsUnderNode_: relativePath should not be null.'\n    );\n\n    if (transaction.status === TransactionStatus.NEEDS_ABORT) {\n      abortTransaction = true;\n      abortReason = transaction.abortReason;\n      events = events.concat(\n        syncTreeAckUserWrite(\n          repo.serverSyncTree_,\n          transaction.currentWriteId,\n          true\n        )\n      );\n    } else if (transaction.status === TransactionStatus.RUN) {\n      if (transaction.retryCount >= MAX_TRANSACTION_RETRIES) {\n        abortTransaction = true;\n        abortReason = 'maxretry';\n        events = events.concat(\n          syncTreeAckUserWrite(\n            repo.serverSyncTree_,\n            transaction.currentWriteId,\n            true\n          )\n        );\n      } else {\n        // This code reruns a transaction\n        const currentNode = repoGetLatestState(\n          repo,\n          transaction.path,\n          setsToIgnore\n        );\n        transaction.currentInputSnapshot = currentNode;\n        const newData = queue[i].update(currentNode.val());\n        if (newData !== undefined) {\n          validateFirebaseData(\n            'transaction failed: Data returned ',\n            newData,\n            transaction.path\n          );\n          let newDataNode = nodeFromJSON(newData);\n          const hasExplicitPriority =\n            typeof newData === 'object' &&\n            newData != null &&\n            contains(newData, '.priority');\n          if (!hasExplicitPriority) {\n            // Keep the old priority if there wasn't a priority explicitly specified.\n            newDataNode = newDataNode.updatePriority(currentNode.getPriority());\n          }\n\n          const oldWriteId = transaction.currentWriteId;\n          const serverValues = repoGenerateServerValues(repo);\n          const newNodeResolved = resolveDeferredValueSnapshot(\n            newDataNode,\n            currentNode,\n            serverValues\n          );\n\n          transaction.currentOutputSnapshotRaw = newDataNode;\n          transaction.currentOutputSnapshotResolved = newNodeResolved;\n          transaction.currentWriteId = repoGetNextWriteId(repo);\n          // Mutates setsToIgnore in place\n          setsToIgnore.splice(setsToIgnore.indexOf(oldWriteId), 1);\n          events = events.concat(\n            syncTreeApplyUserOverwrite(\n              repo.serverSyncTree_,\n              transaction.path,\n              newNodeResolved,\n              transaction.currentWriteId,\n              transaction.applyLocally\n            )\n          );\n          events = events.concat(\n            syncTreeAckUserWrite(repo.serverSyncTree_, oldWriteId, true)\n          );\n        } else {\n          abortTransaction = true;\n          abortReason = 'nodata';\n          events = events.concat(\n            syncTreeAckUserWrite(\n              repo.serverSyncTree_,\n              transaction.currentWriteId,\n              true\n            )\n          );\n        }\n      }\n    }\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\n    events = [];\n    if (abortTransaction) {\n      // Abort.\n      queue[i].status = TransactionStatus.COMPLETED;\n\n      // Removing a listener can trigger pruning which can muck with\n      // mergedData/visibleData (as it prunes data). So defer the unwatcher\n      // until we're done.\n      (function (unwatcher) {\n        setTimeout(unwatcher, Math.floor(0));\n      })(queue[i].unwatcher);\n\n      if (queue[i].onComplete) {\n        if (abortReason === 'nodata') {\n          callbacks.push(() =>\n            queue[i].onComplete(null, false, queue[i].currentInputSnapshot)\n          );\n        } else {\n          callbacks.push(() =>\n            queue[i].onComplete(new Error(abortReason), false, null)\n          );\n        }\n      }\n    }\n  }\n\n  // Clean up completed transactions.\n  repoPruneCompletedTransactionsBelowNode(repo, repo.transactionQueueTree_);\n\n  // Now fire callbacks, now that we're in a good, known state.\n  for (let i = 0; i < callbacks.length; i++) {\n    exceptionGuard(callbacks[i]);\n  }\n\n  // Try to send the transaction result to the server.\n  repoSendReadyTransactions(repo, repo.transactionQueueTree_);\n}\n\n/**\n * Returns the rootmost ancestor node of the specified path that has a pending\n * transaction on it, or just returns the node for the given path if there are\n * no pending transactions on any ancestor.\n *\n * @param path - The location to start at.\n * @returns The rootmost node with a transaction.\n */\nfunction repoGetAncestorTransactionNode(\n  repo: Repo,\n  path: Path\n): Tree<Transaction[]> {\n  let front;\n\n  // Start at the root and walk deeper into the tree towards path until we\n  // find a node with pending transactions.\n  let transactionNode = repo.transactionQueueTree_;\n  front = pathGetFront(path);\n  while (front !== null && treeGetValue(transactionNode) === undefined) {\n    transactionNode = treeSubTree(transactionNode, front);\n    path = pathPopFront(path);\n    front = pathGetFront(path);\n  }\n\n  return transactionNode;\n}\n\n/**\n * Builds the queue of all transactions at or below the specified\n * transactionNode.\n *\n * @param transactionNode\n * @returns The generated queue.\n */\nfunction repoBuildTransactionQueue(\n  repo: Repo,\n  transactionNode: Tree<Transaction[]>\n): Transaction[] {\n  // Walk any child transaction queues and aggregate them into a single queue.\n  const transactionQueue: Transaction[] = [];\n  repoAggregateTransactionQueuesForNode(\n    repo,\n    transactionNode,\n    transactionQueue\n  );\n\n  // Sort them by the order the transactions were created.\n  transactionQueue.sort((a, b) => a.order - b.order);\n\n  return transactionQueue;\n}\n\nfunction repoAggregateTransactionQueuesForNode(\n  repo: Repo,\n  node: Tree<Transaction[]>,\n  queue: Transaction[]\n): void {\n  const nodeQueue = treeGetValue(node);\n  if (nodeQueue) {\n    for (let i = 0; i < nodeQueue.length; i++) {\n      queue.push(nodeQueue[i]);\n    }\n  }\n\n  treeForEachChild(node, child => {\n    repoAggregateTransactionQueuesForNode(repo, child, queue);\n  });\n}\n\n/**\n * Remove COMPLETED transactions at or below this node in the transactionQueueTree_.\n */\nfunction repoPruneCompletedTransactionsBelowNode(\n  repo: Repo,\n  node: Tree<Transaction[]>\n): void {\n  const queue = treeGetValue(node);\n  if (queue) {\n    let to = 0;\n    for (let from = 0; from < queue.length; from++) {\n      if (queue[from].status !== TransactionStatus.COMPLETED) {\n        queue[to] = queue[from];\n        to++;\n      }\n    }\n    queue.length = to;\n    treeSetValue(node, queue.length > 0 ? queue : undefined);\n  }\n\n  treeForEachChild(node, childNode => {\n    repoPruneCompletedTransactionsBelowNode(repo, childNode);\n  });\n}\n\n/**\n * Aborts all transactions on ancestors or descendants of the specified path.\n * Called when doing a set() or update() since we consider them incompatible\n * with transactions.\n *\n * @param path - Path for which we want to abort related transactions.\n */\nfunction repoAbortTransactions(repo: Repo, path: Path): Path {\n  const affectedPath = treeGetPath(repoGetAncestorTransactionNode(repo, path));\n\n  const transactionNode = treeSubTree(repo.transactionQueueTree_, path);\n\n  treeForEachAncestor(transactionNode, (node: Tree<Transaction[]>) => {\n    repoAbortTransactionsOnNode(repo, node);\n  });\n\n  repoAbortTransactionsOnNode(repo, transactionNode);\n\n  treeForEachDescendant(transactionNode, (node: Tree<Transaction[]>) => {\n    repoAbortTransactionsOnNode(repo, node);\n  });\n\n  return affectedPath;\n}\n\n/**\n * Abort transactions stored in this transaction queue node.\n *\n * @param node - Node to abort transactions for.\n */\nfunction repoAbortTransactionsOnNode(\n  repo: Repo,\n  node: Tree<Transaction[]>\n): void {\n  const queue = treeGetValue(node);\n  if (queue) {\n    // Queue up the callbacks and fire them after cleaning up all of our\n    // transaction state, since the callback could trigger more transactions\n    // or sets.\n    const callbacks = [];\n\n    // Go through queue.  Any already-sent transactions must be marked for\n    // abort, while the unsent ones can be immediately aborted and removed.\n    let events: Event[] = [];\n    let lastSent = -1;\n    for (let i = 0; i < queue.length; i++) {\n      if (queue[i].status === TransactionStatus.SENT_NEEDS_ABORT) {\n        // Already marked.  No action needed.\n      } else if (queue[i].status === TransactionStatus.SENT) {\n        assert(\n          lastSent === i - 1,\n          'All SENT items should be at beginning of queue.'\n        );\n        lastSent = i;\n        // Mark transaction for abort when it comes back.\n        queue[i].status = TransactionStatus.SENT_NEEDS_ABORT;\n        queue[i].abortReason = 'set';\n      } else {\n        assert(\n          queue[i].status === TransactionStatus.RUN,\n          'Unexpected transaction status in abort'\n        );\n        // We can abort it immediately.\n        queue[i].unwatcher();\n        events = events.concat(\n          syncTreeAckUserWrite(\n            repo.serverSyncTree_,\n            queue[i].currentWriteId,\n            true\n          )\n        );\n        if (queue[i].onComplete) {\n          callbacks.push(\n            queue[i].onComplete.bind(null, new Error('set'), false, null)\n          );\n        }\n      }\n    }\n    if (lastSent === -1) {\n      // We're not waiting for any sent transactions.  We can clear the queue.\n      treeSetValue(node, undefined);\n    } else {\n      // Remove the transactions we aborted.\n      queue.length = lastSent + 1;\n    }\n\n    // Now fire the callbacks.\n    eventQueueRaiseEventsForChangedPath(\n      repo.eventQueue_,\n      treeGetPath(node),\n      events\n    );\n    for (let i = 0; i < callbacks.length; i++) {\n      exceptionGuard(callbacks[i]);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RepoInfo } from '../../RepoInfo';\nimport { Path } from '../Path';\nimport { warnIfPageIsSecure, warn, fatal } from '../util';\n\nfunction decodePath(pathString: string): string {\n  let pathStringDecoded = '';\n  const pieces = pathString.split('/');\n  for (let i = 0; i < pieces.length; i++) {\n    if (pieces[i].length > 0) {\n      let piece = pieces[i];\n      try {\n        piece = decodeURIComponent(piece.replace(/\\+/g, ' '));\n      } catch (e) {}\n      pathStringDecoded += '/' + piece;\n    }\n  }\n  return pathStringDecoded;\n}\n\n/**\n * @returns key value hash\n */\nfunction decodeQuery(queryString: string): { [key: string]: string } {\n  const results = {};\n  if (queryString.charAt(0) === '?') {\n    queryString = queryString.substring(1);\n  }\n  for (const segment of queryString.split('&')) {\n    if (segment.length === 0) {\n      continue;\n    }\n    const kv = segment.split('=');\n    if (kv.length === 2) {\n      results[decodeURIComponent(kv[0])] = decodeURIComponent(kv[1]);\n    } else {\n      warn(`Invalid query segment '${segment}' in query '${queryString}'`);\n    }\n  }\n  return results;\n}\n\nexport const parseRepoInfo = function (\n  dataURL: string,\n  nodeAdmin: boolean\n): { repoInfo: RepoInfo; path: Path } {\n  const parsedUrl = parseDatabaseURL(dataURL),\n    namespace = parsedUrl.namespace;\n\n  if (parsedUrl.domain === 'firebase.com') {\n    fatal(\n      parsedUrl.host +\n        ' is no longer supported. ' +\n        'Please use <YOUR FIREBASE>.firebaseio.com instead'\n    );\n  }\n\n  // Catch common error of uninitialized namespace value.\n  if (\n    (!namespace || namespace === 'undefined') &&\n    parsedUrl.domain !== 'localhost'\n  ) {\n    fatal(\n      'Cannot parse Firebase url. Please use https://<YOUR FIREBASE>.firebaseio.com'\n    );\n  }\n\n  if (!parsedUrl.secure) {\n    warnIfPageIsSecure();\n  }\n\n  const webSocketOnly = parsedUrl.scheme === 'ws' || parsedUrl.scheme === 'wss';\n\n  return {\n    repoInfo: new RepoInfo(\n      parsedUrl.host,\n      parsedUrl.secure,\n      namespace,\n      nodeAdmin,\n      webSocketOnly,\n      /*persistenceKey=*/ '',\n      /*includeNamespaceInQueryParams=*/ namespace !== parsedUrl.subdomain\n    ),\n    path: new Path(parsedUrl.pathString)\n  };\n};\n\nexport const parseDatabaseURL = function (dataURL: string): {\n  host: string;\n  port: number;\n  domain: string;\n  subdomain: string;\n  secure: boolean;\n  scheme: string;\n  pathString: string;\n  namespace: string;\n} {\n  // Default to empty strings in the event of a malformed string.\n  let host = '',\n    domain = '',\n    subdomain = '',\n    pathString = '',\n    namespace = '';\n\n  // Always default to SSL, unless otherwise specified.\n  let secure = true,\n    scheme = 'https',\n    port = 443;\n\n  // Don't do any validation here. The caller is responsible for validating the result of parsing.\n  if (typeof dataURL === 'string') {\n    // Parse scheme.\n    let colonInd = dataURL.indexOf('//');\n    if (colonInd >= 0) {\n      scheme = dataURL.substring(0, colonInd - 1);\n      dataURL = dataURL.substring(colonInd + 2);\n    }\n\n    // Parse host, path, and query string.\n    let slashInd = dataURL.indexOf('/');\n    if (slashInd === -1) {\n      slashInd = dataURL.length;\n    }\n    let questionMarkInd = dataURL.indexOf('?');\n    if (questionMarkInd === -1) {\n      questionMarkInd = dataURL.length;\n    }\n    host = dataURL.substring(0, Math.min(slashInd, questionMarkInd));\n    if (slashInd < questionMarkInd) {\n      // For pathString, questionMarkInd will always come after slashInd\n      pathString = decodePath(dataURL.substring(slashInd, questionMarkInd));\n    }\n    const queryParams = decodeQuery(\n      dataURL.substring(Math.min(dataURL.length, questionMarkInd))\n    );\n\n    // If we have a port, use scheme for determining if it's secure.\n    colonInd = host.indexOf(':');\n    if (colonInd >= 0) {\n      secure = scheme === 'https' || scheme === 'wss';\n      port = parseInt(host.substring(colonInd + 1), 10);\n    } else {\n      colonInd = host.length;\n    }\n\n    const hostWithoutPort = host.slice(0, colonInd);\n    if (hostWithoutPort.toLowerCase() === 'localhost') {\n      domain = 'localhost';\n    } else if (hostWithoutPort.split('.').length <= 2) {\n      domain = hostWithoutPort;\n    } else {\n      // Interpret the subdomain of a 3 or more component URL as the namespace name.\n      const dotInd = host.indexOf('.');\n      subdomain = host.substring(0, dotInd).toLowerCase();\n      domain = host.substring(dotInd + 1);\n      // Normalize namespaces to lowercase to share storage / connection.\n      namespace = subdomain;\n    }\n    // Always treat the value of the `ns` as the namespace name if it is present.\n    if ('ns' in queryParams) {\n      namespace = queryParams['ns'];\n    }\n  }\n\n  return {\n    host,\n    port,\n    domain,\n    subdomain,\n    secure,\n    scheme,\n    pathString,\n    namespace\n  };\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { stringify } from '@firebase/util';\n\nimport { DataSnapshot as ExpDataSnapshot } from '../../api/Reference_impl';\nimport { Path } from '../util/Path';\n\nimport { EventRegistration } from './EventRegistration';\n\n/**\n * Encapsulates the data needed to raise an event\n * @interface\n */\nexport interface Event {\n  getPath(): Path;\n\n  getEventType(): string;\n\n  getEventRunner(): () => void;\n\n  toString(): string;\n}\n\n/**\n * One of the following strings: \"value\", \"child_added\", \"child_changed\",\n * \"child_removed\", or \"child_moved.\"\n */\nexport type EventType =\n  | 'value'\n  | 'child_added'\n  | 'child_changed'\n  | 'child_moved'\n  | 'child_removed';\n\n/**\n * Encapsulates the data needed to raise an event\n */\nexport class DataEvent implements Event {\n  /**\n   * @param eventType - One of: value, child_added, child_changed, child_moved, child_removed\n   * @param eventRegistration - The function to call to with the event data. User provided\n   * @param snapshot - The data backing the event\n   * @param prevName - Optional, the name of the previous child for child_* events.\n   */\n  constructor(\n    public eventType: EventType,\n    public eventRegistration: EventRegistration,\n    public snapshot: ExpDataSnapshot,\n    public prevName?: string | null\n  ) {}\n  getPath(): Path {\n    const ref = this.snapshot.ref;\n    if (this.eventType === 'value') {\n      return ref._path;\n    } else {\n      return ref.parent._path;\n    }\n  }\n  getEventType(): string {\n    return this.eventType;\n  }\n  getEventRunner(): () => void {\n    return this.eventRegistration.getEventRunner(this);\n  }\n  toString(): string {\n    return (\n      this.getPath().toString() +\n      ':' +\n      this.eventType +\n      ':' +\n      stringify(this.snapshot.exportVal())\n    );\n  }\n}\n\nexport class CancelEvent implements Event {\n  constructor(\n    public eventRegistration: EventRegistration,\n    public error: Error,\n    public path: Path\n  ) {}\n  getPath(): Path {\n    return this.path;\n  }\n  getEventType(): string {\n    return 'cancel';\n  }\n  getEventRunner(): () => void {\n    return this.eventRegistration.getEventRunner(this);\n  }\n  toString(): string {\n    return this.path.toString() + ':cancel';\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { DataSnapshot } from '../../api/Reference_impl';\nimport { Repo } from '../Repo';\nimport { Path } from '../util/Path';\n\nimport { Change } from './Change';\nimport { CancelEvent, Event } from './Event';\nimport { QueryParams } from './QueryParams';\n\n/**\n * A user callback. Callbacks issues from the Legacy SDK maintain references\n * to the original user-issued callbacks, which allows equality\n * comparison by reference even though this callbacks are wrapped before\n * they can be passed to the firebase@exp SDK.\n *\n * @internal\n */\nexport interface UserCallback {\n  (dataSnapshot: DataSnapshot, previousChildName?: string | null): unknown;\n  userCallback?: unknown;\n  context?: object | null;\n}\n\n/**\n * A wrapper class that converts events from the database@exp SDK to the legacy\n * Database SDK. Events are not converted directly as event registration relies\n * on reference comparison of the original user callback (see `matches()`) and\n * relies on equality of the legacy SDK's `context` object.\n */\nexport class CallbackContext {\n  constructor(\n    private readonly snapshotCallback: UserCallback,\n    private readonly cancelCallback?: (error: Error) => unknown\n  ) {}\n\n  onValue(\n    expDataSnapshot: DataSnapshot,\n    previousChildName?: string | null\n  ): void {\n    this.snapshotCallback.call(null, expDataSnapshot, previousChildName);\n  }\n\n  onCancel(error: Error): void {\n    assert(\n      this.hasCancelCallback,\n      'Raising a cancel event on a listener with no cancel callback'\n    );\n    return this.cancelCallback.call(null, error);\n  }\n\n  get hasCancelCallback(): boolean {\n    return !!this.cancelCallback;\n  }\n\n  matches(other: CallbackContext): boolean {\n    return (\n      this.snapshotCallback === other.snapshotCallback ||\n      (this.snapshotCallback.userCallback !== undefined &&\n        this.snapshotCallback.userCallback ===\n          other.snapshotCallback.userCallback &&\n        this.snapshotCallback.context === other.snapshotCallback.context)\n    );\n  }\n}\n\nexport interface QueryContext {\n  readonly _queryIdentifier: string;\n  readonly _queryObject: object;\n  readonly _repo: Repo;\n  readonly _path: Path;\n  readonly _queryParams: QueryParams;\n}\n\n/**\n * An EventRegistration is basically an event type ('value', 'child_added', etc.) and a callback\n * to be notified of that type of event.\n *\n * That said, it can also contain a cancel callback to be notified if the event is canceled.  And\n * currently, this code is organized around the idea that you would register multiple child_ callbacks\n * together, as a single EventRegistration.  Though currently we don't do that.\n */\nexport interface EventRegistration {\n  /**\n   * True if this container has a callback to trigger for this event type\n   */\n  respondsTo(eventType: string): boolean;\n\n  createEvent(change: Change, query: QueryContext): Event;\n\n  /**\n   * Given event data, return a function to trigger the user's callback\n   */\n  getEventRunner(eventData: Event): () => void;\n\n  createCancelEvent(error: Error, path: Path): CancelEvent | null;\n\n  matches(other: EventRegistration): boolean;\n\n  /**\n   * False basically means this is a \"dummy\" callback container being used as a sentinel\n   * to remove all callback containers of a particular type.  (e.g. if the user does\n   * ref.off('value') without specifying a specific callback).\n   *\n   * (TODO: Rework this, since it's hacky)\n   *\n   */\n  hasAnyCallback(): boolean;\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Deferred } from '@firebase/util';\n\nimport {\n  Repo,\n  repoOnDisconnectCancel,\n  repoOnDisconnectSet,\n  repoOnDisconnectSetWithPriority,\n  repoOnDisconnectUpdate\n} from '../core/Repo';\nimport { Path } from '../core/util/Path';\nimport {\n  validateFirebaseDataArg,\n  validateFirebaseMergeDataArg,\n  validatePriority,\n  validateWritablePath\n} from '../core/util/validation';\n\n/**\n * The `onDisconnect` class allows you to write or clear data when your client\n * disconnects from the Database server. These updates occur whether your\n * client disconnects cleanly or not, so you can rely on them to clean up data\n * even if a connection is dropped or a client crashes.\n *\n * The `onDisconnect` class is most commonly used to manage presence in\n * applications where it is useful to detect how many clients are connected and\n * when other clients disconnect. See\n * {@link https://firebase.google.com/docs/database/web/offline-capabilities | Enabling Offline Capabilities in JavaScript}\n * for more information.\n *\n * To avoid problems when a connection is dropped before the requests can be\n * transferred to the Database server, these functions should be called before\n * writing any data.\n *\n * Note that `onDisconnect` operations are only triggered once. If you want an\n * operation to occur each time a disconnect occurs, you'll need to re-establish\n * the `onDisconnect` operations each time you reconnect.\n */\nexport class OnDisconnect {\n  /** @hideconstructor */\n  constructor(private _repo: Repo, private _path: Path) {}\n\n  /**\n   * Cancels all previously queued `onDisconnect()` set or update events for this\n   * location and all children.\n   *\n   * If a write has been queued for this location via a `set()` or `update()` at a\n   * parent location, the write at this location will be canceled, though writes\n   * to sibling locations will still occur.\n   *\n   * @returns Resolves when synchronization to the server is complete.\n   */\n  cancel(): Promise<void> {\n    const deferred = new Deferred<void>();\n    repoOnDisconnectCancel(\n      this._repo,\n      this._path,\n      deferred.wrapCallback(() => {})\n    );\n    return deferred.promise;\n  }\n\n  /**\n   * Ensures the data at this location is deleted when the client is disconnected\n   * (due to closing the browser, navigating to a new page, or network issues).\n   *\n   * @returns Resolves when synchronization to the server is complete.\n   */\n  remove(): Promise<void> {\n    validateWritablePath('OnDisconnect.remove', this._path);\n    const deferred = new Deferred<void>();\n    repoOnDisconnectSet(\n      this._repo,\n      this._path,\n      null,\n      deferred.wrapCallback(() => {})\n    );\n    return deferred.promise;\n  }\n\n  /**\n   * Ensures the data at this location is set to the specified value when the\n   * client is disconnected (due to closing the browser, navigating to a new page,\n   * or network issues).\n   *\n   * `set()` is especially useful for implementing \"presence\" systems, where a\n   * value should be changed or cleared when a user disconnects so that they\n   * appear \"offline\" to other users. See\n   * {@link https://firebase.google.com/docs/database/web/offline-capabilities | Enabling Offline Capabilities in JavaScript}\n   * for more information.\n   *\n   * Note that `onDisconnect` operations are only triggered once. If you want an\n   * operation to occur each time a disconnect occurs, you'll need to re-establish\n   * the `onDisconnect` operations each time.\n   *\n   * @param value - The value to be written to this location on disconnect (can\n   * be an object, array, string, number, boolean, or null).\n   * @returns Resolves when synchronization to the Database is complete.\n   */\n  set(value: unknown): Promise<void> {\n    validateWritablePath('OnDisconnect.set', this._path);\n    validateFirebaseDataArg('OnDisconnect.set', value, this._path, false);\n    const deferred = new Deferred<void>();\n    repoOnDisconnectSet(\n      this._repo,\n      this._path,\n      value,\n      deferred.wrapCallback(() => {})\n    );\n    return deferred.promise;\n  }\n\n  /**\n   * Ensures the data at this location is set to the specified value and priority\n   * when the client is disconnected (due to closing the browser, navigating to a\n   * new page, or network issues).\n   *\n   * @param value - The value to be written to this location on disconnect (can\n   * be an object, array, string, number, boolean, or null).\n   * @param priority - The priority to be written (string, number, or null).\n   * @returns Resolves when synchronization to the Database is complete.\n   */\n  setWithPriority(\n    value: unknown,\n    priority: number | string | null\n  ): Promise<void> {\n    validateWritablePath('OnDisconnect.setWithPriority', this._path);\n    validateFirebaseDataArg(\n      'OnDisconnect.setWithPriority',\n      value,\n      this._path,\n      false\n    );\n    validatePriority('OnDisconnect.setWithPriority', priority, false);\n\n    const deferred = new Deferred<void>();\n    repoOnDisconnectSetWithPriority(\n      this._repo,\n      this._path,\n      value,\n      priority,\n      deferred.wrapCallback(() => {})\n    );\n    return deferred.promise;\n  }\n\n  /**\n   * Writes multiple values at this location when the client is disconnected (due\n   * to closing the browser, navigating to a new page, or network issues).\n   *\n   * The `values` argument contains multiple property-value pairs that will be\n   * written to the Database together. Each child property can either be a simple\n   * property (for example, \"name\") or a relative path (for example, \"name/first\")\n   * from the current location to the data to update.\n   *\n   * As opposed to the `set()` method, `update()` can be use to selectively update\n   * only the referenced properties at the current location (instead of replacing\n   * all the child properties at the current location).\n   *\n   * @param values - Object containing multiple values.\n   * @returns Resolves when synchronization to the Database is complete.\n   */\n  update(values: object): Promise<void> {\n    validateWritablePath('OnDisconnect.update', this._path);\n    validateFirebaseMergeDataArg(\n      'OnDisconnect.update',\n      values,\n      this._path,\n      false\n    );\n    const deferred = new Deferred<void>();\n    repoOnDisconnectUpdate(\n      this._repo,\n      this._path,\n      values as Record<string, unknown>,\n      deferred.wrapCallback(() => {})\n    );\n    return deferred.promise;\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, getModularInstance, Deferred } from '@firebase/util';\n\nimport {\n  Repo,\n  repoAddEventCallbackForQuery,\n  repoGetValue,\n  repoRemoveEventCallbackForQuery,\n  repoServerTime,\n  repoSetWithPriority,\n  repoUpdate\n} from '../core/Repo';\nimport { ChildrenNode } from '../core/snap/ChildrenNode';\nimport { Index } from '../core/snap/indexes/Index';\nimport { KEY_INDEX } from '../core/snap/indexes/KeyIndex';\nimport { PathIndex } from '../core/snap/indexes/PathIndex';\nimport { PRIORITY_INDEX } from '../core/snap/indexes/PriorityIndex';\nimport { VALUE_INDEX } from '../core/snap/indexes/ValueIndex';\nimport { Node } from '../core/snap/Node';\nimport { syncPointSetReferenceConstructor } from '../core/SyncPoint';\nimport { syncTreeSetReferenceConstructor } from '../core/SyncTree';\nimport { parseRepoInfo } from '../core/util/libs/parser';\nimport { nextPushId } from '../core/util/NextPushId';\nimport {\n  Path,\n  pathChild,\n  pathEquals,\n  pathGetBack,\n  pathGetFront,\n  pathIsEmpty,\n  pathParent,\n  pathToUrlEncodedString\n} from '../core/util/Path';\nimport {\n  fatal,\n  MAX_NAME,\n  MIN_NAME,\n  ObjectToUniqueKey\n} from '../core/util/util';\nimport {\n  isValidPriority,\n  validateFirebaseDataArg,\n  validateFirebaseMergeDataArg,\n  validateKey,\n  validatePathString,\n  validatePriority,\n  validateRootPathString,\n  validateUrl,\n  validateWritablePath\n} from '../core/util/validation';\nimport { Change } from '../core/view/Change';\nimport { CancelEvent, DataEvent, EventType } from '../core/view/Event';\nimport {\n  CallbackContext,\n  EventRegistration,\n  QueryContext,\n  UserCallback\n} from '../core/view/EventRegistration';\nimport {\n  QueryParams,\n  queryParamsEndAt,\n  queryParamsEndBefore,\n  queryParamsGetQueryObject,\n  queryParamsLimitToFirst,\n  queryParamsLimitToLast,\n  queryParamsOrderBy,\n  queryParamsStartAfter,\n  queryParamsStartAt\n} from '../core/view/QueryParams';\n\nimport { Database } from './Database';\nimport { OnDisconnect } from './OnDisconnect';\nimport {\n  ListenOptions,\n  Query as Query,\n  DatabaseReference,\n  Unsubscribe,\n  ThenableReference\n} from './Reference';\n\n/**\n * @internal\n */\nexport class QueryImpl implements Query, QueryContext {\n  /**\n   * @hideconstructor\n   */\n  constructor(\n    readonly _repo: Repo,\n    readonly _path: Path,\n    readonly _queryParams: QueryParams,\n    readonly _orderByCalled: boolean\n  ) {}\n\n  get key(): string | null {\n    if (pathIsEmpty(this._path)) {\n      return null;\n    } else {\n      return pathGetBack(this._path);\n    }\n  }\n\n  get ref(): DatabaseReference {\n    return new ReferenceImpl(this._repo, this._path);\n  }\n\n  get _queryIdentifier(): string {\n    const obj = queryParamsGetQueryObject(this._queryParams);\n    const id = ObjectToUniqueKey(obj);\n    return id === '{}' ? 'default' : id;\n  }\n\n  /**\n   * An object representation of the query parameters used by this Query.\n   */\n  get _queryObject(): object {\n    return queryParamsGetQueryObject(this._queryParams);\n  }\n\n  isEqual(other: QueryImpl | null): boolean {\n    other = getModularInstance(other);\n    if (!(other instanceof QueryImpl)) {\n      return false;\n    }\n\n    const sameRepo = this._repo === other._repo;\n    const samePath = pathEquals(this._path, other._path);\n    const sameQueryIdentifier =\n      this._queryIdentifier === other._queryIdentifier;\n\n    return sameRepo && samePath && sameQueryIdentifier;\n  }\n\n  toJSON(): string {\n    return this.toString();\n  }\n\n  toString(): string {\n    return this._repo.toString() + pathToUrlEncodedString(this._path);\n  }\n}\n\n/**\n * Validates that no other order by call has been made\n */\nfunction validateNoPreviousOrderByCall(query: QueryImpl, fnName: string) {\n  if (query._orderByCalled === true) {\n    throw new Error(fnName + \": You can't combine multiple orderBy calls.\");\n  }\n}\n\n/**\n * Validates start/end values for queries.\n */\nfunction validateQueryEndpoints(params: QueryParams) {\n  let startNode = null;\n  let endNode = null;\n  if (params.hasStart()) {\n    startNode = params.getIndexStartValue();\n  }\n  if (params.hasEnd()) {\n    endNode = params.getIndexEndValue();\n  }\n\n  if (params.getIndex() === KEY_INDEX) {\n    const tooManyArgsError =\n      'Query: When ordering by key, you may only pass one argument to ' +\n      'startAt(), endAt(), or equalTo().';\n    const wrongArgTypeError =\n      'Query: When ordering by key, the argument passed to startAt(), startAfter(), ' +\n      'endAt(), endBefore(), or equalTo() must be a string.';\n    if (params.hasStart()) {\n      const startName = params.getIndexStartName();\n      if (startName !== MIN_NAME) {\n        throw new Error(tooManyArgsError);\n      } else if (typeof startNode !== 'string') {\n        throw new Error(wrongArgTypeError);\n      }\n    }\n    if (params.hasEnd()) {\n      const endName = params.getIndexEndName();\n      if (endName !== MAX_NAME) {\n        throw new Error(tooManyArgsError);\n      } else if (typeof endNode !== 'string') {\n        throw new Error(wrongArgTypeError);\n      }\n    }\n  } else if (params.getIndex() === PRIORITY_INDEX) {\n    if (\n      (startNode != null && !isValidPriority(startNode)) ||\n      (endNode != null && !isValidPriority(endNode))\n    ) {\n      throw new Error(\n        'Query: When ordering by priority, the first argument passed to startAt(), ' +\n          'startAfter() endAt(), endBefore(), or equalTo() must be a valid priority value ' +\n          '(null, a number, or a string).'\n      );\n    }\n  } else {\n    assert(\n      params.getIndex() instanceof PathIndex ||\n        params.getIndex() === VALUE_INDEX,\n      'unknown index type.'\n    );\n    if (\n      (startNode != null && typeof startNode === 'object') ||\n      (endNode != null && typeof endNode === 'object')\n    ) {\n      throw new Error(\n        'Query: First argument passed to startAt(), startAfter(), endAt(), endBefore(), or ' +\n          'equalTo() cannot be an object.'\n      );\n    }\n  }\n}\n\n/**\n * Validates that limit* has been called with the correct combination of parameters\n */\nfunction validateLimit(params: QueryParams) {\n  if (\n    params.hasStart() &&\n    params.hasEnd() &&\n    params.hasLimit() &&\n    !params.hasAnchoredLimit()\n  ) {\n    throw new Error(\n      \"Query: Can't combine startAt(), startAfter(), endAt(), endBefore(), and limit(). Use \" +\n        'limitToFirst() or limitToLast() instead.'\n    );\n  }\n}\n\n/**\n * @internal\n */\nexport class ReferenceImpl extends QueryImpl implements DatabaseReference {\n  /** @hideconstructor */\n  constructor(repo: Repo, path: Path) {\n    super(repo, path, new QueryParams(), false);\n  }\n\n  get parent(): ReferenceImpl | null {\n    const parentPath = pathParent(this._path);\n    return parentPath === null\n      ? null\n      : new ReferenceImpl(this._repo, parentPath);\n  }\n\n  get root(): ReferenceImpl {\n    let ref: ReferenceImpl = this;\n    while (ref.parent !== null) {\n      ref = ref.parent;\n    }\n    return ref;\n  }\n}\n\n/**\n * A `DataSnapshot` contains data from a Database location.\n *\n * Any time you read data from the Database, you receive the data as a\n * `DataSnapshot`. A `DataSnapshot` is passed to the event callbacks you attach\n * with `on()` or `once()`. You can extract the contents of the snapshot as a\n * JavaScript object by calling the `val()` method. Alternatively, you can\n * traverse into the snapshot by calling `child()` to return child snapshots\n * (which you could then call `val()` on).\n *\n * A `DataSnapshot` is an efficiently generated, immutable copy of the data at\n * a Database location. It cannot be modified and will never change (to modify\n * data, you always call the `set()` method on a `Reference` directly).\n */\nexport class DataSnapshot {\n  /**\n   * @param _node - A SnapshotNode to wrap.\n   * @param ref - The location this snapshot came from.\n   * @param _index - The iteration order for this snapshot\n   * @hideconstructor\n   */\n  constructor(\n    readonly _node: Node,\n    /**\n     * The location of this DataSnapshot.\n     */\n    readonly ref: DatabaseReference,\n    readonly _index: Index\n  ) {}\n\n  /**\n   * Gets the priority value of the data in this `DataSnapshot`.\n   *\n   * Applications need not use priority but can order collections by\n   * ordinary properties (see\n   * {@link https://firebase.google.com/docs/database/web/lists-of-data#sorting_and_filtering_data |Sorting and filtering data}\n   * ).\n   */\n  get priority(): string | number | null {\n    // typecast here because we never return deferred values or internal priorities (MAX_PRIORITY)\n    return this._node.getPriority().val() as string | number | null;\n  }\n\n  /**\n   * The key (last part of the path) of the location of this `DataSnapshot`.\n   *\n   * The last token in a Database location is considered its key. For example,\n   * \"ada\" is the key for the /users/ada/ node. Accessing the key on any\n   * `DataSnapshot` will return the key for the location that generated it.\n   * However, accessing the key on the root URL of a Database will return\n   * `null`.\n   */\n  get key(): string | null {\n    return this.ref.key;\n  }\n\n  /** Returns the number of child properties of this `DataSnapshot`. */\n  get size(): number {\n    return this._node.numChildren();\n  }\n\n  /**\n   * Gets another `DataSnapshot` for the location at the specified relative path.\n   *\n   * Passing a relative path to the `child()` method of a DataSnapshot returns\n   * another `DataSnapshot` for the location at the specified relative path. The\n   * relative path can either be a simple child name (for example, \"ada\") or a\n   * deeper, slash-separated path (for example, \"ada/name/first\"). If the child\n   * location has no data, an empty `DataSnapshot` (that is, a `DataSnapshot`\n   * whose value is `null`) is returned.\n   *\n   * @param path - A relative path to the location of child data.\n   */\n  child(path: string): DataSnapshot {\n    const childPath = new Path(path);\n    const childRef = child(this.ref, path);\n    return new DataSnapshot(\n      this._node.getChild(childPath),\n      childRef,\n      PRIORITY_INDEX\n    );\n  }\n  /**\n   * Returns true if this `DataSnapshot` contains any data. It is slightly more\n   * efficient than using `snapshot.val() !== null`.\n   */\n  exists(): boolean {\n    return !this._node.isEmpty();\n  }\n\n  /**\n   * Exports the entire contents of the DataSnapshot as a JavaScript object.\n   *\n   * The `exportVal()` method is similar to `val()`, except priority information\n   * is included (if available), making it suitable for backing up your data.\n   *\n   * @returns The DataSnapshot's contents as a JavaScript value (Object,\n   *   Array, string, number, boolean, or `null`).\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  exportVal(): any {\n    return this._node.val(true);\n  }\n\n  /**\n   * Enumerates the top-level children in the `DataSnapshot`.\n   *\n   * Because of the way JavaScript objects work, the ordering of data in the\n   * JavaScript object returned by `val()` is not guaranteed to match the\n   * ordering on the server nor the ordering of `onChildAdded()` events. That is\n   * where `forEach()` comes in handy. It guarantees the children of a\n   * `DataSnapshot` will be iterated in their query order.\n   *\n   * If no explicit `orderBy*()` method is used, results are returned\n   * ordered by key (unless priorities are used, in which case, results are\n   * returned by priority).\n   *\n   * @param action - A function that will be called for each child DataSnapshot.\n   * The callback can return true to cancel further enumeration.\n   * @returns true if enumeration was canceled due to your callback returning\n   * true.\n   */\n  forEach(action: (child: DataSnapshot) => boolean | void): boolean {\n    if (this._node.isLeafNode()) {\n      return false;\n    }\n\n    const childrenNode = this._node as ChildrenNode;\n    // Sanitize the return value to a boolean. ChildrenNode.forEachChild has a weird return type...\n    return !!childrenNode.forEachChild(this._index, (key, node) => {\n      return action(\n        new DataSnapshot(node, child(this.ref, key), PRIORITY_INDEX)\n      );\n    });\n  }\n\n  /**\n   * Returns true if the specified child path has (non-null) data.\n   *\n   * @param path - A relative path to the location of a potential child.\n   * @returns `true` if data exists at the specified child path; else\n   *  `false`.\n   */\n  hasChild(path: string): boolean {\n    const childPath = new Path(path);\n    return !this._node.getChild(childPath).isEmpty();\n  }\n\n  /**\n   * Returns whether or not the `DataSnapshot` has any non-`null` child\n   * properties.\n   *\n   * You can use `hasChildren()` to determine if a `DataSnapshot` has any\n   * children. If it does, you can enumerate them using `forEach()`. If it\n   * doesn't, then either this snapshot contains a primitive value (which can be\n   * retrieved with `val()`) or it is empty (in which case, `val()` will return\n   * `null`).\n   *\n   * @returns true if this snapshot has any children; else false.\n   */\n  hasChildren(): boolean {\n    if (this._node.isLeafNode()) {\n      return false;\n    } else {\n      return !this._node.isEmpty();\n    }\n  }\n\n  /**\n   * Returns a JSON-serializable representation of this object.\n   */\n  toJSON(): object | null {\n    return this.exportVal();\n  }\n\n  /**\n   * Extracts a JavaScript value from a `DataSnapshot`.\n   *\n   * Depending on the data in a `DataSnapshot`, the `val()` method may return a\n   * scalar type (string, number, or boolean), an array, or an object. It may\n   * also return null, indicating that the `DataSnapshot` is empty (contains no\n   * data).\n   *\n   * @returns The DataSnapshot's contents as a JavaScript value (Object,\n   *   Array, string, number, boolean, or `null`).\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  val(): any {\n    return this._node.val();\n  }\n}\n/**\n *\n * Returns a `Reference` representing the location in the Database\n * corresponding to the provided path. If no path is provided, the `Reference`\n * will point to the root of the Database.\n *\n * @param db - The database instance to obtain a reference for.\n * @param path - Optional path representing the location the returned\n *   `Reference` will point. If not provided, the returned `Reference` will\n *   point to the root of the Database.\n * @returns If a path is provided, a `Reference`\n *   pointing to the provided path. Otherwise, a `Reference` pointing to the\n *   root of the Database.\n */\nexport function ref(db: Database, path?: string): DatabaseReference {\n  db = getModularInstance(db);\n  db._checkNotDeleted('ref');\n  return path !== undefined ? child(db._root, path) : db._root;\n}\n\n/**\n * Returns a `Reference` representing the location in the Database\n * corresponding to the provided Firebase URL.\n *\n * An exception is thrown if the URL is not a valid Firebase Database URL or it\n * has a different domain than the current `Database` instance.\n *\n * Note that all query parameters (`orderBy`, `limitToLast`, etc.) are ignored\n * and are not applied to the returned `Reference`.\n *\n * @param db - The database instance to obtain a reference for.\n * @param url - The Firebase URL at which the returned `Reference` will\n *   point.\n * @returns A `Reference` pointing to the provided\n *   Firebase URL.\n */\nexport function refFromURL(db: Database, url: string): DatabaseReference {\n  db = getModularInstance(db);\n  db._checkNotDeleted('refFromURL');\n  const parsedURL = parseRepoInfo(url, db._repo.repoInfo_.nodeAdmin);\n  validateUrl('refFromURL', parsedURL);\n\n  const repoInfo = parsedURL.repoInfo;\n  if (\n    !db._repo.repoInfo_.isCustomHost() &&\n    repoInfo.host !== db._repo.repoInfo_.host\n  ) {\n    fatal(\n      'refFromURL' +\n        ': Host name does not match the current database: ' +\n        '(found ' +\n        repoInfo.host +\n        ' but expected ' +\n        db._repo.repoInfo_.host +\n        ')'\n    );\n  }\n\n  return ref(db, parsedURL.path.toString());\n}\n\n/**\n * Gets a `Reference` for the location at the specified relative path.\n *\n * The relative path can either be a simple child name (for example, \"ada\") or\n * a deeper slash-separated path (for example, \"ada/name/first\").\n *\n * @param parent - The parent location.\n * @param path - A relative path from this location to the desired child\n *   location.\n * @returns The specified child location.\n */\nexport function child(\n  parent: DatabaseReference,\n  path: string\n): DatabaseReference {\n  parent = getModularInstance(parent);\n  if (pathGetFront(parent._path) === null) {\n    validateRootPathString('child', 'path', path, false);\n  } else {\n    validatePathString('child', 'path', path, false);\n  }\n  return new ReferenceImpl(parent._repo, pathChild(parent._path, path));\n}\n\n/**\n * Returns an `OnDisconnect` object - see\n * {@link https://firebase.google.com/docs/database/web/offline-capabilities | Enabling Offline Capabilities in JavaScript}\n * for more information on how to use it.\n *\n * @param ref - The reference to add OnDisconnect triggers for.\n */\nexport function onDisconnect(ref: DatabaseReference): OnDisconnect {\n  ref = getModularInstance(ref) as ReferenceImpl;\n  return new OnDisconnect(ref._repo, ref._path);\n}\n\nexport interface ThenableReferenceImpl\n  extends ReferenceImpl,\n    Pick<Promise<ReferenceImpl>, 'then' | 'catch'> {}\n\n/**\n * Generates a new child location using a unique key and returns its\n * `Reference`.\n *\n * This is the most common pattern for adding data to a collection of items.\n *\n * If you provide a value to `push()`, the value is written to the\n * generated location. If you don't pass a value, nothing is written to the\n * database and the child remains empty (but you can use the `Reference`\n * elsewhere).\n *\n * The unique keys generated by `push()` are ordered by the current time, so the\n * resulting list of items is chronologically sorted. The keys are also\n * designed to be unguessable (they contain 72 random bits of entropy).\n *\n * See {@link https://firebase.google.com/docs/database/web/lists-of-data#append_to_a_list_of_data | Append to a list of data}\n * </br>See {@link ttps://firebase.googleblog.com/2015/02/the-2120-ways-to-ensure-unique_68.html | The 2^120 Ways to Ensure Unique Identifiers}\n *\n * @param parent - The parent location.\n * @param value - Optional value to be written at the generated location.\n * @returns Combined `Promise` and `Reference`; resolves when write is complete,\n * but can be used immediately as the `Reference` to the child location.\n */\nexport function push(\n  parent: DatabaseReference,\n  value?: unknown\n): ThenableReference {\n  parent = getModularInstance(parent);\n  validateWritablePath('push', parent._path);\n  validateFirebaseDataArg('push', value, parent._path, true);\n  const now = repoServerTime(parent._repo);\n  const name = nextPushId(now);\n\n  // push() returns a ThennableReference whose promise is fulfilled with a\n  // regular Reference. We use child() to create handles to two different\n  // references. The first is turned into a ThennableReference below by adding\n  // then() and catch() methods and is used as the return value of push(). The\n  // second remains a regular Reference and is used as the fulfilled value of\n  // the first ThennableReference.\n  const thennablePushRef: Partial<ThenableReferenceImpl> = child(\n    parent,\n    name\n  ) as ReferenceImpl;\n  const pushRef = child(parent, name) as ReferenceImpl;\n\n  let promise: Promise<ReferenceImpl>;\n  if (value != null) {\n    promise = set(pushRef, value).then(() => pushRef);\n  } else {\n    promise = Promise.resolve(pushRef);\n  }\n\n  thennablePushRef.then = promise.then.bind(promise);\n  thennablePushRef.catch = promise.then.bind(promise, undefined);\n  return thennablePushRef as ThenableReferenceImpl;\n}\n\n/**\n * Removes the data at this Database location.\n *\n * Any data at child locations will also be deleted.\n *\n * The effect of the remove will be visible immediately and the corresponding\n * event 'value' will be triggered. Synchronization of the remove to the\n * Firebase servers will also be started, and the returned Promise will resolve\n * when complete. If provided, the onComplete callback will be called\n * asynchronously after synchronization has finished.\n *\n * @param ref - The location to remove.\n * @returns Resolves when remove on server is complete.\n */\nexport function remove(ref: DatabaseReference): Promise<void> {\n  validateWritablePath('remove', ref._path);\n  return set(ref, null);\n}\n\n/**\n * Writes data to this Database location.\n *\n * This will overwrite any data at this location and all child locations.\n *\n * The effect of the write will be visible immediately, and the corresponding\n * events (\"value\", \"child_added\", etc.) will be triggered. Synchronization of\n * the data to the Firebase servers will also be started, and the returned\n * Promise will resolve when complete. If provided, the `onComplete` callback\n * will be called asynchronously after synchronization has finished.\n *\n * Passing `null` for the new value is equivalent to calling `remove()`; namely,\n * all data at this location and all child locations will be deleted.\n *\n * `set()` will remove any priority stored at this location, so if priority is\n * meant to be preserved, you need to use `setWithPriority()` instead.\n *\n * Note that modifying data with `set()` will cancel any pending transactions\n * at that location, so extreme care should be taken if mixing `set()` and\n * `transaction()` to modify the same data.\n *\n * A single `set()` will generate a single \"value\" event at the location where\n * the `set()` was performed.\n *\n * @param ref - The location to write to.\n * @param value - The value to be written (string, number, boolean, object,\n *   array, or null).\n * @returns Resolves when write to server is complete.\n */\nexport function set(ref: DatabaseReference, value: unknown): Promise<void> {\n  ref = getModularInstance(ref);\n  validateWritablePath('set', ref._path);\n  validateFirebaseDataArg('set', value, ref._path, false);\n  const deferred = new Deferred<void>();\n  repoSetWithPriority(\n    ref._repo,\n    ref._path,\n    value,\n    /*priority=*/ null,\n    deferred.wrapCallback(() => {})\n  );\n  return deferred.promise;\n}\n\n/**\n * Sets a priority for the data at this Database location.\n *\n * Applications need not use priority but can order collections by\n * ordinary properties (see\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sorting_and_filtering_data | Sorting and filtering data}\n * ).\n *\n * @param ref - The location to write to.\n * @param priority - The priority to be written (string, number, or null).\n * @returns Resolves when write to server is complete.\n */\nexport function setPriority(\n  ref: DatabaseReference,\n  priority: string | number | null\n): Promise<void> {\n  ref = getModularInstance(ref);\n  validateWritablePath('setPriority', ref._path);\n  validatePriority('setPriority', priority, false);\n  const deferred = new Deferred<void>();\n  repoSetWithPriority(\n    ref._repo,\n    pathChild(ref._path, '.priority'),\n    priority,\n    null,\n    deferred.wrapCallback(() => {})\n  );\n  return deferred.promise;\n}\n\n/**\n * Writes data the Database location. Like `set()` but also specifies the\n * priority for that data.\n *\n * Applications need not use priority but can order collections by\n * ordinary properties (see\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sorting_and_filtering_data | Sorting and filtering data}\n * ).\n *\n * @param ref - The location to write to.\n * @param value - The value to be written (string, number, boolean, object,\n *   array, or null).\n * @param priority - The priority to be written (string, number, or null).\n * @returns Resolves when write to server is complete.\n */\nexport function setWithPriority(\n  ref: DatabaseReference,\n  value: unknown,\n  priority: string | number | null\n): Promise<void> {\n  validateWritablePath('setWithPriority', ref._path);\n  validateFirebaseDataArg('setWithPriority', value, ref._path, false);\n  validatePriority('setWithPriority', priority, false);\n  if (ref.key === '.length' || ref.key === '.keys') {\n    throw 'setWithPriority failed: ' + ref.key + ' is a read-only object.';\n  }\n\n  const deferred = new Deferred<void>();\n  repoSetWithPriority(\n    ref._repo,\n    ref._path,\n    value,\n    priority,\n    deferred.wrapCallback(() => {})\n  );\n  return deferred.promise;\n}\n\n/**\n * Writes multiple values to the Database at once.\n *\n * The `values` argument contains multiple property-value pairs that will be\n * written to the Database together. Each child property can either be a simple\n * property (for example, \"name\") or a relative path (for example,\n * \"name/first\") from the current location to the data to update.\n *\n * As opposed to the `set()` method, `update()` can be use to selectively update\n * only the referenced properties at the current location (instead of replacing\n * all the child properties at the current location).\n *\n * The effect of the write will be visible immediately, and the corresponding\n * events ('value', 'child_added', etc.) will be triggered. Synchronization of\n * the data to the Firebase servers will also be started, and the returned\n * Promise will resolve when complete. If provided, the `onComplete` callback\n * will be called asynchronously after synchronization has finished.\n *\n * A single `update()` will generate a single \"value\" event at the location\n * where the `update()` was performed, regardless of how many children were\n * modified.\n *\n * Note that modifying data with `update()` will cancel any pending\n * transactions at that location, so extreme care should be taken if mixing\n * `update()` and `transaction()` to modify the same data.\n *\n * Passing `null` to `update()` will remove the data at this location.\n *\n * See\n * {@link https://firebase.googleblog.com/2015/09/introducing-multi-location-updates-and_86.html | Introducing multi-location updates and more}.\n *\n * @param ref - The location to write to.\n * @param values - Object containing multiple values.\n * @returns Resolves when update on server is complete.\n */\nexport function update(ref: DatabaseReference, values: object): Promise<void> {\n  validateFirebaseMergeDataArg('update', values, ref._path, false);\n  const deferred = new Deferred<void>();\n  repoUpdate(\n    ref._repo,\n    ref._path,\n    values as Record<string, unknown>,\n    deferred.wrapCallback(() => {})\n  );\n  return deferred.promise;\n}\n\n/**\n * Gets the most up-to-date result for this query.\n *\n * @param query - The query to run.\n * @returns A `Promise` which resolves to the resulting DataSnapshot if a value is\n * available, or rejects if the client is unable to return a value (e.g., if the\n * server is unreachable and there is nothing cached).\n */\nexport function get(query: Query): Promise<DataSnapshot> {\n  query = getModularInstance(query) as QueryImpl;\n  return repoGetValue(query._repo, query).then(node => {\n    return new DataSnapshot(\n      node,\n      new ReferenceImpl(query._repo, query._path),\n      query._queryParams.getIndex()\n    );\n  });\n}\n\n/**\n * Represents registration for 'value' events.\n */\nexport class ValueEventRegistration implements EventRegistration {\n  constructor(private callbackContext: CallbackContext) {}\n\n  respondsTo(eventType: string): boolean {\n    return eventType === 'value';\n  }\n\n  createEvent(change: Change, query: QueryContext): DataEvent {\n    const index = query._queryParams.getIndex();\n    return new DataEvent(\n      'value',\n      this,\n      new DataSnapshot(\n        change.snapshotNode,\n        new ReferenceImpl(query._repo, query._path),\n        index\n      )\n    );\n  }\n\n  getEventRunner(eventData: CancelEvent | DataEvent): () => void {\n    if (eventData.getEventType() === 'cancel') {\n      return () =>\n        this.callbackContext.onCancel((eventData as CancelEvent).error);\n    } else {\n      return () =>\n        this.callbackContext.onValue((eventData as DataEvent).snapshot, null);\n    }\n  }\n\n  createCancelEvent(error: Error, path: Path): CancelEvent | null {\n    if (this.callbackContext.hasCancelCallback) {\n      return new CancelEvent(this, error, path);\n    } else {\n      return null;\n    }\n  }\n\n  matches(other: EventRegistration): boolean {\n    if (!(other instanceof ValueEventRegistration)) {\n      return false;\n    } else if (!other.callbackContext || !this.callbackContext) {\n      // If no callback specified, we consider it to match any callback.\n      return true;\n    } else {\n      return other.callbackContext.matches(this.callbackContext);\n    }\n  }\n\n  hasAnyCallback(): boolean {\n    return this.callbackContext !== null;\n  }\n}\n\n/**\n * Represents the registration of a child_x event.\n */\nexport class ChildEventRegistration implements EventRegistration {\n  constructor(\n    private eventType: string,\n    private callbackContext: CallbackContext | null\n  ) {}\n\n  respondsTo(eventType: string): boolean {\n    let eventToCheck =\n      eventType === 'children_added' ? 'child_added' : eventType;\n    eventToCheck =\n      eventToCheck === 'children_removed' ? 'child_removed' : eventToCheck;\n    return this.eventType === eventToCheck;\n  }\n\n  createCancelEvent(error: Error, path: Path): CancelEvent | null {\n    if (this.callbackContext.hasCancelCallback) {\n      return new CancelEvent(this, error, path);\n    } else {\n      return null;\n    }\n  }\n\n  createEvent(change: Change, query: QueryContext): DataEvent {\n    assert(change.childName != null, 'Child events should have a childName.');\n    const childRef = child(\n      new ReferenceImpl(query._repo, query._path),\n      change.childName\n    );\n    const index = query._queryParams.getIndex();\n    return new DataEvent(\n      change.type as EventType,\n      this,\n      new DataSnapshot(change.snapshotNode, childRef, index),\n      change.prevName\n    );\n  }\n\n  getEventRunner(eventData: CancelEvent | DataEvent): () => void {\n    if (eventData.getEventType() === 'cancel') {\n      return () =>\n        this.callbackContext.onCancel((eventData as CancelEvent).error);\n    } else {\n      return () =>\n        this.callbackContext.onValue(\n          (eventData as DataEvent).snapshot,\n          (eventData as DataEvent).prevName\n        );\n    }\n  }\n\n  matches(other: EventRegistration): boolean {\n    if (other instanceof ChildEventRegistration) {\n      return (\n        this.eventType === other.eventType &&\n        (!this.callbackContext ||\n          !other.callbackContext ||\n          this.callbackContext.matches(other.callbackContext))\n      );\n    }\n\n    return false;\n  }\n\n  hasAnyCallback(): boolean {\n    return !!this.callbackContext;\n  }\n}\n\nfunction addEventListener(\n  query: Query,\n  eventType: EventType,\n  callback: UserCallback,\n  cancelCallbackOrListenOptions?: ((error: Error) => unknown) | ListenOptions,\n  options?: ListenOptions\n) {\n  let cancelCallback: ((error: Error) => unknown) | undefined;\n  if (typeof cancelCallbackOrListenOptions === 'object') {\n    cancelCallback = undefined;\n    options = cancelCallbackOrListenOptions;\n  }\n  if (typeof cancelCallbackOrListenOptions === 'function') {\n    cancelCallback = cancelCallbackOrListenOptions;\n  }\n\n  if (options && options.onlyOnce) {\n    const userCallback = callback;\n    const onceCallback: UserCallback = (dataSnapshot, previousChildName) => {\n      repoRemoveEventCallbackForQuery(query._repo, query, container);\n      userCallback(dataSnapshot, previousChildName);\n    };\n    onceCallback.userCallback = callback.userCallback;\n    onceCallback.context = callback.context;\n    callback = onceCallback;\n  }\n\n  const callbackContext = new CallbackContext(\n    callback,\n    cancelCallback || undefined\n  );\n  const container =\n    eventType === 'value'\n      ? new ValueEventRegistration(callbackContext)\n      : new ChildEventRegistration(eventType, callbackContext);\n  repoAddEventCallbackForQuery(query._repo, query, container);\n  return () => repoRemoveEventCallbackForQuery(query._repo, query, container);\n}\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onValue` event will trigger once with the initial data stored at this\n * location, and then trigger again each time the data changes. The\n * `DataSnapshot` passed to the callback will be for the location at which\n * `on()` was called. It won't trigger until the entire contents has been\n * synchronized. If the location has no data, it will be triggered with an empty\n * `DataSnapshot` (`val()` will return `null`).\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs. The\n * callback will be passed a DataSnapshot.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onValue(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  cancelCallback?: (error: Error) => unknown\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onValue` event will trigger once with the initial data stored at this\n * location, and then trigger again each time the data changes. The\n * `DataSnapshot` passed to the callback will be for the location at which\n * `on()` was called. It won't trigger until the entire contents has been\n * synchronized. If the location has no data, it will be triggered with an empty\n * `DataSnapshot` (`val()` will return `null`).\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs. The\n * callback will be passed a DataSnapshot.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onValue(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onValue` event will trigger once with the initial data stored at this\n * location, and then trigger again each time the data changes. The\n * `DataSnapshot` passed to the callback will be for the location at which\n * `on()` was called. It won't trigger until the entire contents has been\n * synchronized. If the location has no data, it will be triggered with an empty\n * `DataSnapshot` (`val()` will return `null`).\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs. The\n * callback will be passed a DataSnapshot.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onValue(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  cancelCallback: (error: Error) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\nexport function onValue(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  cancelCallbackOrListenOptions?: ((error: Error) => unknown) | ListenOptions,\n  options?: ListenOptions\n): Unsubscribe {\n  return addEventListener(\n    query,\n    'value',\n    callback,\n    cancelCallbackOrListenOptions,\n    options\n  );\n}\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildAdded` event will be triggered once for each initial child at this\n * location, and it will be triggered again every time a new child is added. The\n * `DataSnapshot` passed into the callback will reflect the data for the\n * relevant child. For ordering purposes, it is passed a second argument which\n * is a string containing the key of the previous sibling child by sort order,\n * or `null` if it is the first child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildAdded(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName?: string | null\n  ) => unknown,\n  cancelCallback?: (error: Error) => unknown\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildAdded` event will be triggered once for each initial child at this\n * location, and it will be triggered again every time a new child is added. The\n * `DataSnapshot` passed into the callback will reflect the data for the\n * relevant child. For ordering purposes, it is passed a second argument which\n * is a string containing the key of the previous sibling child by sort order,\n * or `null` if it is the first child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildAdded(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildAdded` event will be triggered once for each initial child at this\n * location, and it will be triggered again every time a new child is added. The\n * `DataSnapshot` passed into the callback will reflect the data for the\n * relevant child. For ordering purposes, it is passed a second argument which\n * is a string containing the key of the previous sibling child by sort order,\n * or `null` if it is the first child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildAdded(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallback: (error: Error) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\nexport function onChildAdded(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallbackOrListenOptions?: ((error: Error) => unknown) | ListenOptions,\n  options?: ListenOptions\n): Unsubscribe {\n  return addEventListener(\n    query,\n    'child_added',\n    callback,\n    cancelCallbackOrListenOptions,\n    options\n  );\n}\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildChanged` event will be triggered when the data stored in a child\n * (or any of its descendants) changes. Note that a single `child_changed` event\n * may represent multiple changes to the child. The `DataSnapshot` passed to the\n * callback will contain the new child contents. For ordering purposes, the\n * callback is also passed a second argument which is a string containing the\n * key of the previous sibling child by sort order, or `null` if it is the first\n * child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildChanged(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallback?: (error: Error) => unknown\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildChanged` event will be triggered when the data stored in a child\n * (or any of its descendants) changes. Note that a single `child_changed` event\n * may represent multiple changes to the child. The `DataSnapshot` passed to the\n * callback will contain the new child contents. For ordering purposes, the\n * callback is also passed a second argument which is a string containing the\n * key of the previous sibling child by sort order, or `null` if it is the first\n * child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildChanged(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildChanged` event will be triggered when the data stored in a child\n * (or any of its descendants) changes. Note that a single `child_changed` event\n * may represent multiple changes to the child. The `DataSnapshot` passed to the\n * callback will contain the new child contents. For ordering purposes, the\n * callback is also passed a second argument which is a string containing the\n * key of the previous sibling child by sort order, or `null` if it is the first\n * child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildChanged(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallback: (error: Error) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\nexport function onChildChanged(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallbackOrListenOptions?: ((error: Error) => unknown) | ListenOptions,\n  options?: ListenOptions\n): Unsubscribe {\n  return addEventListener(\n    query,\n    'child_changed',\n    callback,\n    cancelCallbackOrListenOptions,\n    options\n  );\n}\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildMoved` event will be triggered when a child's sort order changes\n * such that its position relative to its siblings changes. The `DataSnapshot`\n * passed to the callback will be for the data of the child that has moved. It\n * is also passed a second argument which is a string containing the key of the\n * previous sibling child by sort order, or `null` if it is the first child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildMoved(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallback?: (error: Error) => unknown\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildMoved` event will be triggered when a child's sort order changes\n * such that its position relative to its siblings changes. The `DataSnapshot`\n * passed to the callback will be for the data of the child that has moved. It\n * is also passed a second argument which is a string containing the key of the\n * previous sibling child by sort order, or `null` if it is the first child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildMoved(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildMoved` event will be triggered when a child's sort order changes\n * such that its position relative to its siblings changes. The `DataSnapshot`\n * passed to the callback will be for the data of the child that has moved. It\n * is also passed a second argument which is a string containing the key of the\n * previous sibling child by sort order, or `null` if it is the first child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildMoved(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallback: (error: Error) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\nexport function onChildMoved(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallbackOrListenOptions?: ((error: Error) => unknown) | ListenOptions,\n  options?: ListenOptions\n): Unsubscribe {\n  return addEventListener(\n    query,\n    'child_moved',\n    callback,\n    cancelCallbackOrListenOptions,\n    options\n  );\n}\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildRemoved` event will be triggered once every time a child is\n * removed. The `DataSnapshot` passed into the callback will be the old data for\n * the child that was removed. A child will get removed when either:\n *\n * - a client explicitly calls `remove()` on that child or one of its ancestors\n * - a client calls `set(null)` on that child or one of its ancestors\n * - that child has all of its children removed\n * - there is a query in effect which now filters out the child (because it's\n *   sort order changed or the max limit was hit)\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildRemoved(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  cancelCallback?: (error: Error) => unknown\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildRemoved` event will be triggered once every time a child is\n * removed. The `DataSnapshot` passed into the callback will be the old data for\n * the child that was removed. A child will get removed when either:\n *\n * - a client explicitly calls `remove()` on that child or one of its ancestors\n * - a client calls `set(null)` on that child or one of its ancestors\n * - that child has all of its children removed\n * - there is a query in effect which now filters out the child (because it's\n *   sort order changed or the max limit was hit)\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildRemoved(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildRemoved` event will be triggered once every time a child is\n * removed. The `DataSnapshot` passed into the callback will be the old data for\n * the child that was removed. A child will get removed when either:\n *\n * - a client explicitly calls `remove()` on that child or one of its ancestors\n * - a client calls `set(null)` on that child or one of its ancestors\n * - that child has all of its children removed\n * - there is a query in effect which now filters out the child (because it's\n *   sort order changed or the max limit was hit)\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildRemoved(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  cancelCallback: (error: Error) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\nexport function onChildRemoved(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  cancelCallbackOrListenOptions?: ((error: Error) => unknown) | ListenOptions,\n  options?: ListenOptions\n): Unsubscribe {\n  return addEventListener(\n    query,\n    'child_removed',\n    callback,\n    cancelCallbackOrListenOptions,\n    options\n  );\n}\n\nexport { EventType };\n\n/**\n * Detaches a callback previously attached with `on()`.\n *\n * Detach a callback previously attached with `on()`. Note that if `on()` was\n * called multiple times with the same eventType and callback, the callback\n * will be called multiple times for each event, and `off()` must be called\n * multiple times to remove the callback. Calling `off()` on a parent listener\n * will not automatically remove listeners registered on child nodes, `off()`\n * must also be called on any child listeners to remove the callback.\n *\n * If a callback is not specified, all callbacks for the specified eventType\n * will be removed. Similarly, if no eventType is specified, all callbacks\n * for the `Reference` will be removed.\n *\n * Individual listeners can also be removed by invoking their unsubscribe\n * callbacks.\n *\n * @param query - The query that the listener was registered with.\n * @param eventType - One of the following strings: \"value\", \"child_added\",\n * \"child_changed\", \"child_removed\", or \"child_moved.\" If omitted, all callbacks\n * for the `Reference` will be removed.\n * @param callback - The callback function that was passed to `on()` or\n * `undefined` to remove all callbacks.\n */\nexport function off(\n  query: Query,\n  eventType?: EventType,\n  callback?: (\n    snapshot: DataSnapshot,\n    previousChildName?: string | null\n  ) => unknown\n): void {\n  let container: EventRegistration | null = null;\n  const expCallback = callback ? new CallbackContext(callback) : null;\n  if (eventType === 'value') {\n    container = new ValueEventRegistration(expCallback);\n  } else if (eventType) {\n    container = new ChildEventRegistration(eventType, expCallback);\n  }\n  repoRemoveEventCallbackForQuery(query._repo, query, container);\n}\n\n/** Describes the different query constraints available in this SDK. */\nexport type QueryConstraintType =\n  | 'endAt'\n  | 'endBefore'\n  | 'startAt'\n  | 'startAfter'\n  | 'limitToFirst'\n  | 'limitToLast'\n  | 'orderByChild'\n  | 'orderByKey'\n  | 'orderByPriority'\n  | 'orderByValue'\n  | 'equalTo';\n\n/**\n * A `QueryConstraint` is used to narrow the set of documents returned by a\n * Database query. `QueryConstraint`s are created by invoking {@link endAt},\n * {@link endBefore}, {@link startAt}, {@link startAfter}, {@link\n * limitToFirst}, {@link limitToLast}, {@link orderByChild},\n * {@link orderByChild}, {@link orderByKey} , {@link orderByPriority} ,\n * {@link orderByValue}  or {@link equalTo} and\n * can then be passed to {@link query} to create a new query instance that\n * also contains this `QueryConstraint`.\n */\nexport abstract class QueryConstraint {\n  /** The type of this query constraints */\n  abstract readonly type: QueryConstraintType;\n\n  /**\n   * Takes the provided `Query` and returns a copy of the `Query` with this\n   * `QueryConstraint` applied.\n   */\n  abstract _apply<T>(query: QueryImpl): QueryImpl;\n}\n\nclass QueryEndAtConstraint extends QueryConstraint {\n  readonly type: 'endAt';\n\n  constructor(\n    private readonly _value: number | string | boolean | null,\n    private readonly _key?: string\n  ) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateFirebaseDataArg('endAt', this._value, query._path, true);\n    const newParams = queryParamsEndAt(\n      query._queryParams,\n      this._value,\n      this._key\n    );\n    validateLimit(newParams);\n    validateQueryEndpoints(newParams);\n    if (query._queryParams.hasEnd()) {\n      throw new Error(\n        'endAt: Starting point was already set (by another call to endAt, ' +\n          'endBefore or equalTo).'\n      );\n    }\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      query._orderByCalled\n    );\n  }\n}\n\n/**\n * Creates a `QueryConstraint` with the specified ending point.\n *\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\n * allows you to choose arbitrary starting and ending points for your queries.\n *\n * The ending point is inclusive, so children with exactly the specified value\n * will be included in the query. The optional key argument can be used to\n * further limit the range of the query. If it is specified, then children that\n * have exactly the specified value must also have a key name less than or equal\n * to the specified key.\n *\n * You can read more about `endAt()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\n *\n * @param value - The value to end at. The argument type depends on which\n * `orderBy*()` function was used in this query. Specify a value that matches\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\n * value must be a string.\n * @param key - The child key to end at, among the children with the previously\n * specified priority. This argument is only allowed if ordering by child,\n * value, or priority.\n */\nexport function endAt(\n  value: number | string | boolean | null,\n  key?: string\n): QueryConstraint {\n  validateKey('endAt', 'key', key, true);\n  return new QueryEndAtConstraint(value, key);\n}\n\nclass QueryEndBeforeConstraint extends QueryConstraint {\n  readonly type: 'endBefore';\n\n  constructor(\n    private readonly _value: number | string | boolean | null,\n    private readonly _key?: string\n  ) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateFirebaseDataArg('endBefore', this._value, query._path, false);\n    const newParams = queryParamsEndBefore(\n      query._queryParams,\n      this._value,\n      this._key\n    );\n    validateLimit(newParams);\n    validateQueryEndpoints(newParams);\n    if (query._queryParams.hasEnd()) {\n      throw new Error(\n        'endBefore: Starting point was already set (by another call to endAt, ' +\n          'endBefore or equalTo).'\n      );\n    }\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      query._orderByCalled\n    );\n  }\n}\n\n/**\n * Creates a `QueryConstraint` with the specified ending point (exclusive).\n *\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\n * allows you to choose arbitrary starting and ending points for your queries.\n *\n * The ending point is exclusive. If only a value is provided, children\n * with a value less than the specified value will be included in the query.\n * If a key is specified, then children must have a value lesss than or equal\n * to the specified value and a a key name less than the specified key.\n *\n * @param value - The value to end before. The argument type depends on which\n * `orderBy*()` function was used in this query. Specify a value that matches\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\n * value must be a string.\n * @param key - The child key to end before, among the children with the\n * previously specified priority. This argument is only allowed if ordering by\n * child, value, or priority.\n */\nexport function endBefore(\n  value: number | string | boolean | null,\n  key?: string\n): QueryConstraint {\n  validateKey('endBefore', 'key', key, true);\n  return new QueryEndBeforeConstraint(value, key);\n}\n\nclass QueryStartAtConstraint extends QueryConstraint {\n  readonly type: 'startAt';\n\n  constructor(\n    private readonly _value: number | string | boolean | null,\n    private readonly _key?: string\n  ) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateFirebaseDataArg('startAt', this._value, query._path, true);\n    const newParams = queryParamsStartAt(\n      query._queryParams,\n      this._value,\n      this._key\n    );\n    validateLimit(newParams);\n    validateQueryEndpoints(newParams);\n    if (query._queryParams.hasStart()) {\n      throw new Error(\n        'startAt: Starting point was already set (by another call to startAt, ' +\n          'startBefore or equalTo).'\n      );\n    }\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      query._orderByCalled\n    );\n  }\n}\n\n/**\n * Creates a `QueryConstraint` with the specified starting point.\n *\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\n * allows you to choose arbitrary starting and ending points for your queries.\n *\n * The starting point is inclusive, so children with exactly the specified value\n * will be included in the query. The optional key argument can be used to\n * further limit the range of the query. If it is specified, then children that\n * have exactly the specified value must also have a key name greater than or\n * equal to the specified key.\n *\n * You can read more about `startAt()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\n *\n * @param value - The value to start at. The argument type depends on which\n * `orderBy*()` function was used in this query. Specify a value that matches\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\n * value must be a string.\n * @param key - The child key to start at. This argument is only allowed if\n * ordering by child, value, or priority.\n */\nexport function startAt(\n  value: number | string | boolean | null = null,\n  key?: string\n): QueryConstraint {\n  validateKey('startAt', 'key', key, true);\n  return new QueryStartAtConstraint(value, key);\n}\n\nclass QueryStartAfterConstraint extends QueryConstraint {\n  readonly type: 'startAfter';\n\n  constructor(\n    private readonly _value: number | string | boolean | null,\n    private readonly _key?: string\n  ) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateFirebaseDataArg('startAfter', this._value, query._path, false);\n    const newParams = queryParamsStartAfter(\n      query._queryParams,\n      this._value,\n      this._key\n    );\n    validateLimit(newParams);\n    validateQueryEndpoints(newParams);\n    if (query._queryParams.hasStart()) {\n      throw new Error(\n        'startAfter: Starting point was already set (by another call to startAt, ' +\n          'startAfter, or equalTo).'\n      );\n    }\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      query._orderByCalled\n    );\n  }\n}\n\n/**\n * Creates a `QueryConstraint` with the specified starting point (exclusive).\n *\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\n * allows you to choose arbitrary starting and ending points for your queries.\n *\n * The starting point is exclusive. If only a value is provided, children\n * with a value greater than the specified value will be included in the query.\n * If a key is specified, then children must have a value greater than or equal\n * to the specified value and a a key name greater than the specified key.\n *\n * @param value - The value to start after. The argument type depends on which\n * `orderBy*()` function was used in this query. Specify a value that matches\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\n * value must be a string.\n * @param key - The child key to start after. This argument is only allowed if\n * ordering by child, value, or priority.\n */\nexport function startAfter(\n  value: number | string | boolean | null,\n  key?: string\n): QueryConstraint {\n  validateKey('startAfter', 'key', key, true);\n  return new QueryStartAfterConstraint(value, key);\n}\n\nclass QueryLimitToFirstConstraint extends QueryConstraint {\n  readonly type: 'limitToFirst';\n\n  constructor(private readonly _limit: number) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    if (query._queryParams.hasLimit()) {\n      throw new Error(\n        'limitToFirst: Limit was already set (by another call to limitToFirst ' +\n          'or limitToLast).'\n      );\n    }\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      queryParamsLimitToFirst(query._queryParams, this._limit),\n      query._orderByCalled\n    );\n  }\n}\n\n/**\n * Creates a new `QueryConstraint` that if limited to the first specific number\n * of children.\n *\n * The `limitToFirst()` method is used to set a maximum number of children to be\n * synced for a given callback. If we set a limit of 100, we will initially only\n * receive up to 100 `child_added` events. If we have fewer than 100 messages\n * stored in our Database, a `child_added` event will fire for each message.\n * However, if we have over 100 messages, we will only receive a `child_added`\n * event for the first 100 ordered messages. As items change, we will receive\n * `child_removed` events for each item that drops out of the active list so\n * that the total number stays at 100.\n *\n * You can read more about `limitToFirst()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\n *\n * @param limit - The maximum number of nodes to include in this query.\n */\nexport function limitToFirst(limit: number): QueryConstraint {\n  if (typeof limit !== 'number' || Math.floor(limit) !== limit || limit <= 0) {\n    throw new Error('limitToFirst: First argument must be a positive integer.');\n  }\n  return new QueryLimitToFirstConstraint(limit);\n}\n\nclass QueryLimitToLastConstraint extends QueryConstraint {\n  readonly type: 'limitToLast';\n\n  constructor(private readonly _limit: number) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    if (query._queryParams.hasLimit()) {\n      throw new Error(\n        'limitToLast: Limit was already set (by another call to limitToFirst ' +\n          'or limitToLast).'\n      );\n    }\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      queryParamsLimitToLast(query._queryParams, this._limit),\n      query._orderByCalled\n    );\n  }\n}\n\n/**\n * Creates a new `QueryConstraint` that is limited to return only the last\n * specified number of children.\n *\n * The `limitToLast()` method is used to set a maximum number of children to be\n * synced for a given callback. If we set a limit of 100, we will initially only\n * receive up to 100 `child_added` events. If we have fewer than 100 messages\n * stored in our Database, a `child_added` event will fire for each message.\n * However, if we have over 100 messages, we will only receive a `child_added`\n * event for the last 100 ordered messages. As items change, we will receive\n * `child_removed` events for each item that drops out of the active list so\n * that the total number stays at 100.\n *\n * You can read more about `limitToLast()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\n *\n * @param limit - The maximum number of nodes to include in this query.\n */\nexport function limitToLast(limit: number): QueryConstraint {\n  if (typeof limit !== 'number' || Math.floor(limit) !== limit || limit <= 0) {\n    throw new Error('limitToLast: First argument must be a positive integer.');\n  }\n\n  return new QueryLimitToLastConstraint(limit);\n}\n\nclass QueryOrderByChildConstraint extends QueryConstraint {\n  readonly type: 'orderByChild';\n\n  constructor(private readonly _path: string) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateNoPreviousOrderByCall(query, 'orderByChild');\n    const parsedPath = new Path(this._path);\n    if (pathIsEmpty(parsedPath)) {\n      throw new Error(\n        'orderByChild: cannot pass in empty path. Use orderByValue() instead.'\n      );\n    }\n    const index = new PathIndex(parsedPath);\n    const newParams = queryParamsOrderBy(query._queryParams, index);\n    validateQueryEndpoints(newParams);\n\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      /*orderByCalled=*/ true\n    );\n  }\n}\n\n/**\n * Creates a new `QueryConstraint` that orders by the specified child key.\n *\n * Queries can only order by one key at a time. Calling `orderByChild()`\n * multiple times on the same query is an error.\n *\n * Firebase queries allow you to order your data by any child key on the fly.\n * However, if you know in advance what your indexes will be, you can define\n * them via the .indexOn rule in your Security Rules for better performance. See\n * the{@link https://firebase.google.com/docs/database/security/indexing-data}\n * rule for more information.\n *\n * You can read more about `orderByChild()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}.\n *\n * @param path - The path to order by.\n */\nexport function orderByChild(path: string): QueryConstraint {\n  if (path === '$key') {\n    throw new Error(\n      'orderByChild: \"$key\" is invalid.  Use orderByKey() instead.'\n    );\n  } else if (path === '$priority') {\n    throw new Error(\n      'orderByChild: \"$priority\" is invalid.  Use orderByPriority() instead.'\n    );\n  } else if (path === '$value') {\n    throw new Error(\n      'orderByChild: \"$value\" is invalid.  Use orderByValue() instead.'\n    );\n  }\n  validatePathString('orderByChild', 'path', path, false);\n  return new QueryOrderByChildConstraint(path);\n}\n\nclass QueryOrderByKeyConstraint extends QueryConstraint {\n  readonly type: 'orderByKey';\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateNoPreviousOrderByCall(query, 'orderByKey');\n    const newParams = queryParamsOrderBy(query._queryParams, KEY_INDEX);\n    validateQueryEndpoints(newParams);\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      /*orderByCalled=*/ true\n    );\n  }\n}\n\n/**\n * Creates a new `QueryConstraint` that orders by the key.\n *\n * Sorts the results of a query by their (ascending) key values.\n *\n * You can read more about `orderByKey()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}.\n */\nexport function orderByKey(): QueryConstraint {\n  return new QueryOrderByKeyConstraint();\n}\n\nclass QueryOrderByPriorityConstraint extends QueryConstraint {\n  readonly type: 'orderByPriority';\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateNoPreviousOrderByCall(query, 'orderByPriority');\n    const newParams = queryParamsOrderBy(query._queryParams, PRIORITY_INDEX);\n    validateQueryEndpoints(newParams);\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      /*orderByCalled=*/ true\n    );\n  }\n}\n\n/**\n * Creates a new `QueryConstraint` that orders by priority.\n *\n * Applications need not use priority but can order collections by\n * ordinary properties (see\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}\n * for alternatives to priority.\n */\nexport function orderByPriority(): QueryConstraint {\n  return new QueryOrderByPriorityConstraint();\n}\n\nclass QueryOrderByValueConstraint extends QueryConstraint {\n  readonly type: 'orderByValue';\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateNoPreviousOrderByCall(query, 'orderByValue');\n    const newParams = queryParamsOrderBy(query._queryParams, VALUE_INDEX);\n    validateQueryEndpoints(newParams);\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      /*orderByCalled=*/ true\n    );\n  }\n}\n\n/**\n * Creates a new `QueryConstraint` that orders by value.\n *\n * If the children of a query are all scalar values (string, number, or\n * boolean), you can order the results by their (ascending) values.\n *\n * You can read more about `orderByValue()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}.\n */\nexport function orderByValue(): QueryConstraint {\n  return new QueryOrderByValueConstraint();\n}\n\nclass QueryEqualToValueConstraint extends QueryConstraint {\n  readonly type: 'equalTo';\n\n  constructor(\n    private readonly _value: number | string | boolean | null,\n    private readonly _key?: string\n  ) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateFirebaseDataArg('equalTo', this._value, query._path, false);\n    if (query._queryParams.hasStart()) {\n      throw new Error(\n        'equalTo: Starting point was already set (by another call to startAt/startAfter or ' +\n          'equalTo).'\n      );\n    }\n    if (query._queryParams.hasEnd()) {\n      throw new Error(\n        'equalTo: Ending point was already set (by another call to endAt/endBefore or ' +\n          'equalTo).'\n      );\n    }\n    return new QueryEndAtConstraint(this._value, this._key)._apply(\n      new QueryStartAtConstraint(this._value, this._key)._apply(query)\n    );\n  }\n}\n\n/**\n * Creates a `QueryConstraint` that includes children that match the specified\n * value.\n *\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\n * allows you to choose arbitrary starting and ending points for your queries.\n *\n * The optional key argument can be used to further limit the range of the\n * query. If it is specified, then children that have exactly the specified\n * value must also have exactly the specified key as their key name. This can be\n * used to filter result sets with many matches for the same value.\n *\n * You can read more about `equalTo()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\n *\n * @param value - The value to match for. The argument type depends on which\n * `orderBy*()` function was used in this query. Specify a value that matches\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\n * value must be a string.\n * @param key - The child key to start at, among the children with the\n * previously specified priority. This argument is only allowed if ordering by\n * child, value, or priority.\n */\nexport function equalTo(\n  value: number | string | boolean | null,\n  key?: string\n): QueryConstraint {\n  validateKey('equalTo', 'key', key, true);\n  return new QueryEqualToValueConstraint(value, key);\n}\n\n/**\n * Creates a new immutable instance of `Query` that is extended to also include\n * additional query constraints.\n *\n * @param query - The Query instance to use as a base for the new constraints.\n * @param queryConstraints - The list of `QueryConstraint`s to apply.\n * @throws if any of the provided query constraints cannot be combined with the\n * existing or new constraints.\n */\nexport function query(\n  query: Query,\n  ...queryConstraints: QueryConstraint[]\n): Query {\n  let queryImpl = getModularInstance(query) as QueryImpl;\n  for (const constraint of queryConstraints) {\n    queryImpl = constraint._apply(queryImpl);\n  }\n  return queryImpl;\n}\n\n/**\n * Define reference constructor in various modules\n *\n * We are doing this here to avoid several circular\n * dependency issues\n */\nsyncPointSetReferenceConstructor(ReferenceImpl);\nsyncTreeSetReferenceConstructor(ReferenceImpl);\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport {\n  _FirebaseService,\n  _getProvider,\n  FirebaseApp,\n  getApp\n} from '@firebase/app';\nimport { AppCheckInternalComponentName } from '@firebase/app-check-interop-types';\nimport { FirebaseAuthInternalName } from '@firebase/auth-interop-types';\nimport { Provider } from '@firebase/component';\nimport {\n  getModularInstance,\n  createMockUserToken,\n  EmulatorMockTokenOptions\n} from '@firebase/util';\n\nimport { AppCheckTokenProvider } from '../core/AppCheckTokenProvider';\nimport {\n  AuthTokenProvider,\n  EmulatorTokenProvider,\n  FirebaseAuthTokenProvider\n} from '../core/AuthTokenProvider';\nimport { Repo, repoInterrupt, repoResume, repoStart } from '../core/Repo';\nimport { RepoInfo } from '../core/RepoInfo';\nimport { parseRepoInfo } from '../core/util/libs/parser';\nimport { newEmptyPath, pathIsEmpty } from '../core/util/Path';\nimport {\n  fatal,\n  log,\n  enableLogging as enableLoggingImpl\n} from '../core/util/util';\nimport { validateUrl } from '../core/util/validation';\n\nimport { ReferenceImpl } from './Reference_impl';\n\nexport { EmulatorMockTokenOptions } from '@firebase/util';\n/**\n * This variable is also defined in the firebase Node.js Admin SDK. Before\n * modifying this definition, consult the definition in:\n *\n * https://github.com/firebase/firebase-admin-node\n *\n * and make sure the two are consistent.\n */\nconst FIREBASE_DATABASE_EMULATOR_HOST_VAR = 'FIREBASE_DATABASE_EMULATOR_HOST';\n\n/**\n * Creates and caches `Repo` instances.\n */\nconst repos: {\n  [appName: string]: {\n    [dbUrl: string]: Repo;\n  };\n} = {};\n\n/**\n * If true, any new `Repo` will be created to use `ReadonlyRestClient` (for testing purposes).\n */\nlet useRestClient = false;\n\n/**\n * Update an existing `Repo` in place to point to a new host/port.\n */\nfunction repoManagerApplyEmulatorSettings(\n  repo: Repo,\n  host: string,\n  port: number,\n  tokenProvider?: AuthTokenProvider\n): void {\n  repo.repoInfo_ = new RepoInfo(\n    `${host}:${port}`,\n    /* secure= */ false,\n    repo.repoInfo_.namespace,\n    repo.repoInfo_.webSocketOnly,\n    repo.repoInfo_.nodeAdmin,\n    repo.repoInfo_.persistenceKey,\n    repo.repoInfo_.includeNamespaceInQueryParams\n  );\n\n  if (tokenProvider) {\n    repo.authTokenProvider_ = tokenProvider;\n  }\n}\n\n/**\n * This function should only ever be called to CREATE a new database instance.\n * @internal\n */\nexport function repoManagerDatabaseFromApp(\n  app: FirebaseApp,\n  authProvider: Provider<FirebaseAuthInternalName>,\n  appCheckProvider?: Provider<AppCheckInternalComponentName>,\n  url?: string,\n  nodeAdmin?: boolean\n): Database {\n  let dbUrl: string | undefined = url || app.options.databaseURL;\n  if (dbUrl === undefined) {\n    if (!app.options.projectId) {\n      fatal(\n        \"Can't determine Firebase Database URL. Be sure to include \" +\n          ' a Project ID when calling firebase.initializeApp().'\n      );\n    }\n\n    log('Using default host for project ', app.options.projectId);\n    dbUrl = `${app.options.projectId}-default-rtdb.firebaseio.com`;\n  }\n\n  let parsedUrl = parseRepoInfo(dbUrl, nodeAdmin);\n  let repoInfo = parsedUrl.repoInfo;\n\n  let isEmulator: boolean;\n\n  let dbEmulatorHost: string | undefined = undefined;\n  if (typeof process !== 'undefined') {\n    dbEmulatorHost = process.env[FIREBASE_DATABASE_EMULATOR_HOST_VAR];\n  }\n\n  if (dbEmulatorHost) {\n    isEmulator = true;\n    dbUrl = `http://${dbEmulatorHost}?ns=${repoInfo.namespace}`;\n    parsedUrl = parseRepoInfo(dbUrl, nodeAdmin);\n    repoInfo = parsedUrl.repoInfo;\n  } else {\n    isEmulator = !parsedUrl.repoInfo.secure;\n  }\n\n  const authTokenProvider =\n    nodeAdmin && isEmulator\n      ? new EmulatorTokenProvider(EmulatorTokenProvider.OWNER)\n      : new FirebaseAuthTokenProvider(app.name, app.options, authProvider);\n\n  validateUrl('Invalid Firebase Database URL', parsedUrl);\n  if (!pathIsEmpty(parsedUrl.path)) {\n    fatal(\n      'Database URL must point to the root of a Firebase Database ' +\n        '(not including a child path).'\n    );\n  }\n\n  const repo = repoManagerCreateRepo(\n    repoInfo,\n    app,\n    authTokenProvider,\n    new AppCheckTokenProvider(app.name, appCheckProvider)\n  );\n  return new Database(repo, app);\n}\n\n/**\n * Remove the repo and make sure it is disconnected.\n *\n */\nfunction repoManagerDeleteRepo(repo: Repo, appName: string): void {\n  const appRepos = repos[appName];\n  // This should never happen...\n  if (!appRepos || appRepos[repo.key] !== repo) {\n    fatal(`Database ${appName}(${repo.repoInfo_}) has already been deleted.`);\n  }\n  repoInterrupt(repo);\n  delete appRepos[repo.key];\n}\n\n/**\n * Ensures a repo doesn't already exist and then creates one using the\n * provided app.\n *\n * @param repoInfo - The metadata about the Repo\n * @returns The Repo object for the specified server / repoName.\n */\nfunction repoManagerCreateRepo(\n  repoInfo: RepoInfo,\n  app: FirebaseApp,\n  authTokenProvider: AuthTokenProvider,\n  appCheckProvider: AppCheckTokenProvider\n): Repo {\n  let appRepos = repos[app.name];\n\n  if (!appRepos) {\n    appRepos = {};\n    repos[app.name] = appRepos;\n  }\n\n  let repo = appRepos[repoInfo.toURLString()];\n  if (repo) {\n    fatal(\n      'Database initialized multiple times. Please make sure the format of the database URL matches with each database() call.'\n    );\n  }\n  repo = new Repo(repoInfo, useRestClient, authTokenProvider, appCheckProvider);\n  appRepos[repoInfo.toURLString()] = repo;\n\n  return repo;\n}\n\n/**\n * Forces us to use ReadonlyRestClient instead of PersistentConnection for new Repos.\n */\nexport function repoManagerForceRestClient(forceRestClient: boolean): void {\n  useRestClient = forceRestClient;\n}\n\n/**\n * Class representing a Firebase Realtime Database.\n */\nexport class Database implements _FirebaseService {\n  /** Represents a `Database` instance. */\n  readonly 'type' = 'database';\n\n  /** Track if the instance has been used (root or repo accessed) */\n  _instanceStarted: boolean = false;\n\n  /** Backing state for root_ */\n  private _rootInternal?: ReferenceImpl;\n\n  /** @hideconstructor */\n  constructor(\n    public _repoInternal: Repo,\n    /** The {@link @firebase/app#FirebaseApp} associated with this Realtime Database instance. */\n    readonly app: FirebaseApp\n  ) {}\n\n  get _repo(): Repo {\n    if (!this._instanceStarted) {\n      repoStart(\n        this._repoInternal,\n        this.app.options.appId,\n        this.app.options['databaseAuthVariableOverride']\n      );\n      this._instanceStarted = true;\n    }\n    return this._repoInternal;\n  }\n\n  get _root(): ReferenceImpl {\n    if (!this._rootInternal) {\n      this._rootInternal = new ReferenceImpl(this._repo, newEmptyPath());\n    }\n    return this._rootInternal;\n  }\n\n  _delete(): Promise<void> {\n    if (this._rootInternal !== null) {\n      repoManagerDeleteRepo(this._repo, this.app.name);\n      this._repoInternal = null;\n      this._rootInternal = null;\n    }\n    return Promise.resolve();\n  }\n\n  _checkNotDeleted(apiName: string) {\n    if (this._rootInternal === null) {\n      fatal('Cannot call ' + apiName + ' on a deleted database.');\n    }\n  }\n}\n\n/**\n * Returns the instance of the Realtime Database SDK that is associated\n * with the provided {@link @firebase/app#FirebaseApp}. Initializes a new instance with\n * with default settings if no instance exists or if the existing instance uses\n * a custom database URL.\n *\n * @param app - The {@link @firebase/app#FirebaseApp} instance that the returned Realtime\n * Database instance is associated with.\n * @param url - The URL of the Realtime Database instance to connect to. If not\n * provided, the SDK connects to the default instance of the Firebase App.\n * @returns The `Database` instance of the provided app.\n */\nexport function getDatabase(\n  app: FirebaseApp = getApp(),\n  url?: string\n): Database {\n  return _getProvider(app, 'database').getImmediate({\n    identifier: url\n  }) as Database;\n}\n\n/**\n * Modify the provided instance to communicate with the Realtime Database\n * emulator.\n *\n * <p>Note: This method must be called before performing any other operation.\n *\n * @param db - The instance to modify.\n * @param host - The emulator host (ex: localhost)\n * @param port - The emulator port (ex: 8080)\n * @param options.mockUserToken - the mock auth token to use for unit testing Security Rules\n */\nexport function connectDatabaseEmulator(\n  db: Database,\n  host: string,\n  port: number,\n  options: {\n    mockUserToken?: EmulatorMockTokenOptions | string;\n  } = {}\n): void {\n  db = getModularInstance(db);\n  db._checkNotDeleted('useEmulator');\n  if (db._instanceStarted) {\n    fatal(\n      'Cannot call useEmulator() after instance has already been initialized.'\n    );\n  }\n\n  const repo = db._repoInternal;\n  let tokenProvider: EmulatorTokenProvider | undefined = undefined;\n  if (repo.repoInfo_.nodeAdmin) {\n    if (options.mockUserToken) {\n      fatal(\n        'mockUserToken is not supported by the Admin SDK. For client access with mock users, please use the \"firebase\" package instead of \"firebase-admin\".'\n      );\n    }\n    tokenProvider = new EmulatorTokenProvider(EmulatorTokenProvider.OWNER);\n  } else if (options.mockUserToken) {\n    const token =\n      typeof options.mockUserToken === 'string'\n        ? options.mockUserToken\n        : createMockUserToken(options.mockUserToken, db.app.options.projectId);\n    tokenProvider = new EmulatorTokenProvider(token);\n  }\n\n  // Modify the repo to apply emulator settings\n  repoManagerApplyEmulatorSettings(repo, host, port, tokenProvider);\n}\n\n/**\n * Disconnects from the server (all Database operations will be completed\n * offline).\n *\n * The client automatically maintains a persistent connection to the Database\n * server, which will remain active indefinitely and reconnect when\n * disconnected. However, the `goOffline()` and `goOnline()` methods may be used\n * to control the client connection in cases where a persistent connection is\n * undesirable.\n *\n * While offline, the client will no longer receive data updates from the\n * Database. However, all Database operations performed locally will continue to\n * immediately fire events, allowing your application to continue behaving\n * normally. Additionally, each operation performed locally will automatically\n * be queued and retried upon reconnection to the Database server.\n *\n * To reconnect to the Database and begin receiving remote events, see\n * `goOnline()`.\n *\n * @param db - The instance to disconnect.\n */\nexport function goOffline(db: Database): void {\n  db = getModularInstance(db);\n  db._checkNotDeleted('goOffline');\n  repoInterrupt(db._repo);\n}\n\n/**\n * Reconnects to the server and synchronizes the offline Database state\n * with the server state.\n *\n * This method should be used after disabling the active connection with\n * `goOffline()`. Once reconnected, the client will transmit the proper data\n * and fire the appropriate events so that your client \"catches up\"\n * automatically.\n *\n * @param db - The instance to reconnect.\n */\nexport function goOnline(db: Database): void {\n  db = getModularInstance(db);\n  db._checkNotDeleted('goOnline');\n  repoResume(db._repo);\n}\n\n/**\n * Logs debugging information to the console.\n *\n * @param enabled - Enables logging if `true`, disables logging if `false`.\n * @param persistent - Remembers the logging state between page refreshes if\n * `true`.\n */\nexport function enableLogging(enabled: boolean, persistent?: boolean);\n\n/**\n * Logs debugging information to the console.\n *\n * @param logger - A custom logger function to control how things get logged.\n */\nexport function enableLogging(logger: (message: string) => unknown);\n\nexport function enableLogging(\n  logger: boolean | ((message: string) => unknown),\n  persistent?: boolean\n): void {\n  enableLoggingImpl(logger, persistent);\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport {\n  _registerComponent,\n  registerVersion,\n  SDK_VERSION\n} from '@firebase/app';\nimport { Component, ComponentType } from '@firebase/component';\n\nimport { name, version } from '../package.json';\nimport { setSDKVersion } from '../src/core/version';\n\nimport { repoManagerDatabaseFromApp } from './api/Database';\n\nexport function registerDatabase(variant?: string): void {\n  setSDKVersion(SDK_VERSION);\n  _registerComponent(\n    new Component(\n      'database',\n      (container, { instanceIdentifier: url }) => {\n        const app = container.getProvider('app').getImmediate()!;\n        const authProvider = container.getProvider('auth-internal');\n        const appCheckProvider = container.getProvider('app-check-internal');\n        return repoManagerDatabaseFromApp(\n          app,\n          authProvider,\n          appCheckProvider,\n          url\n        );\n      },\n      ComponentType.PUBLIC\n    ).setMultipleInstances(true)\n  );\n  registerVersion(name, version, variant);\n  // BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\n  registerVersion(name, version, '__BUILD_TARGET__');\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst SERVER_TIMESTAMP = {\n  '.sv': 'timestamp'\n};\n\n/**\n * Returns a placeholder value for auto-populating the current timestamp (time\n * since the Unix epoch, in milliseconds) as determined by the Firebase\n * servers.\n */\nexport function serverTimestamp(): object {\n  return SERVER_TIMESTAMP;\n}\n\n/**\n * Returns a placeholder value that can be used to atomically increment the\n * current database value by the provided delta.\n *\n * @param delta - the amount to modify the current value atomically.\n * @returns A placeholder value for modifying data atomically server-side.\n */\nexport function increment(delta: number): object {\n  return {\n    '.sv': {\n      'increment': delta\n    }\n  };\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getModularInstance, Deferred } from '@firebase/util';\n\nimport { repoStartTransaction } from '../core/Repo';\nimport { PRIORITY_INDEX } from '../core/snap/indexes/PriorityIndex';\nimport { Node } from '../core/snap/Node';\nimport { validateWritablePath } from '../core/util/validation';\n\nimport { DatabaseReference } from './Reference';\nimport { DataSnapshot, onValue, ReferenceImpl } from './Reference_impl';\n\n/** An options object to configure transactions. */\nexport interface TransactionOptions {\n  /**\n   * By default, events are raised each time the transaction update function\n   * runs. So if it is run multiple times, you may see intermediate states. You\n   * can set this to false to suppress these intermediate states and instead\n   * wait until the transaction has completed before events are raised.\n   */\n  readonly applyLocally?: boolean;\n}\n\n/**\n * A type for the resolve value of {@link runTransaction}.\n */\nexport class TransactionResult {\n  /** @hideconstructor */\n  constructor(\n    /** Whether the transaction was successfully committed. */\n    readonly committed: boolean,\n    /** The resulting data snapshot. */\n    readonly snapshot: DataSnapshot\n  ) {}\n\n  /** Returns a JSON-serializable representation of this object. */\n  toJSON(): object {\n    return { committed: this.committed, snapshot: this.snapshot.toJSON() };\n  }\n}\n\n/**\n * Atomically modifies the data at this location.\n *\n * Atomically modify the data at this location. Unlike a normal `set()`, which\n * just overwrites the data regardless of its previous value, `runTransaction()` is\n * used to modify the existing value to a new value, ensuring there are no\n * conflicts with other clients writing to the same location at the same time.\n *\n * To accomplish this, you pass `runTransaction()` an update function which is\n * used to transform the current value into a new value. If another client\n * writes to the location before your new value is successfully written, your\n * update function will be called again with the new current value, and the\n * write will be retried. This will happen repeatedly until your write succeeds\n * without conflict or you abort the transaction by not returning a value from\n * your update function.\n *\n * Note: Modifying data with `set()` will cancel any pending transactions at\n * that location, so extreme care should be taken if mixing `set()` and\n * `runTransaction()` to update the same data.\n *\n * Note: When using transactions with Security and Firebase Rules in place, be\n * aware that a client needs `.read` access in addition to `.write` access in\n * order to perform a transaction. This is because the client-side nature of\n * transactions requires the client to read the data in order to transactionally\n * update it.\n *\n * @param ref - The location to atomically modify.\n * @param transactionUpdate - A developer-supplied function which will be passed\n * the current data stored at this location (as a JavaScript object). The\n * function should return the new value it would like written (as a JavaScript\n * object). If `undefined` is returned (i.e. you return with no arguments) the\n * transaction will be aborted and the data at this location will not be\n * modified.\n * @param options - An options object to configure transactions.\n * @returns A `Promise` that can optionally be used instead of the `onComplete`\n * callback to handle success and failure.\n */\nexport function runTransaction(\n  ref: DatabaseReference,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  transactionUpdate: (currentData: any) => unknown,\n  options?: TransactionOptions\n): Promise<TransactionResult> {\n  ref = getModularInstance(ref);\n\n  validateWritablePath('Reference.transaction', ref._path);\n\n  if (ref.key === '.length' || ref.key === '.keys') {\n    throw (\n      'Reference.transaction failed: ' + ref.key + ' is a read-only object.'\n    );\n  }\n\n  const applyLocally = options?.applyLocally ?? true;\n  const deferred = new Deferred<TransactionResult>();\n\n  const promiseComplete = (\n    error: Error | null,\n    committed: boolean,\n    node: Node | null\n  ) => {\n    let dataSnapshot: DataSnapshot | null = null;\n    if (error) {\n      deferred.reject(error);\n    } else {\n      dataSnapshot = new DataSnapshot(\n        node,\n        new ReferenceImpl(ref._repo, ref._path),\n        PRIORITY_INDEX\n      );\n      deferred.resolve(new TransactionResult(committed, dataSnapshot));\n    }\n  };\n\n  // Add a watch to make sure we get server updates.\n  const unwatcher = onValue(ref, () => {});\n\n  repoStartTransaction(\n    ref._repo,\n    ref._path,\n    transactionUpdate,\n    promiseComplete,\n    unwatcher,\n    applyLocally\n  );\n\n  return deferred.promise;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { PersistentConnection } from '../core/PersistentConnection';\nimport { RepoInfo } from '../core/RepoInfo';\nimport { Connection } from '../realtime/Connection';\n\nimport { repoManagerForceRestClient } from './Database';\n\nexport const DataConnection = PersistentConnection;\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n(PersistentConnection.prototype as any).simpleListen = function (\n  pathString: string,\n  onComplete: (a: unknown) => void\n) {\n  this.sendRequest('q', { p: pathString }, onComplete);\n};\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n(PersistentConnection.prototype as any).echo = function (\n  data: unknown,\n  onEcho: (a: unknown) => void\n) {\n  this.sendRequest('echo', { d: data }, onEcho);\n};\n\n// RealTimeConnection properties that we use in tests.\nexport const RealTimeConnection = Connection;\n\n/**\n * @internal\n */\nexport const hijackHash = function (newHash: () => string) {\n  const oldPut = PersistentConnection.prototype.put;\n  PersistentConnection.prototype.put = function (\n    pathString,\n    data,\n    onComplete,\n    hash\n  ) {\n    if (hash !== undefined) {\n      hash = newHash();\n    }\n    oldPut.call(this, pathString, data, onComplete, hash);\n  };\n  return function () {\n    PersistentConnection.prototype.put = oldPut;\n  };\n};\n\nexport const ConnectionTarget = RepoInfo;\n\n/**\n * Forces the RepoManager to create Repos that use ReadonlyRestClient instead of PersistentConnection.\n * @internal\n */\nexport const forceRestClient = function (forceRestClient: boolean) {\n  repoManagerForceRestClient(forceRestClient);\n};\n","/**\n * Firebase Realtime Database\n *\n * @packageDocumentation\n */\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Database } from './api/Database';\nimport { registerDatabase } from './register';\n\nexport * from './api';\n\nregisterDatabase();\n\ndeclare module '@firebase/component' {\n  interface NameServiceMapping {\n    'database': Database;\n  }\n}\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n"],"names":["appName","appCompatName","analyticsName","analyticsCompatName","appCheckName","appCheckCompatName","authName","authCompatName","databaseName","databaseCompatName","functionsName","functionsCompatName","installationsName","installationsCompatName","messagingName","messagingCompatName","performanceName","performanceCompatName","remoteConfigName","remoteConfigCompatName","storageName","storageCompatName","firestoreName","firestoreCompatName","packageName","setLogLevelImpl","name","version","stringToByteArray","enableLogging","MAX_NODE","setMaxNode","nodeFromJSON","setPriorityMaxNode","referenceConstructor","errorPrefixFxn","errorPrefix","enableLoggingImpl","SDK_VERSION"],"version":3,"file":"index.6b815632.js.map","sourceRoot":"/__parcel_source_root/"}